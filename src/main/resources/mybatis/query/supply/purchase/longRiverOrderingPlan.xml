<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="supply.purchase">
	
	<select id="longRiverOrderingPlanListPlanIdSelect" parameterType="map" resultType="map">
		/****** [ supply.purchase.longRiverOrderingPlanListPlanIdSelect ] ******/
	  	SELECT PLAN_ID AS CODE_CD
	  	     , PLAN_ID AS CODE_NM
	  	FROM TB_MST_PLAN_VERSION A1 WITH(NOLOCK)
	  	WHERE COMPANY_CD = @{GV_COMPANY_CD}
	      AND BU_CD = @{GV_BU_CD}
	      AND PLAN_TYPE_CD = 'MP'
		ORDER BY START_WEEK DESC
	</select>
	
	<select id="longRiverOrderingPlanListSelect" parameterType="map" resultType="map">
		/****** [ supply.purchase.longRiverOrderingPlanListSelect ] ******/
		DECLARE @YYYYMMDD_MAT_GR_SCHED_DAILY NVARCHAR(8);
		DECLARE	@YEARWEEK_ORG_QTY_W0 NVARCHAR(6);
		DECLARE @YEARWEEK_ORG_QTY_W1 NVARCHAR(6);
		DECLARE @YEARWEEK_ORG_QTY_W2 NVARCHAR(6);
		DECLARE @YEARWEEK_ORG_QTY_W3 NVARCHAR(6);
		DECLARE @YEARWEEK_ORG_QTY_W4 NVARCHAR(6);
		
		DECLARE @YEARMONTH_ORG_QTY_M0 NVARCHAR(6);
		DECLARE @YEARMONTH_ORG_QTY_M1 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M2 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M3 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M4 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M5 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M6 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M7 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M8 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M9 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M10 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M11 NVARCHAR(6);		
		DECLARE @YEARMONTH_ORG_QTY_M12 NVARCHAR(6);		
		
		
		SET @YYYYMMDD_MAT_GR_SCHED_DAILY = CONVERT(NVARCHAR(8), DBO.UFN_GETDATE(),112);
		
		
		SELECT @YEARWEEK_ORG_QTY_W0 =  APS_START_WEEK
				FROM TB_MST_PLAN_VERSION A1 WITH(NOLOCK)
			 	WHERE COMPANY_CD = @{GV_COMPANY_CD}
			    AND BU_CD      = @{GV_BU_CD}
			    AND PLAN_TYPE_CD = 'MP'
				AND PLAN_ID = @{planId}
				ORDER BY START_WEEK DESC
		
		SELECT TOP 1 @YEARWEEK_ORG_QTY_W1 = YEARWEEK
			FROM TB_MST_CALENDAR WITH(NOLOCK)
			WHERE YEARWEEK > @YEARWEEK_ORG_QTY_W0
			ORDER BY YYYYMMDD
		
		SELECT TOP 1 @YEARWEEK_ORG_QTY_W2 = YEARWEEK
			FROM TB_MST_CALENDAR WITH(NOLOCK)
			WHERE YEARWEEK > @YEARWEEK_ORG_QTY_W1
			ORDER BY YYYYMMDD
		
		SELECT TOP 1 @YEARWEEK_ORG_QTY_W3 = YEARWEEK
			FROM TB_MST_CALENDAR WITH(NOLOCK)
			WHERE YEARWEEK > @YEARWEEK_ORG_QTY_W2
			ORDER BY YYYYMMDD
		
		SELECT TOP 1 @YEARWEEK_ORG_QTY_W4 = YEARWEEK
			FROM TB_MST_CALENDAR WITH(NOLOCK)
			WHERE YEARWEEK > @YEARWEEK_ORG_QTY_W3
			ORDER BY YYYYMMDD
			
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M0	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARWEEK = @YEARWEEK_ORG_QTY_W0
		ORDER BY YYYYMMDD
		
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M1	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M0
		ORDER BY YYYYMMDD
		
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M2	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M1
		ORDER BY YYYYMMDD		
		
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M3	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M2
		ORDER BY YYYYMMDD		
	
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M4	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M3
		ORDER BY YYYYMMDD		

		SELECT TOP 1 @YEARMONTH_ORG_QTY_M5	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M4
		ORDER BY YYYYMMDD		

		SELECT TOP 1 @YEARMONTH_ORG_QTY_M6	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M5
		ORDER BY YYYYMMDD		
		
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M7	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M6
		ORDER BY YYYYMMDD		
				
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M8	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M7
		ORDER BY YYYYMMDD		

		SELECT TOP 1 @YEARMONTH_ORG_QTY_M9	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M8
		ORDER BY YYYYMMDD		
		
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M10	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M9
		ORDER BY YYYYMMDD		
		
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M11	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M10
		ORDER BY YYYYMMDD		
		
		SELECT TOP 1 @YEARMONTH_ORG_QTY_M12	= YEARMONTH 
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARMONTH > @YEARMONTH_ORG_QTY_M11
		ORDER BY YYYYMMDD;	
		
		
		
		WITH W_MEASURE AS 
		(
				SELECT CATEGORY_CD
				     , CATEGORY_NM
				     , CATEGORY_IDX 
			    FROM 
			    (
					SELECT NULL AS CATEGORY_CD
				       	 , NULL AS CATEGORY_NM
				       	 , NULL AS CATEGORY_IDX
					#foreach( $meaMap in $_parameter.meaList )
				    UNION ALL 
				    SELECT '$meaMap.CD'
				         , '$meaMap.NM'
				         , $foreach.count 
					#end
				) A
			    WHERE CATEGORY_CD IS NOT NULL
		),
		
		W_MAT_GR_SCHED_DAILY AS
		(
							
				SELECT A.COMPANY_CD
				, A.BU_CD
				, A.ITEM_CD
				, SUM(CASE WHEN A.YEARWEEK = @YEARWEEK_ORG_QTY_W1 THEN A.SCHED_QTY END) AS ORG_QTY_W1
				, SUM(CASE WHEN A.YEARWEEK = @YEARWEEK_ORG_QTY_W2 THEN A.SCHED_QTY END) AS ORG_QTY_W2
				, SUM(CASE WHEN A.YEARWEEK = @YEARWEEK_ORG_QTY_W3 THEN A.SCHED_QTY END) AS ORG_QTY_W3
				, SUM(CASE WHEN A.YEARWEEK = @YEARWEEK_ORG_QTY_W4 THEN A.SCHED_QTY END) AS ORG_QTY_W4
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M0 THEN A.SCHED_QTY END) AS ORG_QTY_M0
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M1 THEN A.SCHED_QTY END) AS ORG_QTY_M1
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M2 THEN A.SCHED_QTY END) AS ORG_QTY_M2
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M3 THEN A.SCHED_QTY END) AS ORG_QTY_M3
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M4 THEN A.SCHED_QTY END) AS ORG_QTY_M4
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M5 THEN A.SCHED_QTY END) AS ORG_QTY_M5
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M6 THEN A.SCHED_QTY END) AS ORG_QTY_M6
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M7 THEN A.SCHED_QTY END) AS ORG_QTY_M7
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M8 THEN A.SCHED_QTY END) AS ORG_QTY_M8
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M9 THEN A.SCHED_QTY END) AS ORG_QTY_M9
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M10 THEN A.SCHED_QTY END) AS ORG_QTY_M10
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M11 THEN A.SCHED_QTY END) AS ORG_QTY_M11
				, SUM(CASE WHEN A.YEARMONTH = @YEARMONTH_ORG_QTY_M12 THEN A.SCHED_QTY END) AS ORG_QTY_M12
				FROM
				(
				
						SELECT MGSD.COMPANY_CD
						, MGSD.BU_CD
						, MGSD.ITEM_CD
						, MGSD.ORG_DATE
						, MC.YEARWEEK
						, MC.YEARMONTH
						, MGSD.SCHED_QTY
				
						FROM TB_MST_ITEM MI WITH (NOLOCK)
						INNER JOIN TB_MST_ITEM_PLANT MIP WITH (NOLOCK)
						ON MIP.COMPANY_CD = MI.COMPANY_CD
						AND MIP.BU_CD = MI.BU_CD
						AND MIP.PLANT_CD = 'WF01'
						AND MIP.ITEM_CD = MI.ITEM_CD
				
						INNER JOIN UV_MAT_GR_SCHED_DAILY MGSD WITH (NOLOCK)
						ON MGSD.COMPANY_CD = MI.COMPANY_CD
						AND MGSD.BU_CD = MI.BU_CD
						AND MGSD.YYYYMMDD = @YYYYMMDD_MAT_GR_SCHED_DAILY -- 발주 정보는 매일 업데이트 되므로, [장납기 발주계획]이 생성되는 매주 목요일이후부터 조회시점기준날짜로 조회된 [자재입고 예정정보]로 장납기 발주계획 [ORIGINAL_DATE, GAP]의 미래소요량을 산출해야함
						AND MGSD.ITEM_CD = MI.ITEM_CD
				
						INNER JOIN TB_MST_CALENDAR MC WITH(NOLOCK)
						ON MGSD.ORG_DATE = MC.YYYYMMDD
				
						WHERE MGSD.COMPANY_CD  = @{GV_COMPANY_CD}
						AND MGSD.BU_CD		   = @{GV_BU_CD}
						AND MGSD.YYYYMMDD	   = @YYYYMMDD_MAT_GR_SCHED_DAILY
				) A
				GROUP BY A.COMPANY_CD
				, A.BU_CD
				, A.ITEM_CD
						
		)
		
		SELECT NULL AS TMP_COL
			#foreach( $dimMap in $_parameter.dimList )
			#if($dimMap.DIM_CD == "PUR_LT")
			 , CASE WHEN GRP_LVL_ID = 0 THEN B.$dimMap.DIM_CD ELSE NULL END ${dimMap.DIM_CD}
			 , CASE WHEN GRP_LVL_ID = 0 THEN B.${dimMap.DIM_CD}_NM ELSE NULL END ${dimMap.DIM_CD}_NM 
			#else
			 , B.$dimMap.DIM_CD
			 , B.${dimMap.DIM_CD}_NM AS ${dimMap.DIM_CD}_NM
			#end
			#end
		     , GRP_LVL_ID
	         , CATEGORY_CD
	         , CATEGORY_NM
	         , CATEGORY_IDX
			 , PLAN_ID
			 , PLAN_ID_NM
			 , GRP_LVL_ID
			 , CASE WHEN GRP_LVL_ID = 0 THEN 'Y' ELSE 'N' END TOP_ITEM
			 , CASE WHEN GRP_LVL_ID = 0 THEN 'Y' ELSE 'N' END DETAIL_INFO
			 , CASE WHEN B.GRP_LVL_ID = 0 THEN MAT_ISSUE_FLAG ELSE NULL END MAT_ISSUE_FLAG 
			 , GI_QTY_Y1 
			 , GI_QTY_Y0 
			 , GI_QTY_M6 
			 , GI_QTY_M5 
			 , GI_QTY_M4 
			 , GI_QTY_M3 
			 , GI_QTY_M2 
			 , GI_QTY_M1 
			 , GI_QTY_M0 
			 , MOL_QTY 
			 , GR_SCHED_QTY
			 , MRP_QTY_W1 
			 , MRP_QTY_W2 
			 , MRP_QTY_W3 
			 , MRP_QTY_W4 
			 , MRP_QTY_M0 
			 , MRP_QTY_M1 
			 , MRP_QTY_M2 
			 , MRP_QTY_M3 
			 , MRP_QTY_M4 
			 , MRP_QTY_M5 
			 , MRP_QTY_M6 
			 , MRP_QTY_M7 
			 , MRP_QTY_M8 
			 , MRP_QTY_M9 
			 , MRP_QTY_M10 
			 , MRP_QTY_M11 
			 , MRP_QTY_M12
			 , MRP_TOTAL 
			 , LT_REQ_QTY 
			 , SS_QTY 
			 , PO_PLAN_QTY 
			 , M3_RATE 
			 , M6_RATE 
			 , ADJ_PO_PLAN_QTY
			 , CASE WHEN B.GRP_LVL_ID = 0 THEN REMARK ELSE NULL END REMARK
			 , ISNULL(ABS(GI_QTY_Y1), 0) 
			 + ISNULL(ABS(GI_QTY_Y0), 0)
			 + ISNULL(ABS(GI_QTY_M6), 0)
			 + ISNULL(ABS(GI_QTY_M5), 0)
			 + ISNULL(ABS(GI_QTY_M4), 0)
			 + ISNULL(ABS(GI_QTY_M3), 0)
			 + ISNULL(ABS(GI_QTY_M2), 0)
			 + ISNULL(ABS(GI_QTY_M1), 0)
			 + ISNULL(ABS(GI_QTY_M0), 0)
			 + ISNULL(ABS(MOL_QTY), 0)
			 + ISNULL(ABS(GR_SCHED_QTY), 0)
			 + ISNULL(ABS(MRP_QTY_W1), 0)
			 + ISNULL(ABS(MRP_QTY_W2), 0)
			 + ISNULL(ABS(MRP_QTY_W3), 0)
			 + ISNULL(ABS(MRP_QTY_W4), 0)
			 + ISNULL(ABS(MRP_QTY_M0), 0)
			 + ISNULL(ABS(MRP_QTY_M1), 0)
			 + ISNULL(ABS(MRP_QTY_M2), 0)
			 + ISNULL(ABS(MRP_QTY_M3), 0)
			 + ISNULL(ABS(MRP_QTY_M4), 0)
			 + ISNULL(ABS(MRP_QTY_M5), 0)
			 + ISNULL(ABS(MRP_QTY_M6), 0)
			 + ISNULL(ABS(MRP_QTY_M7), 0)
			 + ISNULL(ABS(MRP_QTY_M8), 0)
			 + ISNULL(ABS(MRP_QTY_M9), 0)
			 + ISNULL(ABS(MRP_QTY_M10), 0)
			 + ISNULL(ABS(MRP_QTY_M11), 0)
			 + ISNULL(ABS(MRP_QTY_M12), 0)
			 + ISNULL(ABS(LT_REQ_QTY), 0)
			 + ISNULL(ABS(SS_QTY), 0)
			 + ISNULL(ABS(PO_PLAN_QTY), 0)
			 AS OMIT_FLAG
		FROM
		(
		
		 	SELECT NULL AS TMP_COL
				<include refid="include.getCdDimTotal"/>
			    <include refid="include.getGrpLvlId"/>
			    , M.CATEGORY_CD
	            , M.CATEGORY_NM
	            , M.CATEGORY_IDX
			    , MAX(MAT_ISSUE_FLAG) AS MAT_ISSUE_FLAG
			    , SUM(GI_QTY_Y1) AS GI_QTY_Y1
			    , SUM(GI_QTY_Y0) AS GI_QTY_Y0
			    , SUM(GI_QTY_M6) AS GI_QTY_M6
			    , SUM(GI_QTY_M5) AS GI_QTY_M5
			    , SUM(GI_QTY_M4) AS GI_QTY_M4
			    , SUM(GI_QTY_M3) AS GI_QTY_M3
			    , SUM(GI_QTY_M2) AS GI_QTY_M2
			    , SUM(GI_QTY_M1) AS GI_QTY_M1
			    , SUM(GI_QTY_M0) AS GI_QTY_M0
			    , SUM(MOL_QTY) AS MOL_QTY
			    , SUM(GR_SCHED_QTY) AS GR_SCHED_QTY
			    
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' 	THEN A.MRP_QTY_W1 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_W1 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_W1 
			      		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_W1
			      		   ELSE 0 END													) AS MRP_QTY_W1
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_W2 
			               WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_W2 
			               WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_W2 
			               WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_W2
			               ELSE 0 END													) AS MRP_QTY_W2
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_W3 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_W3 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_W3 
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_W3
			    		   ELSE 0 END													) AS MRP_QTY_W3
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_W4 
			               WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_W4 
			               WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_W4 
			               WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_W4
			               ELSE 0 END													) AS MRP_QTY_W4
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M0 
			               WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M0 
			               WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M0 
			               WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M0
			               ELSE 0 END													) AS MRP_QTY_M0
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M1 
			               WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M1 
			               WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M1 
			               WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M1
			               ELSE 0 END													) AS MRP_QTY_M1
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M2 
			               WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M2 
			               WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M2 
			               WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M2
			               ELSE 0 END													) AS MRP_QTY_M2
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M3 
			               WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M3 
			               WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M3 
			               WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M3
			               ELSE 0 END													) AS MRP_QTY_M3
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M4 
			               WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M4 
			               WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M4 
			               WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M4
			               ELSE 0 END													) AS MRP_QTY_M4
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M5 
			               WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M5 
			               WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M5 
			               WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M5
			               ELSE 0 END													) AS MRP_QTY_M5
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M6 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M6 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M6 
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M6
			    		   ELSE 0 END													) AS MRP_QTY_M6
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M7 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M7 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M7 
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M7
			    		   ELSE 0 END													) AS MRP_QTY_M7
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M8 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M8 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M8 
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M8
			    		   ELSE 0 END													) AS MRP_QTY_M8
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M9 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M9 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M9 
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M9
			    		   ELSE 0 END													) AS MRP_QTY_M9
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M10 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M10 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M10 
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M10
			    		   ELSE 0 END													) AS MRP_QTY_M10
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M11 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M11 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M11 
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M11
			    		   ELSE 0 END													) AS MRP_QTY_M11
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY' THEN A.MRP_QTY_M12 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_QTY_M12 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_M12 
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'   	THEN A.BOH_QTY_M12
			    		   ELSE 0 END													) AS MRP_QTY_M12
			    , SUM(CASE WHEN M.CATEGORY_CD = 'PRE_REQ_QTY'   THEN A.MRP_TOTAL 
			    		   WHEN M.CATEGORY_CD = 'ORIGINAL_DATE' THEN A.ORG_TOTAL 
			    		   WHEN M.CATEGORY_CD = 'GAP' 			THEN A.GAP_TOTAL
			    		   WHEN M.CATEGORY_CD = 'BOH_MOL'		THEN A.BOH_TOTAL	
			    		   ELSE 0 END
			      ) AS MRP_TOTAL
			    
			    
			    , SUM(LT_REQ_QTY) AS LT_REQ_QTY
			    , SUM(SS_QTY) AS SS_QTY
			    , SUM(PO_PLAN_QTY) AS PO_PLAN_QTY
			    , SUM(M3_RATE) AS M3_RATE
			    , SUM(M6_RATE) AS M6_RATE
			    , SUM(ADJ_PO_PLAN_QTY) AS ADJ_PO_PLAN_QTY
			    , MAX(REMARK) AS REMARK
			    , @{planId} AS PLAN_ID
			    , @{planId} AS PLAN_ID_NM
			FROM
			(
				SELECT ISNULL(MI.ITEM_GROUP_CD, ' ') AS ITEM_GROUP_CD
				     , ISNULL(MI.ITEM_GROUP_CD, ' ') AS ITEM_GROUP_CD_NM
				     , ISNULL(MIG.ITEM_GROUP_NM, ' ') AS ITEM_GROUP_NM
				     , ISNULL(MIG.ITEM_GROUP_NM, ' ') AS ITEM_GROUP_NM_NM
				     , ISNULL(HPOP.ITEM_CD, ' ') AS ITEM_CD
				     , ISNULL(HPOP.ITEM_CD, ' ') AS ITEM_CD_NM
				     , ISNULL(MI.ITEM_NM, ' ') AS ITEM_NM
				     , ISNULL(MI.ITEM_NM, ' ') AS ITEM_NM_NM
				     , ISNULL(MI.SPEC, ' ') AS SPEC
				     , ISNULL(MI.SPEC, ' ') AS SPEC_NM
				     , ISNULL(CAST(MI.ITEM_COST_KRW AS NVARCHAR(20)), ' ') AS ITEM_COST_KRW2
				     , ISNULL(CAST(MI.ITEM_COST_KRW AS NVARCHAR(20)), ' ') AS ITEM_COST_KRW2_NM
				     , ISNULL(CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN MC1.CODE_NM_KR
				            WHEN UPPER(@{GV_LANG}) = 'CN' THEN MC1.CODE_NM_CN
				            ELSE MC1.CODE_NM
						END, ' ') AS UOM_CD
				     , ISNULL(CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN MC1.CODE_NM_KR
				            WHEN UPPER(@{GV_LANG}) = 'CN' THEN MC1.CODE_NM_CN
				            ELSE MC1.CODE_NM
						END, ' ') AS UOM_CD_NM
				     , ISNULL(MIP.PUR_LT, ' ') AS PUR_LT
				     , ISNULL(MIP.PUR_LT, ' ') AS PUR_LT_NM
				     , ISNULL(MI.ITEM_TYPE, ' ') AS ITEM_TYPE_CD
				     , ISNULL(MI.ITEM_TYPE, ' ') AS ITEM_TYPE_CD_NM
				     , ISNULL(CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN MC2.CODE_NM_KR
				            WHEN UPPER(@{GV_LANG}) = 'CN' THEN MC2.CODE_NM_CN
				            ELSE MC2.CODE_NM
						END, ' ') AS ITEM_TYPE_NM
				     , ISNULL(CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN MC2.CODE_NM_KR
				            WHEN UPPER(@{GV_LANG}) = 'CN' THEN MC2.CODE_NM_CN
				            ELSE MC2.CODE_NM
						END, ' ') AS ITEM_TYPE_NM_NM
					 , ISNULL(CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN MC3.CODE_NM_KR
				            WHEN UPPER(@{GV_LANG}) = 'CN' THEN MC3.CODE_NM_CN
				            ELSE MC3.CODE_NM
						END, ' ') AS PROCUR_TYPE
					 , ISNULL(CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN MC3.CODE_NM_KR
				            WHEN UPPER(@{GV_LANG}) = 'CN' THEN MC3.CODE_NM_CN
				            ELSE MC3.CODE_NM
						END, ' ') AS PROCUR_TYPE_NM
					 , ISNULL(MI.PARENT_CUST_NM, ' ') AS PARENT_CUST_NM
					 , ISNULL(MI.PARENT_CUST_NM, ' ') AS PARENT_CUST_NM_NM
				     , HPOP.MAT_ISSUE_FLAG

				     , HPOP.GI_QTY_Y1
				     , HPOP.GI_QTY_Y0
				     , HPOP.GI_QTY_M6
				     , HPOP.GI_QTY_M5
				     , HPOP.GI_QTY_M4
				     , HPOP.GI_QTY_M3
				     , HPOP.GI_QTY_M2
				     , HPOP.GI_QTY_M1
				     , HPOP.GI_QTY_M0
				     , HPOP.MOL_QTY
				     , HPOP.GR_SCHED_QTY
				     , HAMS.MRP_QTY_W1
				     , HAMS.MRP_QTY_W2
				     , HAMS.MRP_QTY_W3
				     , HAMS.MRP_QTY_W4
				     , HAMS.MRP_QTY_M0
				     , HAMS.MRP_QTY_M1
				     , HAMS.MRP_QTY_M2
				     , HAMS.MRP_QTY_M3
				     , HAMS.MRP_QTY_M4
				     , HAMS.MRP_QTY_M5
				     , HAMS.MRP_QTY_M6
				     , HAMS.MRP_QTY_M7
				     , HAMS.MRP_QTY_M8
				     , HAMS.MRP_QTY_M9
				     , HAMS.MRP_QTY_M10
				     , HAMS.MRP_QTY_M11
				     , HAMS.MRP_QTY_M12
				     
				     , MGCD.ORG_QTY_W1
				     , MGCD.ORG_QTY_W2
				     , MGCD.ORG_QTY_W3
				     , MGCD.ORG_QTY_W4
				     , MGCD.ORG_QTY_M0
				     , MGCD.ORG_QTY_M1
   				     , MGCD.ORG_QTY_M2
					 , MGCD.ORG_QTY_M3				     
				     , MGCD.ORG_QTY_M4
				     , MGCD.ORG_QTY_M5
				     , MGCD.ORG_QTY_M6
				     , MGCD.ORG_QTY_M7
				     , MGCD.ORG_QTY_M8
				     , MGCD.ORG_QTY_M9
				     , MGCD.ORG_QTY_M10
				     , MGCD.ORG_QTY_M11
				     , MGCD.ORG_QTY_M12
				     
				     , (ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_W1,0))-ISNULL(HAMS.MRP_QTY_W1,0) AS GAP_W1
					 , (ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_W1,0))-ISNULL(HAMS.MRP_QTY_W1,0) + ISNULL(MGCD.ORG_QTY_W2,0) - ISNULL(HAMS.MRP_QTY_W2,0) AS GAP_W2
					 , (ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_W1,0))-ISNULL(HAMS.MRP_QTY_W1,0) + ISNULL(MGCD.ORG_QTY_W2,0) - ISNULL(HAMS.MRP_QTY_W2,0)	+ISNULL(MGCD.ORG_QTY_W3,0) - ISNULL(HAMS.MRP_QTY_W3,0) AS GAP_W3		     
				     , (ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_W1,0))-ISNULL(HAMS.MRP_QTY_W1,0) + ISNULL(MGCD.ORG_QTY_W2,0) - ISNULL(HAMS.MRP_QTY_W2,0)	+ISNULL(MGCD.ORG_QTY_W3,0) - ISNULL(HAMS.MRP_QTY_W3,0) + ISNULL(MGCD.ORG_QTY_W4,0) - ISNULL(HAMS.MRP_QTY_W4,0) AS GAP_W4 
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0) AS GAP_M0
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0) AS GAP_M1
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0) AS GAP_M2
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0) AS GAP_M3
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0) AS GAP_M4
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0) AS GAP_M5
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0) AS GAP_M6
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0) AS GAP_M7
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0) AS GAP_M8  
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0)+ISNULL(MGCD.ORG_QTY_M9,0)-ISNULL(HAMS.MRP_QTY_M9,0) AS GAP_M9
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0)+ISNULL(MGCD.ORG_QTY_M9,0)-ISNULL(HAMS.MRP_QTY_M9,0)+ISNULL(MGCD.ORG_QTY_M10,0)-ISNULL(HAMS.MRP_QTY_M10,0) AS GAP_M10
				     , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0)+ISNULL(MGCD.ORG_QTY_M9,0)-ISNULL(HAMS.MRP_QTY_M9,0)+ISNULL(MGCD.ORG_QTY_M10,0)-ISNULL(HAMS.MRP_QTY_M10,0)+ISNULL(MGCD.ORG_QTY_M11,0)-ISNULL(HAMS.MRP_QTY_M11,0) AS GAP_M11
					 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0)+ISNULL(MGCD.ORG_QTY_M9,0)-ISNULL(HAMS.MRP_QTY_M9,0)+ISNULL(MGCD.ORG_QTY_M10,0)-ISNULL(HAMS.MRP_QTY_M10,0)+ISNULL(MGCD.ORG_QTY_M11,0)-ISNULL(HAMS.MRP_QTY_M11,0)+ISNULL(MGCD.ORG_QTY_M12,0)-ISNULL(HAMS.MRP_QTY_M12,0) AS GAP_M12
				  
				  	 , ISNULL(HPOP.MOL_QTY,0) AS BOH_QTY_W1
				     , (ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_W1,0))-ISNULL(HAMS.MRP_QTY_W1,0) AS BOH_QTY_W2
				     , (ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_W1,0))-ISNULL(HAMS.MRP_QTY_W1,0) + ISNULL(MGCD.ORG_QTY_W2,0) - ISNULL(HAMS.MRP_QTY_W2,0) AS BOH_QTY_W3
				     , (ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_W1,0))-ISNULL(HAMS.MRP_QTY_W1,0) + ISNULL(MGCD.ORG_QTY_W2,0) - ISNULL(HAMS.MRP_QTY_W2,0)	+ISNULL(MGCD.ORG_QTY_W3,0) - ISNULL(HAMS.MRP_QTY_W3,0) AS BOH_QTY_W4
				  	 , ISNULL(HPOP.MOL_QTY,0) AS BOH_QTY_M0
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0) AS BOH_QTY_M1
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0) AS BOH_QTY_M2
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0) AS BOH_QTY_M3
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0) AS BOH_QTY_M4
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0) AS BOH_QTY_M5
					 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0) AS BOH_QTY_M6		
					 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0) AS BOH_QTY_M7
					 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0) AS BOH_QTY_M8		  	 
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0) AS BOH_QTY_M9
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0)+ISNULL(MGCD.ORG_QTY_M9,0)-ISNULL(HAMS.MRP_QTY_M9,0) AS BOH_QTY_M10
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0)+ISNULL(MGCD.ORG_QTY_M9,0)-ISNULL(HAMS.MRP_QTY_M9,0)+ISNULL(MGCD.ORG_QTY_M10,0)-ISNULL(HAMS.MRP_QTY_M10,0) AS BOH_QTY_M11
				  	 , ISNULL(HPOP.MOL_QTY,0)+ISNULL(MGCD.ORG_QTY_M0,0)-ISNULL(HAMS.MRP_QTY_M0,0)+ISNULL(MGCD.ORG_QTY_M1,0)-ISNULL(HAMS.MRP_QTY_M1,0)+ISNULL(MGCD.ORG_QTY_M2,0)-ISNULL(HAMS.MRP_QTY_M2,0)+ISNULL(MGCD.ORG_QTY_M3,0)-ISNULL(HAMS.MRP_QTY_M3,0)+ISNULL(MGCD.ORG_QTY_M4,0)-ISNULL(HAMS.MRP_QTY_M4,0)+ISNULL(MGCD.ORG_QTY_M5,0)-ISNULL(HAMS.MRP_QTY_M5,0)+ISNULL(MGCD.ORG_QTY_M6,0)-ISNULL(HAMS.MRP_QTY_M6,0)+ISNULL(MGCD.ORG_QTY_M7,0)-ISNULL(HAMS.MRP_QTY_M7,0)+ISNULL(MGCD.ORG_QTY_M8,0)-ISNULL(HAMS.MRP_QTY_M8,0)+ISNULL(MGCD.ORG_QTY_M9,0)-ISNULL(HAMS.MRP_QTY_M9,0)+ISNULL(MGCD.ORG_QTY_M10,0)-ISNULL(HAMS.MRP_QTY_M10,0)+ISNULL(MGCD.ORG_QTY_M11,0)-ISNULL(HAMS.MRP_QTY_M11,0) AS BOH_QTY_M12
				  	 
				     , ISNULL(HAMS.MRP_QTY_M0, 0) + ISNULL(HAMS.MRP_QTY_M1, 0) + ISNULL(HAMS.MRP_QTY_M2, 0) + ISNULL(HAMS.MRP_QTY_M3, 0) + ISNULL(HAMS.MRP_QTY_M4, 0) + ISNULL(HAMS.MRP_QTY_M5, 0) + ISNULL(HAMS.MRP_QTY_M6, 0) + ISNULL(HAMS.MRP_QTY_M7, 0) + ISNULL(HAMS.MRP_QTY_M8, 0) + ISNULL(HAMS.MRP_QTY_M9, 0) + ISNULL(HAMS.MRP_QTY_M10, 0) + ISNULL(HAMS.MRP_QTY_M11, 0) + ISNULL(HAMS.MRP_QTY_M12, 0) AS MRP_TOTAL
				     , ISNULL(MGCD.ORG_QTY_M0, 0) + ISNULL(MGCD.ORG_QTY_M1, 0) + ISNULL(MGCD.ORG_QTY_M2, 0) + ISNULL(MGCD.ORG_QTY_M3, 0) + ISNULL(MGCD.ORG_QTY_M4, 0) + ISNULL(MGCD.ORG_QTY_M5, 0) + ISNULL(MGCD.ORG_QTY_M6, 0) + ISNULL(MGCD.ORG_QTY_M7, 0) + ISNULL(MGCD.ORG_QTY_M8, 0) + ISNULL(MGCD.ORG_QTY_M9, 0) + ISNULL(MGCD.ORG_QTY_M10, 0) + ISNULL(MGCD.ORG_QTY_M11, 0) + ISNULL(MGCD.ORG_QTY_M12, 0) AS ORG_TOTAL
				    
				     , NULL AS GAP_TOTAL
				     , NULL AS BOH_TOTAL
				     
				     
				     , HPOP.LT_REQ_QTY
				     , HPOP.SS_QTY
				     , HPOP.PO_PLAN_QTY
				     , ROUND((ISNULL(HAMS.MRP_QTY_M0, 0) + ISNULL(HAMS.MRP_QTY_M1, 0) + ISNULL(HAMS.MRP_QTY_M2, 0) + ISNULL(HAMS.MRP_QTY_M3, 0)) / NULLIF((ISNULL(HPOP.GI_QTY_M0, 0) + ISNULL(HPOP.GI_QTY_M1, 0) + ISNULL(HPOP.GI_QTY_M2, 0) + ISNULL(HPOP.GI_QTY_M3, 0)), 0) * 100, 0) AS M3_RATE
				     , ROUND((ISNULL(HAMS.MRP_QTY_M0, 0) + ISNULL(HAMS.MRP_QTY_M1, 0) + ISNULL(HAMS.MRP_QTY_M2, 0) + ISNULL(HAMS.MRP_QTY_M3, 0) + ISNULL(HAMS.MRP_QTY_M4, 0) + ISNULL(HAMS.MRP_QTY_M5, 0) + ISNULL(HAMS.MRP_QTY_M6, 0)) / NULLIF((ISNULL(HPOP.GI_QTY_M0, 0) + ISNULL(HPOP.GI_QTY_M1, 0) + ISNULL(HPOP.GI_QTY_M2, 0) + ISNULL(HPOP.GI_QTY_M3, 0) + ISNULL(HPOP.GI_QTY_M4, 0) + ISNULL(HPOP.GI_QTY_M5, 0) + ISNULL(HPOP.GI_QTY_M6, 0)), 0) * 100, 0) AS M6_RATE
				     , HPOP.ADJ_PO_PLAN_QTY
				     , HPOP.REMARK
				FROM TB_HIS_PUR_ORDER_PLAN HPOP WITH(NOLOCK)
				INNER JOIN TB_MST_ITEM MI WITH(NOLOCK)
				   ON MI.COMPANY_CD = HPOP.COMPANY_CD
				  AND MI.BU_CD = HPOP.BU_CD
				  AND MI.ITEM_CD = HPOP.ITEM_CD
				INNER JOIN TB_MST_ITEM_GROUP MIG WITH(NOLOCK)
				   ON MIG.COMPANY_CD = MI.COMPANY_CD
				  AND MIG.BU_CD = MI.BU_CD
				  AND MIG.ITEM_GROUP_CD = MI.ITEM_GROUP_CD
				INNER JOIN TB_MST_ITEM_PLANT MIP WITH(NOLOCK)
				   ON MIP.COMPANY_CD = HPOP.COMPANY_CD
				  AND MIP.BU_CD = HPOP.BU_CD
				  AND MIP.PLANT_CD = 'WF01'
				  AND MIP.ITEM_CD = HPOP.ITEM_CD
				LEFT OUTER JOIN W_MAT_GR_SCHED_DAILY MGCD WITH(NOLOCK)
				ON HPOP.COMPANY_CD = MGCD.COMPANY_CD
				AND HPOP.BU_CD	   = MGCD.BU_CD
				AND HPOP.ITEM_CD   = MGCD.ITEM_CD
				  
				LEFT OUTER JOIN TB_MST_CUSTOMER MC WITH(NOLOCK)
				  ON MC.COMPANY_CD = MI.COMPANY_CD
				 AND MC.BU_CD = MI.BU_CD
				 AND MC.CUST_CD = MI.REP_CUST_CD
				LEFT OUTER JOIN TB_MST_CODE MC1 WITH(NOLOCK)
				  ON MC1.BU_CD = 'ALL'
				 AND MC1.GROUP_CD = 'UOM_CD'
				 AND MC1.CODE_CD = MI.UOM_CD
				LEFT OUTER JOIN TB_MST_CODE MC2 WITH(NOLOCK)
				  ON MC2.BU_CD = 'ALL'
				 AND MC2.GROUP_CD = 'ITEM_TYPE'
				 AND MC2.CODE_CD = MI.ITEM_TYPE
				LEFT OUTER JOIN TB_MST_CODE MC3 WITH(NOLOCK)
				  ON MC3.BU_CD = 'ALL'
				 AND MC3.GROUP_CD = 'PROCUR_TYPE'
				 AND MC3.CODE_CD = MIP.PROCUR_TYPE
				LEFT OUTER JOIN 
				(
					SELECT HAMS.COMPANY_CD
		                 , HAMS.BU_CD
		                 , HAMS.ITEM_CD
		                 , SUM(HAMS.MRP_QTY_W1) AS MRP_QTY_W1
		                 , SUM(HAMS.MRP_QTY_W2) AS MRP_QTY_W2
		                 , SUM(HAMS.MRP_QTY_W3) AS MRP_QTY_W3
		                 , SUM(HAMS.MRP_QTY_W4) AS MRP_QTY_W4
		                 , SUM(HAMS.MRP_QTY_M0) AS MRP_QTY_M0
		                 , SUM(HAMS.MRP_QTY_M1) AS MRP_QTY_M1
		                 , SUM(HAMS.MRP_QTY_M2) AS MRP_QTY_M2
		                 , SUM(HAMS.MRP_QTY_M3) AS MRP_QTY_M3
		                 , SUM(HAMS.MRP_QTY_M4) AS MRP_QTY_M4
		                 , SUM(HAMS.MRP_QTY_M5) AS MRP_QTY_M5
		                 , SUM(HAMS.MRP_QTY_M6) AS MRP_QTY_M6
		                 , SUM(HAMS.MRP_QTY_M7) AS MRP_QTY_M7
		                 , SUM(HAMS.MRP_QTY_M8) AS MRP_QTY_M8
		                 , SUM(HAMS.MRP_QTY_M9) AS MRP_QTY_M9
		                 , SUM(HAMS.MRP_QTY_M10) AS MRP_QTY_M10
		                 , SUM(HAMS.MRP_QTY_M11) AS MRP_QTY_M11
		                 , SUM(HAMS.MRP_QTY_M12) AS MRP_QTY_M12
					FROM TB_HIS_APS_MRP_SUM HAMS WITH(NOLOCK)
		            WHERE HAMS.COMPANY_CD = @{GV_COMPANY_CD}
		              AND HAMS.BU_CD = @{GV_BU_CD}
		              AND HAMS.PLAN_ID = @{planId}
		              AND HAMS.MEAS_CD = 'P'
		            GROUP BY HAMS.COMPANY_CD, HAMS.BU_CD, HAMS.ITEM_CD
				) HAMS
				ON HAMS.COMPANY_CD = HPOP.COMPANY_CD
				AND HAMS.BU_CD = HPOP.BU_CD
				AND HAMS.ITEM_CD = HPOP.ITEM_CD
				WHERE HPOP.COMPANY_CD = @{GV_COMPANY_CD}
				  AND HPOP.BU_CD = @{GV_BU_CD}
				  AND HPOP.PLAN_ID = @{planId}
  				#if($_parameter.item_cd and $_parameter.item_cd != "")
       			  AND MI.ITEM_CD IN ('$_parameter.item_cd.replace(",","','")')
  				#elseif($_parameter.item_nm and $_parameter.item_nm != "")
       			  AND (MI.ITEM_CD LIKE '%'+@{item_nm}+'%' OR MI.ITEM_NM LIKE '%'+@{item_nm}+'%')
  				#end
				#if($_parameter.procurType and $_parameter.procurType != "")
                  AND MIP.PROCUR_TYPE IN ('$_parameter.procurType.replace(",","','")')
  				#end
				#if($_parameter.itemType and $_parameter.itemType != "")
       			  AND MI.ITEM_TYPE IN ('$_parameter.itemType.replace(",","','")')
  				#end  
				#if($_parameter.upItemGroup and $_parameter.upItemGroup != "")
      			  AND MIG.UPPER_ITEM_GROUP_CD IN ('$_parameter.upItemGroup.replace(",","','")')
  				#end
				#if($_parameter.itemGroup and $_parameter.itemGroup != "")
       			  AND MI.ITEM_GROUP_CD IN ('$_parameter.itemGroup.replace(",","','")')
  				#end
				#if($_parameter.purLtFrom != "" and $_parameter.purLtTo != "")
				  AND MIP.PUR_LT BETWEEN @{purLtFrom} AND @{purLtTo}
				#elseif ($_parameter.purLtFrom != "" and $_parameter.purLtTo == "")
				  AND MIP.PUR_LT <![CDATA[>=]]> @{purLtFrom}
				#elseif ($_parameter.purLtFrom == "" and $_parameter.purLtTo != "")
				  AND MIP.PUR_LT <![CDATA[<=]]> @{purLtTo}
				#end
				#if($_parameter.issueYn and $_parameter.issueYn != "")
       			  AND HPOP.MAT_ISSUE_FLAG = @{issueYn}
  				#end
			) A
			CROSS JOIN W_MEASURE M
			GROUP BY ROLLUP ( <include refid="include.getCdRollup"/> ), M.CATEGORY_CD, M.CATEGORY_NM, M.CATEGORY_IDX
			

			
		) B
		ORDER BY TMP_COL
		#foreach( $dimMap in $_parameter.dimList )
		  , B.$dimMap.DIM_CD
		#end 
		, B.CATEGORY_IDX
	</select>
	
	<update id="longRiverOrderingPlanListUpdate" parameterType="map">
		/****** [ supply.purchase.longRiverOrderingPlanListUpdate ] ******/
		BEGIN
		
			<!-- UPDATE TB_MST_ITEM
			   SET MAT_ISSUE_FLAG = @{MAT_ISSUE_FLAG}
			     , UPDATE_ID = CASE WHEN MAT_ISSUE_FLAG = @{MAT_ISSUE_FLAG} THEN UPDATE_ID ELSE @{GV_USER_ID} END
			     , UPDATE_DTTM = CASE WHEN MAT_ISSUE_FLAG = @{MAT_ISSUE_FLAG} THEN UPDATE_DTTM ELSE DBO.UFN_GETDATE() END
			WHERE COMPANY_CD = @{GV_COMPANY_CD}
			  AND BU_CD = @{GV_BU_CD}
			  AND ITEM_CD = @{ITEM_CD}
			; -->
			
			UPDATE TB_HIS_PUR_ORDER_PLAN
			   SET MAT_ISSUE_FLAG = @{MAT_ISSUE_FLAG}
			     , ADJ_PO_PLAN_QTY = @{ADJ_PO_PLAN_QTY}
				 , REMARK = @{REMARK}
				 , UPDATE_ID = CASE WHEN ADJ_PO_PLAN_QTY = @{ADJ_PO_PLAN_QTY} AND ISNULL(REMARK, '') = ISNULL(@{REMARK}, '') AND MAT_ISSUE_FLAG = @{MAT_ISSUE_FLAG} THEN UPDATE_ID ELSE @{GV_USER_ID} END
			     , UPDATE_DTTM = CASE WHEN ADJ_PO_PLAN_QTY = @{ADJ_PO_PLAN_QTY} AND ISNULL(REMARK, '') = ISNULL(@{REMARK}, '') AND MAT_ISSUE_FLAG = @{MAT_ISSUE_FLAG} THEN UPDATE_DTTM ELSE DBO.UFN_GETDATE() END
			WHERE COMPANY_CD = @{GV_COMPANY_CD}
			  AND BU_CD = @{GV_BU_CD}
			  AND PLAN_ID = @{PLAN_ID}
			  AND ITEM_CD = @{ITEM_CD}     
			;		
		END;
	</update>
	
	<select id="topIetmListYearSelect" parameterType="map" resultType="map">
		/****** [ supply.purchase.topIetmListYearSelect ] ******/
		SELECT LEFT(CONVERT (NVARCHAR (30), DATEADD (YEAR, -1, CONVERT(DATETIME, YEAR + '0101')), 112), 4) + 'Y' AS LAST_YEAR
		     , YEAR + 'Y' AS CUR_YEAR
		FROM TB_MST_CALENDAR
		WHERE YEARWEEK = 
		(
		  SELECT APS_START_WEEK
		  FROM TB_MST_PLAN_VERSION
		  WHERE COMPANY_CD = @{GV_COMPANY_CD}
		    AND BU_CD = @{GV_BU_CD}
		    AND PLAN_TYPE_CD = 'MP'
		    AND PLAN_ID = @{planId}
		)
		  AND DAY_NM = 'THU'
	</select>
	
	<select id="topIetmListSelect" parameterType="map" resultType="map">
		/****** [ supply.purchase.topIetmListSelect ] ******/
		SELECT HPOPP.ITEM_CD
		     , MI1.SPEC
		     , MC.REP_CUST_GROUP_NM
		     , HPOPP.PARENT_ITEM_CD
		     , MI2.SPEC AS PARENT_SPEC
		     , HPOPP.CHILD_ITEM_QTY
		     , HPOPP.PARENT_LAST_YEAR_QTY
		     , HPOPP.PARENT_CUR_YEAR_QTY
		     , HPOPP.CHILD_LAST_YEAR_QTY
		     , HPOPP.CHILD_YEAR_QTY AS CHILD_CUR_YEAR_QTY
		FROM TB_HIS_PUR_ORDER_PLAN_PROD HPOPP WITH(NOLOCK)
		INNER JOIN TB_MST_ITEM MI1 WITH(NOLOCK)
		   ON MI1.COMPANY_CD = HPOPP.COMPANY_CD
		  AND MI1.BU_CD = HPOPP.BU_CD
		  AND MI1.ITEM_CD = HPOPP.ITEM_CD
		INNER JOIN TB_MST_ITEM MI2 WITH(NOLOCK)
		   ON MI2.COMPANY_CD = HPOPP.COMPANY_CD
		  AND MI2.BU_CD = HPOPP.BU_CD
		  AND MI2.ITEM_CD = HPOPP.PARENT_ITEM_CD
		LEFT OUTER JOIN TB_MST_CUSTOMER MC WITH(NOLOCK)
		  ON MC.COMPANY_CD = MI2.COMPANY_CD
		 AND MC.BU_CD = MI2.BU_CD
		 AND MC.CUST_CD = MI2.REP_CUST_CD
		WHERE HPOPP.COMPANY_CD = @{GV_COMPANY_CD}
		  AND HPOPP.BU_CD = @{GV_BU_CD}
		  AND HPOPP.PLAN_ID = @{planId}
		  AND HPOPP.ITEM_CD = @{itemCd}
		#if($_parameter.useFlag == "Y")
          AND (ISNULL(HPOPP.PARENT_LAST_YEAR_QTY, 0) + ISNULL(HPOPP.PARENT_CUR_YEAR_QTY, 0)) <![CDATA[>]]> 0
        #elseif($_parameter.useFlag == "N")
          AND (ISNULL(HPOPP.PARENT_LAST_YEAR_QTY, 0) + ISNULL(HPOPP.PARENT_CUR_YEAR_QTY, 0)) = 0
  		#end
		ORDER BY MC.REP_CUST_GROUP_NM, HPOPP.PARENT_ITEM_CD
	</select>
	
	<select id="detailInfoListSelect" parameterType="map" resultType="map">
		/****** [ supply.purchase.detailInfoListSelect ] ******/
		
		SELECT *
		FROM
		(
			SELECT NULL AS TMP_COL
				<include refid="include.getCdDimTotal"/>
				<include refid="include.getGrpLvlId"/>
				 , MAX(MEAS_CD) AS MEAS_CD
	         	 , MAX(MEAS_CD) AS MEAS_CD_NM
				 , SUM(CHILD_ITEM_QTY) AS CHILD_ITEM_QTY 
				 , SUM(UNREG_QTY) AS UNREG_QTY
			     , SUM(W1_QTY) AS W1_QTY
			     , SUM(W2_QTY) AS W2_QTY
			     , SUM(W3_QTY) AS W3_QTY
			     , SUM(W4_QTY) AS W4_QTY
			     , SUM(M0_QTY) AS M0_QTY
			     , SUM(M1_QTY) AS M1_QTY
			     , SUM(M2_QTY) AS M2_QTY
			     , SUM(M3_QTY) AS M3_QTY
			     , SUM(M4_QTY) AS M4_QTY
			     , SUM(M5_QTY) AS M5_QTY
			     , SUM(M6_QTY) AS M6_QTY
			     , SUM(M7_QTY) AS M7_QTY
			     , SUM(M8_QTY) AS M8_QTY
			     , SUM(M9_QTY) AS M9_QTY
			     , SUM(M10_QTY) AS M10_QTY
			     , SUM(M11_QTY) AS M11_QTY
			     , SUM(M12_QTY) AS M12_QTY
			     , SUM(TOTAL) AS TOTAL
			     , MAX(SORT) AS SORT
			FROM
			(
				SELECT ISNULL(HPOPD.MEAS_CD, ' ') AS MEAS_CD 
				     , ISNULL(HPOPD.MEAS_CD, ' ') AS MEAS_CD_NM
				     , ISNULL(CASE WHEN HPOPD.MEAS_CD = 'MAT_PLAN' THEN dbo.UFN_GET_TRANSLATE('lbl', 'materialsReqPlan', @{GV_LANG})
				            WHEN HPOPD.MEAS_CD = 'MAT_SCHED' THEN dbo.UFN_GET_TRANSLATE('lbl', 'materialsInfo', @{GV_LANG})
				            WHEN HPOPD.MEAS_CD = 'AP2' THEN dbo.UFN_GET_TRANSLATE('lbl', 'ap2Cnt', @{GV_LANG})
				        END, ' ') AS MEAS_NM    
				     , ISNULL(CASE WHEN HPOPD.MEAS_CD = 'MAT_PLAN' THEN dbo.UFN_GET_TRANSLATE('lbl', 'materialsReqPlan', @{GV_LANG})
				            WHEN HPOPD.MEAS_CD = 'MAT_SCHED' THEN dbo.UFN_GET_TRANSLATE('lbl', 'materialsInfo', @{GV_LANG})
				            WHEN HPOPD.MEAS_CD = 'AP2' THEN dbo.UFN_GET_TRANSLATE('lbl', 'ap2Cnt', @{GV_LANG})
				        END, ' ') AS MEAS_NM_NM
				     , ISNULL(HPOPD.ITEM_CD, ' ') AS ITEM_CD
				     , ISNULL(HPOPD.ITEM_CD, ' ') AS ITEM_CD_NM
				     , ISNULL(MI1.ITEM_NM, ' ') AS ITEM_NM
				     , ISNULL(MI1.ITEM_NM, ' ') AS ITEM_NM_NM
				     , ISNULL(MI1.SPEC, ' ') AS SPEC
				     , ISNULL(MI1.SPEC, ' ') AS SPEC_NM
				     , ISNULL(MC.REP_CUST_GROUP_NM, ' ') AS REP_CUST_GROUP_NM
				     , ISNULL(MC.REP_CUST_GROUP_NM, ' ') AS REP_CUST_GROUP_NM_NM
				     , ISNULL(HPOPD.PARENT_ITEM_CD, ' ') AS PARENT_ITEM_CD
				     , ISNULL(HPOPD.PARENT_ITEM_CD, ' ') AS PARENT_ITEM_CD_NM
				     , ISNULL(MI2.SPEC, ' ') AS PARENT_SPEC
				     , ISNULL(MI2.SPEC, ' ') AS PARENT_SPEC_NM
				     , HPOPD.CHILD_ITEM_QTY
				     , HPOPD.UNREG_QTY
				     , HPOPD.W1_QTY
				     , HPOPD.W2_QTY
				     , HPOPD.W3_QTY
				     , HPOPD.W4_QTY
				     , HPOPD.M0_QTY
				     , HPOPD.M1_QTY
				     , HPOPD.M2_QTY
				     , HPOPD.M3_QTY
				     , HPOPD.M4_QTY
				     , HPOPD.M5_QTY
				     , HPOPD.M6_QTY
				     , HPOPD.M7_QTY
				     , HPOPD.M8_QTY
				     , HPOPD.M9_QTY
				     , HPOPD.M10_QTY
				     , HPOPD.M11_QTY
				     , HPOPD.M12_QTY
				     , CASE WHEN HPOPD.MEAS_CD = 'MAT_PLAN' THEN 1
				            WHEN HPOPD.MEAS_CD = 'MAT_SCHED' THEN 2
				            WHEN HPOPD.MEAS_CD = 'AP2' THEN 3
				        END SORT
				     , ISNULL(M0_QTY, 0) + ISNULL(M1_QTY, 0) + ISNULL(M2_QTY, 0) + ISNULL(M3_QTY, 0) + ISNULL(M4_QTY, 0)
    				 + ISNULL(M5_QTY, 0) + ISNULL(M6_QTY, 0) + ISNULL(M7_QTY, 0) + ISNULL(M8_QTY, 0) + ISNULL(M9_QTY, 0)
    				 + ISNULL(M10_QTY, 0) + ISNULL(M11_QTY, 0) + ISNULL(M12_QTY, 0) AS TOTAL
				FROM TB_HIS_PUR_ORDER_PLAN_DTL HPOPD WITH(NOLOCK)
				INNER JOIN TB_MST_ITEM MI1 WITH(NOLOCK)
				   ON MI1.COMPANY_CD = HPOPD.COMPANY_CD
				  AND MI1.BU_CD = HPOPD.BU_CD
				  AND MI1.ITEM_CD = HPOPD.ITEM_CD
				LEFT OUTER JOIN TB_MST_ITEM MI2 WITH(NOLOCK)
				   ON MI2.COMPANY_CD = HPOPD.COMPANY_CD
				  AND MI2.BU_CD = HPOPD.BU_CD
				  AND MI2.ITEM_CD = HPOPD.PARENT_ITEM_CD
				LEFT OUTER JOIN TB_MST_CUSTOMER MC WITH(NOLOCK)
				  ON MC.COMPANY_CD = MI2.COMPANY_CD
				 AND MC.BU_CD = MI2.BU_CD
				 AND MC.CUST_CD = MI2.REP_CUST_CD
				WHERE HPOPD.COMPANY_CD = @{GV_COMPANY_CD}
				  AND HPOPD.BU_CD = @{GV_BU_CD}
				  AND HPOPD.PLAN_ID = @{planId}
				  AND HPOPD.ITEM_CD = @{itemCd}
			) A
			GROUP BY ROLLUP (<include refid="include.getCdRollup"/>)  
		) B
		WHERE B.MEAS_NM IS NOT NULL
    	  AND (B.GRP_LVL_ID = 0 OR B.MEAS_CD != 'MAT_SCHED')
		ORDER BY SORT, GRP_LVL_ID
	</select>
	
	
	<select id="topIetmListExcelSqlSelect" parameterType="map" resultType="map">
	/****** [ supply.purchase.topIetmListExcelSqlSelect ] ******/
		SELECT CASE WHEN A2.MENU_CD = @{popUpMenuCd} THEN 'Y' ELSE 'N' END AS USE_FLAG
		, A2.ACTION_CD
		FROM
		(
		  	SELECT BU_CD
		         , ROLE_CD
		  	FROM TB_MAP_USER_ROLE WITH(NOLOCK)
		  	WHERE USER_ID = @{GV_USER_ID}
		      AND BU_CD = @{GV_BU_CD}
		      AND USE_FLAG = 'Y'
		) A1
		INNER JOIN
		(
		  	SELECT COMPANY_CD
		         , BU_CD
		         , ROLE_CD
		         , MENU_CD
		         , ACTION_CD
		  	FROM TB_MAP_ROLE_MENU_ACTION WITH(NOLOCK)
		  	WHERE COMPANY_CD = @{GV_COMPANY_CD}
		      AND BU_CD = @{GV_BU_CD}
		      AND MENU_CD = @{popUpMenuCd}
		      AND ACTION_CD IN ('EXCEL','SQL')
		      AND USE_FLAG = 'Y'
		) A2
		ON A1.BU_CD = A2.BU_CD
		AND A1.ROLE_CD = A2.ROLE_CD
		GROUP BY A2.MENU_CD
		, A2.ACTION_CD
	
	</select>
	
	
</mapper>

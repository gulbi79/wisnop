<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="aps.planResult">
	<select id="planIdLoadFactorSelect" parameterType="map" resultType="map">
		/****** [ aps.planResult.planIdLoadFactorSelect ] ******/
		SELECT B1.*
		     , B1.PLAN_ID AS CODE_CD
		     , B1.PLAN_ID AS CODE_NM
		     , (SELECT YYYYMMDD FROM TB_MST_CALENDAR WHERE YEARWEEK = B1.START_WEEK AND DAY_NM = 'SUN') AS START_DAY         
		     , (SELECT YYYYMMDD FROM TB_MST_CALENDAR WHERE YEARWEEK = B1.END_WEEK AND DAY_NM = 'SAT') AS END_DAY
		     , (SELECT YYYYMMDD FROM TB_MST_CALENDAR WHERE YEARWEEK = B1.CLOSE_WEEK AND DAY_NM = 'SAT') AS CLOSE_DAY
		FROM
		(
		  	SELECT PLAN_ID
		         , START_WEEK
		         , (SELECT YEARWEEK FROM TB_MST_CALENDAR WHERE YYYYMMDD = (SELECT CONVERT(NVARCHAR, DATEADD(DAY, 7, YYYYMMDD), 112) AS YYYYMMDD FROM TB_MST_CALENDAR WHERE YEARWEEK = A1.START_WEEK AND DAY_NM = 'SUN')) AS END_WEEK
		         , END_WEEK AS CLOSE_WEEK       
		  	FROM TB_MST_PLAN_VERSION A1 WITH(NOLOCK)
		  	WHERE COMPANY_CD = @{GV_COMPANY_CD}
		      AND BU_CD = @{GV_BU_CD}
		      AND PLAN_TYPE_CD = 'MP'
		) B1
		ORDER BY B1.START_WEEK DESC
	</select>	

	<select id="workplacesPredictLoadFactorSelect" parameterType="map" resultType="map">
		/****** [ aps.planResult.workplacesPredictLoadFactorSelect ] ******/
		WITH W_MEASURE AS 
		(
	    	SELECT CATEGORY_CD
	    	     , CATEGORY_NM
	    	     , CATEGORY_IDX 
	        FROM 
	        (
	        	SELECT NULL AS CATEGORY_CD
	        	     , NULL AS CATEGORY_NM
	        	     , NULL AS CATEGORY_IDX
				#foreach( $meaMap in $_parameter.meaList )
	            UNION ALL 
	            SELECT '$meaMap.CD'
	                 , '$meaMap.NM'
	                 , $foreach.count 
				#end
			) A
	        WHERE CATEGORY_CD IS NOT NULL
		),
		W_ROW AS
		(	
			SELECT MC1.CODE_NM AS PROD_PART
			     , MC2.CODE_NM AS PROD_OR_QC
			     , HAWCL.WC_CD
			     , MWC.WC_NM
			     , MC3.CODE_NM AS RESOURCE_TYPE
			     , MR.RESOURCE_CNT
			     /* 20210202 이큰산K 추가 */
				 , MR.AVAIL_CNT
				 --------------------------
				#if($_parameter.weekMonth == "WEEK")
			     , HAWCL.YEARWEEK AS WEEK_MONTH
				#else
			     , TMC.YEARMONTH_STD AS WEEK_MONTH
				#end
			     , SUM(CASE WHEN HAWCL.MEAS_CD = 'AVAIL_TIME' THEN HAWCL.VALUE END) AS AVAIL_TIME
           		 , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME' THEN HAWCL.VALUE END) AS NEED_TIME
           		 , ROUND(SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME' THEN HAWCL.VALUE END) / NULLIF(SUM(CASE WHEN HAWCL.MEAS_CD = 'AVAIL_TIME' THEN HAWCL.VALUE END), 0) * 100, 1) AS LOAD_FACTOR
			     , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME_DMD1' THEN HAWCL.VALUE END) AS NEED_TIME_DMD1
			     , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME_DMD2' THEN HAWCL.VALUE END) AS NEED_TIME_DMD2
			     , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME_DMD3' THEN HAWCL.VALUE END) AS NEED_TIME_DMD3
			     , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME_SS' THEN HAWCL.VALUE END) AS NEED_TIME_SS
			FROM TB_HIS_APS_WORK_CENTER_LOAD HAWCL WITH(NOLOCK)
			INNER JOIN
			(
				SELECT YEARMONTH_STD
				     , YEARWEEK
				FROM TB_MST_CALENDAR WITH(NOLOCK)
				GROUP BY YEARMONTH_STD, YEARWEEK
			) TMC
			ON HAWCL.YEARWEEK = TMC.YEARWEEK
			INNER JOIN TB_MST_WORK_CENTER MWC WITH(NOLOCK)
			   ON MWC.COMPANY_CD = HAWCL.COMPANY_CD
			  AND MWC.BU_CD = HAWCL.BU_CD
			  AND MWC.WC_CD = HAWCL.WC_CD
			  AND MWC.WC_MGR <![CDATA[<>]]> 'I'
			OUTER APPLY 
			(
				SELECT COUNT(RESOURCE_CD) AS RESOURCE_CNT
			    /* 20210202 이큰산K 추가 */
					,SUM(CASE 
					WHEN MR.USE_FLAG = 'Y'
						THEN 1
					ELSE 0
					END) AS AVAIL_CNT
					----------------------------
			    
			    FROM TB_MST_RESOURCE MR WITH(NOLOCK)
			    WHERE MR.COMPANY_CD = MWC.COMPANY_CD
			      AND MR.BU_CD = MWC.BU_CD
			      AND MR.WC_CD = MWC.WC_CD
			      AND MR.RESOURCE_TYPE = MWC.WC_MGR
			      /* 20210202 이큰산K 추가 */
				  AND MR.VALID_TO_DATE <![CDATA[>=]]> DBO.UFN_GETDATE()
				  --------------------------
			) MR
			LEFT OUTER JOIN TB_MST_CODE MC1 WITH(NOLOCK)
			  ON MC1.BU_CD = HAWCL.BU_CD
			 AND MC1.GROUP_CD = 'PROD_PART'
			 AND MC1.CODE_CD = HAWCL.PROD_PART
			 AND MC1.USE_FLAG = 'Y'
			LEFT OUTER JOIN TB_MST_CODE MC2 WITH(NOLOCK)
			  ON MC2.BU_CD = MWC.BU_CD
			 AND MC2.GROUP_CD = 'PROD_OR_QC'
			 AND MC2.CODE_CD = MWC.PROD_OR_QC
			 AND MC2.USE_FLAG = 'Y'
			LEFT OUTER JOIN TB_MST_CODE MC3 WITH(NOLOCK)
			  ON MC3.BU_CD = MWC.BU_CD
			 AND MC3.GROUP_CD = 'RESOURCE_TYPE'
			 AND MC3.CODE_CD = MWC.WC_MGR
			 AND MC3.USE_FLAG = 'Y'
			WHERE HAWCL.COMPANY_CD = @{GV_COMPANY_CD}
			  AND HAWCL.BU_CD = @{GV_BU_CD}
			  AND HAWCL.PLAN_ID = @{planId}
			#if($_parameter.weekMonth == "WEEK")
			  AND HAWCL.YEARWEEK BETWEEN @{fromWeek} AND @{toWeek}
			#else
			 AND TMC.YEARMONTH_STD BETWEEN @{fromMon} AND @{toMon}
			#end
			#if($_parameter.prodPart and $_parameter.prodPart != "")
		      AND HAWCL.PROD_PART IN ('$_parameter.prodPart.replace(",","','")')
			#end  
			#if($_parameter.workplaces and $_parameter.workplaces != "")
		      AND HAWCL.WC_CD IN ('$_parameter.workplaces.replace(",","','")')
			#end  
			GROUP BY MC1.CODE_NM, MC2.CODE_NM, HAWCL.WC_CD, MWC.WC_NM, MC3.CODE_NM, MR.RESOURCE_CNT
			/* 20210202 이큰산K 추가 */
		    , MR.AVAIL_CNT
			--------------------------
			#if($_parameter.weekMonth == "WEEK")
			 , HAWCL.YEARWEEK
			#else
			 , TMC.YEARMONTH_STD
			#end
			UNION ALL
			SELECT MC1.CODE_NM AS PROD_PART
			     , MC2.CODE_NM AS PROD_OR_QC
			     , HAWCL.WC_CD
			     , MWC.WC_NM
			     , MC3.CODE_NM AS RESOURCE_TYPE
			     , MR.RESOURCE_CNT
			     
			     /* 20210202 이큰산K 추가 */
			     , MR.AVAIL_CNT
			     --------------------------
			     
			     , 'TOTAL' AS WEEK_MONTH
			     , SUM(CASE WHEN HAWCL.MEAS_CD = 'AVAIL_TIME' THEN HAWCL.VALUE END) AS AVAIL_TIME
           		 , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME' THEN HAWCL.VALUE END) AS NEED_TIME
           		 , ROUND(SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME' THEN HAWCL.VALUE END) / NULLIF(SUM(CASE WHEN HAWCL.MEAS_CD = 'AVAIL_TIME' THEN HAWCL.VALUE END), 0) * 100, 1) AS LOAD_FACTOR
		         , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME_DMD1' THEN HAWCL.VALUE END) AS NEED_TIME_DMD1
                 , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME_DMD2' THEN HAWCL.VALUE END) AS NEED_TIME_DMD2
                 , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME_DMD3' THEN HAWCL.VALUE END) AS NEED_TIME_DMD3
                 , SUM(CASE WHEN HAWCL.MEAS_CD = 'NEED_TIME_SS' THEN HAWCL.VALUE END) AS NEED_TIME_SS
			FROM TB_HIS_APS_WORK_CENTER_LOAD HAWCL WITH(NOLOCK)
			INNER JOIN
			(
				SELECT YEARMONTH_STD
				     , YEARWEEK
				FROM TB_MST_CALENDAR WITH(NOLOCK)
				GROUP BY YEARMONTH_STD, YEARWEEK
			) TMC
			ON HAWCL.YEARWEEK = TMC.YEARWEEK
			INNER JOIN TB_MST_WORK_CENTER MWC WITH(NOLOCK)
			   ON MWC.COMPANY_CD = HAWCL.COMPANY_CD
			  AND MWC.BU_CD = HAWCL.BU_CD
			  AND MWC.WC_CD = HAWCL.WC_CD
			  AND MWC.WC_MGR <![CDATA[<>]]> 'I'
			OUTER APPLY 
			(
				SELECT COUNT(RESOURCE_CD) AS RESOURCE_CNT
			    	/* 20210202 이큰산K 추가 */
					,SUM(CASE 
					WHEN MR.USE_FLAG = 'Y'
					THEN 1
					ELSE 0
					END) AS AVAIL_CNT
					---------------------------
			    FROM TB_MST_RESOURCE MR WITH(NOLOCK)
			    WHERE MR.COMPANY_CD = MWC.COMPANY_CD
			      AND MR.BU_CD = MWC.BU_CD
			      AND MR.WC_CD = MWC.WC_CD
			      AND MR.RESOURCE_TYPE = MWC.WC_MGR
			      /* 20210202 이큰산K 추가 */
				  AND MR.VALID_TO_DATE <![CDATA[>=]]> DBO.UFN_GETDATE()
				  --------------------------
			) MR
			LEFT OUTER JOIN TB_MST_CODE MC1 WITH(NOLOCK)
			  ON MC1.BU_CD = HAWCL.BU_CD
			 AND MC1.GROUP_CD = 'PROD_PART'
			 AND MC1.CODE_CD = HAWCL.PROD_PART
			 AND MC1.USE_FLAG = 'Y'
			LEFT OUTER JOIN TB_MST_CODE MC2 WITH(NOLOCK)
			  ON MC2.BU_CD = MWC.BU_CD
			 AND MC2.GROUP_CD = 'PROD_OR_QC'
			 AND MC2.CODE_CD = MWC.PROD_OR_QC
			 AND MC2.USE_FLAG = 'Y'
			LEFT OUTER JOIN TB_MST_CODE MC3 WITH(NOLOCK)
			  ON MC3.BU_CD = MWC.BU_CD
			 AND MC3.GROUP_CD = 'RESOURCE_TYPE'
			 AND MC3.CODE_CD = MWC.WC_MGR
			 AND MC3.USE_FLAG = 'Y'
			WHERE HAWCL.COMPANY_CD = @{GV_COMPANY_CD}
			  AND HAWCL.BU_CD = @{GV_BU_CD}
			  AND HAWCL.PLAN_ID = @{planId}
			#if($_parameter.weekMonth == "WEEK")
			  AND HAWCL.YEARWEEK BETWEEN @{fromWeek} AND @{toWeek}
			#else
			  AND TMC.YEARMONTH_STD BETWEEN @{fromMon} AND @{toMon}
			#end
			#if($_parameter.prodPart and $_parameter.prodPart != "")
		      AND HAWCL.PROD_PART IN ('$_parameter.prodPart.replace(",","','")')
			#end  
			#if($_parameter.workplaces and $_parameter.workplaces != "")
		      AND HAWCL.WC_CD IN ('$_parameter.workplaces.replace(",","','")')
			#end
			GROUP BY MC1.CODE_NM, MC2.CODE_NM, HAWCL.WC_CD, MWC.WC_NM, MC3.CODE_NM, MR.RESOURCE_CNT
			/* 20210202 이큰산K 추가 */
			,MR.AVAIL_CNT
			---------------------------
		)
		SELECT A1.PROD_PART
		     , A1.PROD_OR_QC
		     , A1.WC_CD
		     , A1.WC_NM
		     , A1.RESOURCE_TYPE
		     , A1.RESOURCE_CNT
		   
		     /* 20210202 이큰산K 추가 */
			 , A1.AVAIL_CNT
		    ----------------------------
		     
		     , A2.CATEGORY_CD
             , A2.CATEGORY_NM
             , A2.CATEGORY_IDX
			#foreach( $bucketMap in $_parameter.bucketList )
            #set($paramWeekMon = "$bucketMap.BUCKET_VAL")
            , SUM
           	   (
          	   		CASE
	  				#foreach( $meaMap in $_parameter.meaList )
	                   	WHEN A1.WEEK_MONTH = '$paramWeekMon' AND A2.CATEGORY_CD = '${meaMap.CD}' THEN ${meaMap.CD}
	  				#end
	                   	ELSE NULL
	                END
	            ) AS $bucketMap.CD
           	#end
			#if($_parameter.totalFlag)
			, SUM(
         	   		CASE
  				#foreach( $meaMap in $_parameter.meaList )
                   	WHEN A1.WEEK_MONTH = 'TOTAL' AND A2.CATEGORY_CD = '${meaMap.CD}' THEN ${meaMap.CD}
  				#end
                   	ELSE NULL
                END
              )
			  
			#end AS TOTAL
		FROM W_ROW A1
		CROSS JOIN W_MEASURE A2
		GROUP BY A1.PROD_PART, A1.PROD_OR_QC, A1.WC_CD, A1.WC_NM, A1.RESOURCE_TYPE, A1.RESOURCE_CNT,
		/* 20210202 이큰산K 추가 */
		A1.AVAIL_CNT
		---------------------------
		, A2.CATEGORY_CD, A2.CATEGORY_NM, A2.CATEGORY_IDX
		
		ORDER BY A1.PROD_PART, A1.PROD_OR_QC, A1.WC_CD, A1.WC_NM, A1.RESOURCE_TYPE, A1.RESOURCE_CNT, A2.CATEGORY_IDX
	</select>
	
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="aps.dynamic">
	
	<select id="matPsiSelect" parameterType="map" resultType="map">
		/****** [ aps.dynamic.matPsiSelect ] ******/
		BEGIN
		
			DECLARE @D_VERSION_ID NVARCHAR(8);
		
			SELECT @D_VERSION_ID = MAX(VERSION_ID)
			FROM TB_MST_PLAN_VERSION_SUB WITH(NOLOCK)
			WHERE COMPANY_CD = @{GV_COMPANY_CD}
			  AND BU_CD = @{GV_BU_CD}
			  AND PLAN_TYPE_CD = 'MP'
			  AND PLAN_ID = @{planId}
			  AND VERSION_TYPE_CD = @{versionType};
		
			WITH W_DATA AS
			(
				SELECT *
				FROM
				(
					SELECT HAMP.COMPANY_CD
				         , HAMP.BU_CD
				         , HAMP.PLAN_ID
				         , HAMP.VERSION_ID
				         , MI.ITEM_GROUP_CD
				         , MIG.ITEM_GROUP_NM
				         , CASE WHEN 'ko' = @{GV_LANG} THEN MC1.CODE_NM_KR
			                    WHEN 'cn' = @{GV_LANG} THEN MC1.CODE_NM_CN
			                    ELSE MC1.CODE_NM
			                END ITEM_TYPE_CD
			             , CASE WHEN 'ko' = @{GV_LANG} THEN MC2.CODE_NM_KR
			                    WHEN 'cn' = @{GV_LANG} THEN MC2.CODE_NM_CN
			                    ELSE MC2.CODE_NM
			                END PROCUR_TYPE
				         , HAMP.ITEM_CD
				         , MI.ITEM_NM
				         , MI.SPEC
				         , MI.ITEM_COST_KRW
				         , MIP.SS_QTY_DISP
				         , HAMP.MEAS_CD
				         
				         #if($_parameter.schedDateOrgDate == "SCHED")
					         
					         , HAMP.VALUE_W1
					         , HAMP.VALUE_W2
					         , HAMP.VALUE_W3
					         , HAMP.VALUE_W4
					         , HAMP.VALUE_W5
					         , HAMP.VALUE_W6
					         , HAMP.VALUE_M0
					         , HAMP.VALUE_M1
					         , HAMP.VALUE_M2
					         , HAMP.VALUE_M3
					         , HAMP.VALUE_M4
					         , HAMP.VALUE_M5
					         , HAMP.VALUE_M6
					         , HAMP.VALUE_M7
					         , HAMP.VALUE_M8
					         , HAMP.VALUE_M9
					         , HAMP.VALUE_M10
					         , HAMP.VALUE_M11
					         
				         #else
				         
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_W1_ORG ELSE HAMP.VALUE_W1 END  VALUE_W1
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_W2_ORG ELSE HAMP.VALUE_W2 END  VALUE_W2
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_W3_ORG ELSE HAMP.VALUE_W3 END  VALUE_W3
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_W4_ORG ELSE HAMP.VALUE_W4 END  VALUE_W4 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_W5_ORG ELSE HAMP.VALUE_W5 END  VALUE_W5
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_W6_ORG ELSE HAMP.VALUE_W6 END  VALUE_W6 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M0_ORG ELSE HAMP.VALUE_M0 END  VALUE_M0  
  					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M1_ORG ELSE HAMP.VALUE_M1 END  VALUE_M1 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M2_ORG ELSE HAMP.VALUE_M2 END  VALUE_M2 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M3_ORG ELSE HAMP.VALUE_M3 END  VALUE_M3 
   					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M4_ORG ELSE HAMP.VALUE_M4 END  VALUE_M4 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M5_ORG ELSE HAMP.VALUE_M5 END  VALUE_M5 
   					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M6_ORG ELSE HAMP.VALUE_M6 END  VALUE_M6 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M7_ORG ELSE HAMP.VALUE_M7 END  VALUE_M7 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M8_ORG ELSE HAMP.VALUE_M8 END  VALUE_M8 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M9_ORG ELSE HAMP.VALUE_M9 END  VALUE_M9 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M10_ORG ELSE HAMP.VALUE_M10 END  VALUE_M10 
					         , CASE WHEN (MEAS_CD = 'EXP_QTY' ) THEN HAMP.VALUE_M11_ORG ELSE HAMP.VALUE_M11 END  VALUE_M11 
				         
				         #end
				         
   				         #if($_parameter.schedDateOrgDate == "SCHED")
   				         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W1 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W1 END VALUE_W1_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W2 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W2 END VALUE_W2_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W3 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W3 END VALUE_W3_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W4 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W4 END VALUE_W4_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W5 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W5 END VALUE_W5_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W6 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W6 END VALUE_W6_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M0 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M0 END VALUE_M0_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M1 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M1 END VALUE_M1_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M2 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M2 END VALUE_M2_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M3 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M3 END VALUE_M3_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M4 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M4 END VALUE_M4_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M5 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M5 END VALUE_M5_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M6 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M6 END VALUE_M6_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M7 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M7 END VALUE_M7_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M8 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M8 END VALUE_M8_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M9 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M9 END VALUE_M9_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M10 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M10 END VALUE_M10_HD
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M11 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M11 END VALUE_M11_HD
				         
				         #else
				         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W1 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W1_ORG
					           ELSE VALUE_W1 END VALUE_W1_HD
					           
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W2 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W2_ORG
					           ELSE VALUE_W2 END VALUE_W2_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W3 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W3_ORG
					           ELSE VALUE_W3 END VALUE_W3_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W4 <![CDATA[<]]> 0 THEN 0
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W4_ORG
					           ELSE VALUE_W4 END VALUE_W4_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W5 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W5_ORG
					           ELSE VALUE_W5 END VALUE_W5_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W6 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W6_ORG
					           ELSE VALUE_W6 END VALUE_W6_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M0 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M0_ORG
					           ELSE VALUE_M0 END VALUE_M0_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M1 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M1_ORG
					           ELSE VALUE_M1 END VALUE_M1_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M2 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M2_ORG
					           ELSE VALUE_M2 END VALUE_M2_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M3 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M3_ORG
					           ELSE VALUE_M3 END VALUE_M3_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M4 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M4_ORG
					           ELSE VALUE_M4 END VALUE_M4_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M5 <![CDATA[<]]> 0 THEN 0
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M5_ORG 
					           ELSE VALUE_M5 END VALUE_M5_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M6 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M6_ORG
					           ELSE VALUE_M6 END VALUE_M6_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M7 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M7_ORG
					           ELSE VALUE_M7 END VALUE_M7_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M8 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M8_ORG
					           ELSE VALUE_M8 END VALUE_M8_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M9 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M9_ORG
					           ELSE VALUE_M9 END VALUE_M9_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M10 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M10_ORG
					           ELSE VALUE_M10 END VALUE_M10_HD
					         
					         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M11 <![CDATA[<]]> 0 THEN 0 
					           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M11_ORG
					           ELSE VALUE_M11 END VALUE_M11_HD
				         
				         #end
				         
					FROM TB_HIS_APS_MAT_PSI HAMP WITH(NOLOCK)
					INNER JOIN TB_MST_ITEM MI WITH(NOLOCK)
					   ON MI.COMPANY_CD = HAMP.COMPANY_CD
					  AND MI.BU_CD = HAMP.BU_CD
					  AND MI.ITEM_CD = HAMP.ITEM_CD 
					LEFT OUTER JOIN TB_MST_ITEM_GROUP MIG WITH(NOLOCK)
					  ON MIG.COMPANY_CD = MI.COMPANY_CD
					 AND MIG.BU_CD = MI.BU_CD
					 AND MIG.ITEM_GROUP_CD = MI.ITEM_GROUP_CD
					LEFT OUTER JOIN TB_MST_ITEM_PLANT MIP WITH(NOLOCK)
					  ON MIP.COMPANY_CD = HAMP.COMPANY_CD
					 AND MIP.BU_CD = HAMP.BU_CD
					 AND MIP.PLANT_CD = 'WF01'
					 AND MIP.ITEM_CD = HAMP.ITEM_CD
					LEFT OUTER JOIN TB_MST_CODE MC1 WITH(NOLOCK)
					  ON MC1.BU_CD = 'ALL'
					 AND MC1.GROUP_CD = 'ITEM_TYPE'
					 AND MC1.CODE_CD = MI.ITEM_TYPE
					 AND MC1.USE_FLAG = 'Y'
					LEFT OUTER JOIN TB_MST_CODE MC2 WITH(NOLOCK)
					  ON MC2.BU_CD = 'ALL'
					 AND MC2.GROUP_CD = 'PROCUR_TYPE'
					 AND MC2.CODE_CD = MIP.PROCUR_TYPE
					 AND MC2.USE_FLAG = 'Y'
					WHERE HAMP.COMPANY_CD = @{GV_COMPANY_CD}
					  AND HAMP.BU_CD = @{GV_BU_CD}
					  AND HAMP.PLAN_ID = @{planId}
					  AND HAMP.VERSION_ID = @D_VERSION_ID
					#if($_parameter.itemType and $_parameter.itemType != "")
					  AND MI.ITEM_TYPE IN ('$_parameter.itemType.replace(",","','")')
			  		#end
			  		#if($_parameter.procurType and $_parameter.procurType != "")
					  AND MIP.PROCUR_TYPE IN ('$_parameter.procurType.replace(",","','")')
			  		#end
			  		#if($_parameter.itemGroup and $_parameter.itemGroup != "")
					  AND MI.ITEM_GROUP_CD IN ('$_parameter.itemGroup.replace(",","','")')
			  		#end
			  		#if($_parameter.item_nm and $_parameter.item_nm != ""  )
					  AND (MI.ITEM_CD  LIKE '%'+@{item_nm}+'%' OR MI.ITEM_NM LIKE '%'+@{item_nm}+'%')
					#end
					UNION ALL
					SELECT HAMP.COMPANY_CD
				         , HAMP.BU_CD
				         , HAMP.PLAN_ID
				         , HAMP.VERSION_ID
				         , MI.ITEM_GROUP_CD
				         , MIG.ITEM_GROUP_NM
				         , CASE WHEN 'ko' = @{GV_LANG} THEN MC1.CODE_NM_KR
			                    WHEN 'cn' = @{GV_LANG} THEN MC1.CODE_NM_CN
			                    ELSE MC1.CODE_NM
			                END ITEM_TYPE_CD
			             , CASE WHEN 'ko' = @{GV_LANG} THEN MC2.CODE_NM_KR
			                    WHEN 'cn' = @{GV_LANG} THEN MC2.CODE_NM_CN
			                    ELSE MC2.CODE_NM
			                END PROCUR_TYPE
				         , HAMP.ITEM_CD
				         , MI.ITEM_NM
				         , MI.SPEC
				         , MI.ITEM_COST_KRW
				         , MIP.SS_QTY_DISP
				         , CASE WHEN HAMP.MEAS_CD = 'FILL_RATE' THEN NULL ELSE REPLACE(HAMP.MEAS_CD, 'QTY', 'AMT') END MEAS_CD
				         
				         #if($_parameter.schedDateOrgDate == "SCHED")
				         , HAMP.VALUE_W1 * MI.ITEM_COST_KRW AS VALUE_AMT_W1
				         , HAMP.VALUE_W2 * MI.ITEM_COST_KRW AS VALUE_AMT_W2
				         , HAMP.VALUE_W3 * MI.ITEM_COST_KRW AS VALUE_AMT_W3
				         , HAMP.VALUE_W4 * MI.ITEM_COST_KRW AS VALUE_AMT_W4
				         , HAMP.VALUE_W5 * MI.ITEM_COST_KRW AS VALUE_AMT_W5
				         , HAMP.VALUE_W6 * MI.ITEM_COST_KRW AS VALUE_AMT_W6
				         , HAMP.VALUE_M0 * MI.ITEM_COST_KRW AS VALUE_AMT_M0
				         , HAMP.VALUE_M1 * MI.ITEM_COST_KRW AS VALUE_AMT_M1
				         , HAMP.VALUE_M2 * MI.ITEM_COST_KRW AS VALUE_AMT_M2
				         , HAMP.VALUE_M3 * MI.ITEM_COST_KRW AS VALUE_AMT_M3
				         , HAMP.VALUE_M4 * MI.ITEM_COST_KRW AS VALUE_AMT_M4
				         , HAMP.VALUE_M5 * MI.ITEM_COST_KRW AS VALUE_AMT_M5
				         , HAMP.VALUE_M6 * MI.ITEM_COST_KRW AS VALUE_AMT_M6
				         , HAMP.VALUE_M7 * MI.ITEM_COST_KRW AS VALUE_AMT_M7
				         , HAMP.VALUE_M8 * MI.ITEM_COST_KRW AS VALUE_AMT_M8
				         , HAMP.VALUE_M9 * MI.ITEM_COST_KRW AS VALUE_AMT_M9
				         , HAMP.VALUE_M10 * MI.ITEM_COST_KRW AS VALUE_AMT_M10
				         , HAMP.VALUE_M11 * MI.ITEM_COST_KRW AS VALUE_AMT_M11
				         #else
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_W1_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_W1 * MI.ITEM_COST_KRW END AS VALUE_AMT_W1
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_W2_ORG * MI.ITEM_COST_KRW  ELSE	HAMP.VALUE_W2 * MI.ITEM_COST_KRW END AS VALUE_AMT_W2
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_W3_ORG * MI.ITEM_COST_KRW  ELSE 	HAMP.VALUE_W3 * MI.ITEM_COST_KRW END AS VALUE_AMT_W3
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_W4_ORG * MI.ITEM_COST_KRW  ELSE	HAMP.VALUE_W4 * MI.ITEM_COST_KRW END AS VALUE_AMT_W4
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_W5_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_W5 * MI.ITEM_COST_KRW END AS VALUE_AMT_W5
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_W6_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_W6 * MI.ITEM_COST_KRW END AS VALUE_AMT_W6
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M0_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_M0 * MI.ITEM_COST_KRW END AS VALUE_AMT_M0
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M1_ORG * MI.ITEM_COST_KRW  ELSE	HAMP.VALUE_M1 * MI.ITEM_COST_KRW END AS VALUE_AMT_M1
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M2_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_M2 * MI.ITEM_COST_KRW END AS VALUE_AMT_M2
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M3_ORG * MI.ITEM_COST_KRW  ELSE	HAMP.VALUE_M3 * MI.ITEM_COST_KRW END AS VALUE_AMT_M3
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M4_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_M4 * MI.ITEM_COST_KRW END AS VALUE_AMT_M4
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M5_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_M5 * MI.ITEM_COST_KRW END AS VALUE_AMT_M5
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M6_ORG * MI.ITEM_COST_KRW  ELSE	HAMP.VALUE_M6 * MI.ITEM_COST_KRW END AS VALUE_AMT_M6
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M7_ORG * MI.ITEM_COST_KRW  ELSE	HAMP.VALUE_M7 * MI.ITEM_COST_KRW END AS VALUE_AMT_M7
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M8_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_M8 * MI.ITEM_COST_KRW END AS VALUE_AMT_M8
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M9_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_M9 * MI.ITEM_COST_KRW END AS VALUE_AMT_M9
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M10_ORG * MI.ITEM_COST_KRW  ELSE  HAMP.VALUE_M10 * MI.ITEM_COST_KRW END AS VALUE_AMT_M10
				         , CASE WHEN (MEAS_CD = 'EXP_QTY') THEN HAMP.VALUE_M11_ORG * MI.ITEM_COST_KRW  ELSE	 HAMP.VALUE_M11 * MI.ITEM_COST_KRW END AS VALUE_AMT_M11
				         #end
				         
   				         #if($_parameter.schedDateOrgDate == "SCHED")
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W1 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W1 * MI.ITEM_COST_KRW END VALUE_W1_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W2 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W2 * MI.ITEM_COST_KRW END VALUE_W2_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W3 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W3 * MI.ITEM_COST_KRW END VALUE_W3_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W4 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W4 * MI.ITEM_COST_KRW END VALUE_W4_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W5 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W5 * MI.ITEM_COST_KRW END VALUE_W5_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W6 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_W6 * MI.ITEM_COST_KRW END VALUE_W6_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M0 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M0 * MI.ITEM_COST_KRW END VALUE_M0_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M1 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M1 * MI.ITEM_COST_KRW END VALUE_M1_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M2 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M2 * MI.ITEM_COST_KRW END VALUE_M2_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M3 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M3 * MI.ITEM_COST_KRW END VALUE_M3_HD
						 , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M4 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M4 * MI.ITEM_COST_KRW END VALUE_M4_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M5 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M5 * MI.ITEM_COST_KRW END VALUE_M5_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M6 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M6 * MI.ITEM_COST_KRW END VALUE_M6_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M7 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M7 * MI.ITEM_COST_KRW END VALUE_M7_HD					
					     , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M8 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M8 * MI.ITEM_COST_KRW END VALUE_M8_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M9 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M9 * MI.ITEM_COST_KRW END VALUE_M9_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M10 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M10 * MI.ITEM_COST_KRW END VALUE_M10_HD
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M11 <![CDATA[<]]> 0 THEN 0 ELSE VALUE_M11 * MI.ITEM_COST_KRW END VALUE_M11_HD
				         #else
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W1 <![CDATA[<]]> 0 THEN 0 
				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W1_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_W1 * MI.ITEM_COST_KRW END VALUE_W1_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W2 <![CDATA[<]]> 0 THEN 0 
				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W2_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_W2 * MI.ITEM_COST_KRW END VALUE_W2_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W3 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W3_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_W3 * MI.ITEM_COST_KRW END VALUE_W3_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W4 <![CDATA[<]]> 0 THEN 0 
				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W4_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_W4 * MI.ITEM_COST_KRW END VALUE_W4_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W5 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W5_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_W5 * MI.ITEM_COST_KRW END VALUE_W5_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_W6 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_W6_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_W6 * MI.ITEM_COST_KRW END VALUE_W6_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M0 <![CDATA[<]]> 0 THEN 0 
   			               		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M0_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M0 * MI.ITEM_COST_KRW END VALUE_M0_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M1 <![CDATA[<]]> 0 THEN 0 
   			               		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M1_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M1 * MI.ITEM_COST_KRW END VALUE_M1_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M2 <![CDATA[<]]> 0 THEN 0 
				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M2_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M2 * MI.ITEM_COST_KRW END VALUE_M2_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M3 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M3_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M3 * MI.ITEM_COST_KRW END VALUE_M3_HD
						 
						 , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M4 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M4_ORG * MI.ITEM_COST_KRW
						   ELSE VALUE_M4 * MI.ITEM_COST_KRW END VALUE_M4_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M5 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M5_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M5 * MI.ITEM_COST_KRW END VALUE_M5_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M6 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M6_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M6 * MI.ITEM_COST_KRW END VALUE_M6_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M7 <![CDATA[<]]> 0 THEN 0 
  				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M7_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M7 * MI.ITEM_COST_KRW END VALUE_M7_HD					
					     
					     , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M8 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M8_ORG * MI.ITEM_COST_KRW
					       ELSE VALUE_M8 * MI.ITEM_COST_KRW END VALUE_M8_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M9 <![CDATA[<]]> 0 THEN 0 
  				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M9_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M9 * MI.ITEM_COST_KRW END VALUE_M9_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M10 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M10_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M10 * MI.ITEM_COST_KRW END VALUE_M10_HD
				         
				         , CASE WHEN (MEAS_CD = 'MOL_BOH_QTY' OR MEAS_CD = 'MOL_EXP_QTY') AND VALUE_M11 <![CDATA[<]]> 0 THEN 0 
   				           		WHEN (MEAS_CD = 'EXP_QTY') 															   THEN HAMP.VALUE_M11_ORG * MI.ITEM_COST_KRW
				           ELSE VALUE_M11 * MI.ITEM_COST_KRW END VALUE_M11_HD
				         #end
					FROM TB_HIS_APS_MAT_PSI HAMP WITH(NOLOCK)
					INNER JOIN TB_MST_ITEM MI WITH(NOLOCK)
					   ON MI.COMPANY_CD = HAMP.COMPANY_CD
					  AND MI.BU_CD = HAMP.BU_CD
					  AND MI.ITEM_CD = HAMP.ITEM_CD 
					LEFT OUTER JOIN TB_MST_ITEM_GROUP MIG WITH(NOLOCK)
					  ON MIG.COMPANY_CD = MI.COMPANY_CD
					 AND MIG.BU_CD = MI.BU_CD
					 AND MIG.ITEM_GROUP_CD = MI.ITEM_GROUP_CD
					LEFT OUTER JOIN TB_MST_ITEM_PLANT MIP WITH(NOLOCK)
					  ON MIP.COMPANY_CD = HAMP.COMPANY_CD
					 AND MIP.BU_CD = HAMP.BU_CD
					 AND MIP.PLANT_CD = 'WF01'
					 AND MIP.ITEM_CD = HAMP.ITEM_CD
					LEFT OUTER JOIN TB_MST_CODE MC1 WITH(NOLOCK)
					  ON MC1.BU_CD = 'ALL'
					 AND MC1.GROUP_CD = 'ITEM_TYPE'
					 AND MC1.CODE_CD = MI.ITEM_TYPE
					 AND MC1.USE_FLAG = 'Y'
					LEFT OUTER JOIN TB_MST_CODE MC2 WITH(NOLOCK)
					  ON MC2.BU_CD = 'ALL'
					 AND MC2.GROUP_CD = 'PROCUR_TYPE'
					 AND MC2.CODE_CD = MIP.PROCUR_TYPE
					 AND MC2.USE_FLAG = 'Y'
					WHERE HAMP.COMPANY_CD = @{GV_COMPANY_CD}
					  AND HAMP.BU_CD = @{GV_BU_CD}
					  AND HAMP.PLAN_ID = @{planId}
					  AND HAMP.VERSION_ID = @D_VERSION_ID
					#if($_parameter.itemType and $_parameter.itemType != "")
					  AND MI.ITEM_TYPE IN ('$_parameter.itemType.replace(",","','")')
			  		#end
			  		#if($_parameter.procurType and $_parameter.procurType != "")
					  AND MIP.PROCUR_TYPE IN ('$_parameter.procurType.replace(",","','")')
			  		#end
			  		#if($_parameter.itemGroup and $_parameter.itemGroup != "")
					  AND MI.ITEM_GROUP_CD IN ('$_parameter.itemGroup.replace(",","','")')
			  		#end
			  		#if($_parameter.item_nm and $_parameter.item_nm != ""  )
					  AND (MI.ITEM_CD  LIKE '%'+@{item_nm}+'%' OR MI.ITEM_NM LIKE '%'+@{item_nm}+'%')
					#end
				) A
				WHERE A.MEAS_CD IS NOT NULL
			),
			W_MEASURE AS 
			(
				SELECT CATEGORY_CD
				     , CATEGORY_NM
				     , CATEGORY_IDX 
			    FROM 
			    (
					SELECT NULL AS CATEGORY_CD
				       	 , NULL AS CATEGORY_NM
				       	 , NULL AS CATEGORY_IDX
					#foreach( $meaMap in $_parameter.meaList )
				    UNION ALL 
				    SELECT '$meaMap.CD'
				         , '$meaMap.NM'
				         , $foreach.count 
					#end
				) A
			    WHERE CATEGORY_CD IS NOT NULL
			),
			W_MEASURE_MAIN AS
			(
				SELECT *
		        FROM
		        (
		          	SELECT A1.COMPANY_CD
		          	     , A1.BU_CD
		          	     , A1.ITEM_GROUP_CD
		          	     , A1.ITEM_GROUP_NM
		          	     , A1.ITEM_TYPE_CD
		          	     , A1.PROCUR_TYPE
		          	     , A1.ITEM_CD
		          	     , A1.ITEM_NM
		          	     , A1.SPEC
		          	     , A1.ITEM_COST_KRW
		          	     , A1.SS_QTY_DISP
					FROM W_DATA A1
		          	GROUP BY A1.COMPANY_CD, A1.BU_CD, A1.ITEM_GROUP_CD, A1.ITEM_GROUP_NM, A1.ITEM_TYPE_CD, A1.PROCUR_TYPE, A1.ITEM_CD, A1.ITEM_NM, A1.SPEC, A1.ITEM_COST_KRW, A1.SS_QTY_DISP
		        ) B1
		        CROSS JOIN W_MEASURE B2
			),
			W_MAIN AS 
			(
				SELECT NULL AS TMP_COL
				     , ISNULL(C1.ITEM_GROUP_CD, ' ') AS ITEM_GROUP_CD
					 , ISNULL(C1.ITEM_GROUP_CD, ' ') AS ITEM_GROUP_CD_NM
	          	     , ISNULL(C1.ITEM_GROUP_NM, ' ') AS ITEM_GROUP_NM
	          	     , ISNULL(C1.ITEM_GROUP_NM, ' ') AS ITEM_GROUP_NM_NM
	          	     , ISNULL(C1.ITEM_TYPE_CD, ' ') AS ITEM_TYPE_CD
	          	     , ISNULL(C1.ITEM_TYPE_CD, ' ') AS ITEM_TYPE_CD_NM
	          	     , ISNULL(C1.PROCUR_TYPE, ' ') AS PROCUR_TYPE
	          	     , ISNULL(C1.PROCUR_TYPE, ' ') AS PROCUR_TYPE_NM
	          	     , ISNULL(C1.ITEM_CD, ' ') AS ITEM_CD
	          	     , ISNULL(C1.ITEM_CD, ' ') AS ITEM_CD_NM
	          	     , ISNULL(C1.ITEM_NM, ' ') AS ITEM_NM
	          	     , ISNULL(C1.ITEM_NM, ' ') AS ITEM_NM_NM
	          	     , ISNULL(C1.SPEC, ' ') AS SPEC
	          	     , ISNULL(C1.SPEC, ' ') AS SPEC_NM
	          	     , ISNULL(CONVERT(VARCHAR, C1.ITEM_COST_KRW), ' ') AS ITEM_COST_KRW
			         , ISNULL(CONVERT(VARCHAR, C1.ITEM_COST_KRW), ' ') AS ITEM_COST_KRW_NM
			         , ISNULL(CONVERT(VARCHAR, C1.SS_QTY_DISP), ' ') AS SS_QTY_DISP
			         , ISNULL(CONVERT(VARCHAR, C1.SS_QTY_DISP), ' ') AS SS_QTY_DISP_NM
	          	     , C1.CATEGORY_CD
	          	     , C1.CATEGORY_NM
                     , C1.CATEGORY_IDX
				     , C2.VALUE_W1
				     , C2.VALUE_W2
				     , C2.VALUE_W3
				     , C2.VALUE_W4
				     , C2.VALUE_W5
				     , C2.VALUE_W6
				     , C2.VALUE_M0
				     , C2.VALUE_M1
				     , C2.VALUE_M2
				     , C2.VALUE_M3
				     , C2.VALUE_M4
				     , C2.VALUE_M5
				     , C2.VALUE_M6
				     , C2.VALUE_M7
				     , C2.VALUE_M8
				     , C2.VALUE_M9
				     , C2.VALUE_M10
				     , C2.VALUE_M11
				     , C2.VALUE_W1_HD
				     , C2.VALUE_W2_HD
				     , C2.VALUE_W3_HD
				     , C2.VALUE_W4_HD
				     , C2.VALUE_W5_HD
				     , C2.VALUE_W6_HD
				     , C2.VALUE_M0_HD
				     , C2.VALUE_M1_HD
				     , C2.VALUE_M2_HD
				     , C2.VALUE_M3_HD
				     , C2.VALUE_M4_HD
				     , C2.VALUE_M5_HD
				     , C2.VALUE_M6_HD
				     , C2.VALUE_M7_HD
				     , C2.VALUE_M8_HD
				     , C2.VALUE_M9_HD
				     , C2.VALUE_M10_HD
				     , C2.VALUE_M11_HD
				     
			    FROM W_MEASURE_MAIN C1
			    LEFT OUTER JOIN W_DATA C2
			      ON C1.COMPANY_CD = C2.COMPANY_CD
			     AND C1.BU_CD = C2.BU_CD
			     AND C1.ITEM_GROUP_CD = C2.ITEM_GROUP_CD
			     AND C1.ITEM_TYPE_CD = C2.ITEM_TYPE_CD
			     AND C1.PROCUR_TYPE = C2.PROCUR_TYPE
			     AND C1.ITEM_CD = C2.ITEM_CD
			     AND C1.CATEGORY_CD = C2.MEAS_CD
			)
			SELECT NULL AS TMP_COL
	 		     <include refid="include.getDimTotal"/>
			     , TTT.GRP_LVL_ID
			     , TTT.CATEGORY_CD
			     , TTT.CATEGORY_NM
			     , TTT.CATEGORY_IDX
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_W1 ELSE VALUE_W1_HD END VALUE_W1
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_W2 ELSE VALUE_W2_HD END VALUE_W2
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_W3 ELSE VALUE_W3_HD END VALUE_W3
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_W4 ELSE VALUE_W4_HD END VALUE_W4
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_W5 ELSE VALUE_W5_HD END VALUE_W5
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_W6 ELSE VALUE_W6_HD END VALUE_W6
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M0 ELSE VALUE_M0_HD END VALUE_M0
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M1 ELSE VALUE_M1_HD END VALUE_M1
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M2 ELSE VALUE_M2_HD END VALUE_M2
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M3 ELSE VALUE_M3_HD END VALUE_M3
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M4 ELSE VALUE_M4_HD END VALUE_M4
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M5 ELSE VALUE_M5_HD END VALUE_M5
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M6 ELSE VALUE_M6_HD END VALUE_M6
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M7 ELSE VALUE_M7_HD END VALUE_M7
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M8 ELSE VALUE_M8_HD END VALUE_M8
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M9 ELSE VALUE_M9_HD END VALUE_M9
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M10 ELSE VALUE_M10_HD END VALUE_M10
			     , CASE WHEN (CATEGORY_CD = 'MOL_BOH_QTY' OR CATEGORY_CD = 'MOL_BOH_AMT' OR CATEGORY_CD = 'MOL_EXP_QTY' OR CATEGORY_CD = 'MOL_EXP_AMT') AND GRP_LVL_ID = 0 THEN VALUE_M11 ELSE VALUE_M11_HD END VALUE_M11  
			     , TTT.OMIT_FLAG
			FROM
			(
				SELECT NULL AS TMP_COL
					#foreach( $dimMap in $_parameter.dimList )
				     , TT.$dimMap.DIM_CD
				     , MAX(TT.${dimMap.DIM_CD}_NM) AS ${dimMap.DIM_CD}_NM
				    #end
					<include refid="include.getGrpLvlId"/>
					 , TT.CATEGORY_CD
				     , TT.CATEGORY_NM
				     , TT.CATEGORY_IDX
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W1) ELSE SUM(TT.VALUE_W1) END VALUE_W1
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W2) ELSE SUM(TT.VALUE_W2) END VALUE_W2
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W3) ELSE SUM(TT.VALUE_W3) END VALUE_W3
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W4) ELSE SUM(TT.VALUE_W4) END VALUE_W4
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W5) ELSE SUM(TT.VALUE_W5) END VALUE_W5
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W6) ELSE SUM(TT.VALUE_W6) END VALUE_W6
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M0) ELSE SUM(TT.VALUE_M0) END VALUE_M0
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M1) ELSE SUM(TT.VALUE_M1) END VALUE_M1
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M2) ELSE SUM(TT.VALUE_M2) END VALUE_M2
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M3) ELSE SUM(TT.VALUE_M3) END VALUE_M3
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M4) ELSE SUM(TT.VALUE_M4) END VALUE_M4
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M5) ELSE SUM(TT.VALUE_M5) END VALUE_M5
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M6) ELSE SUM(TT.VALUE_M6) END VALUE_M6
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M7) ELSE SUM(TT.VALUE_M7) END VALUE_M7
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M8) ELSE SUM(TT.VALUE_M8) END VALUE_M8
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M9) ELSE SUM(TT.VALUE_M9) END VALUE_M9
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M10) ELSE SUM(TT.VALUE_M10) END VALUE_M10
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M11) ELSE SUM(TT.VALUE_M11) END VALUE_M11
				     
				     
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W1_HD) ELSE SUM(TT.VALUE_W1_HD) END VALUE_W1_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W2_HD) ELSE SUM(TT.VALUE_W2_HD) END VALUE_W2_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W3_HD) ELSE SUM(TT.VALUE_W3_HD) END VALUE_W3_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W4_HD) ELSE SUM(TT.VALUE_W4_HD) END VALUE_W4_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W5_HD) ELSE SUM(TT.VALUE_W5_HD) END VALUE_W5_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W6_HD) ELSE SUM(TT.VALUE_W6_HD) END VALUE_W6_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M0_HD) ELSE SUM(TT.VALUE_M0_HD) END VALUE_M0_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M1_HD) ELSE SUM(TT.VALUE_M1_HD) END VALUE_M1_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M2_HD) ELSE SUM(TT.VALUE_M2_HD) END VALUE_M2_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M3_HD) ELSE SUM(TT.VALUE_M3_HD) END VALUE_M3_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M4_HD) ELSE SUM(TT.VALUE_M4_HD) END VALUE_M4_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M5_HD) ELSE SUM(TT.VALUE_M5_HD) END VALUE_M5_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M6_HD) ELSE SUM(TT.VALUE_M6_HD) END VALUE_M6_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M7_HD) ELSE SUM(TT.VALUE_M7_HD) END VALUE_M7_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M8_HD) ELSE SUM(TT.VALUE_M8_HD) END VALUE_M8_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M9_HD) ELSE SUM(TT.VALUE_M9_HD) END VALUE_M9_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M10_HD) ELSE SUM(TT.VALUE_M10_HD) END VALUE_M10_HD
				     , CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M11_HD) ELSE SUM(TT.VALUE_M11_HD) END VALUE_M11_HD
				     
				     
				     , 0
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W1) ELSE SUM(TT.VALUE_W1) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W2) ELSE SUM(TT.VALUE_W2) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W3) ELSE SUM(TT.VALUE_W3) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W4) ELSE SUM(TT.VALUE_W4) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W5) ELSE SUM(TT.VALUE_W5) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_W6) ELSE SUM(TT.VALUE_W6) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M0) ELSE SUM(TT.VALUE_M0) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M1) ELSE SUM(TT.VALUE_M1) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M2) ELSE SUM(TT.VALUE_M2) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M3) ELSE SUM(TT.VALUE_M3) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M4) ELSE SUM(TT.VALUE_M4) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M5) ELSE SUM(TT.VALUE_M5) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M6) ELSE SUM(TT.VALUE_M6) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M7) ELSE SUM(TT.VALUE_M7) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M8) ELSE SUM(TT.VALUE_M8) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M9) ELSE SUM(TT.VALUE_M9) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M10) ELSE SUM(TT.VALUE_M10) END), 0)
				     + ISNULL(ABS(CASE WHEN CATEGORY_CD = 'FILL_RATE' THEN AVG(TT.VALUE_M11) ELSE SUM(TT.VALUE_M11) END), 0)
				     
				     
				     
				     AS OMIT_FLAG
				FROM W_MAIN TT
				GROUP BY ROLLUP (<include refid="include.getCdRollup"/>), TT.CATEGORY_CD, TT.CATEGORY_NM, TT.CATEGORY_IDX
			) TTT
			ORDER BY TTT.TMP_COL
			#foreach( $dimMap in $_parameter.dimList )
	       	, TTT.$dimMap.DIM_CD
	       	#end
	        , TTT.CATEGORY_IDX
		END;
	</select>
</mapper>

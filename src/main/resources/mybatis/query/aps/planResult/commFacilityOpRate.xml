<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="aps.planResult">
	<select id="versionTypeCdSelect" parameterType="map" resultType="map">
		/****** [ aps.planResult.versionTypeCdSelect ] ******/
		SELECT A1.CODE_CD
		     , CASE WHEN @{GV_LANG} = 'ko' THEN A1.CODE_NM_KR
		            WHEN @{GV_LANG} = 'cn' THEN A1.CODE_NM_CN
		            ELSE A1.CODE_NM
		       END AS CODE_NM
		FROM TB_MST_CODE A1 WITH(NOLOCK)
		WHERE A1.BU_CD = @{GV_BU_CD}
		  AND A1.GROUP_CD = 'VERSION_TYPE_CD'
		  AND A1.USE_FLAG = 'Y'
		  AND A1.ATTB_2_CD = 'Y'
	</select>
	
	<select id="commFacilityOpRateMeaSelect" parameterType="map" resultType="map">
		/****** [ asp.static.commFacilityOpRateMeaSelect ] ******/
		SELECT CODE_CD AS CD
		     , ATTB_1_CD AS NM
		     , SORT
		     , 'Y' AS MAND_FLAG
		     , 'N' AS DEFAULT_FLAG
		     , 'N' AS MAPPING_FLAG
		     , MAX(CODE_CD) OVER() AS USER_FLAG
		  FROM TB_MST_CODE WITH(NOLOCK)
		 WHERE BU_CD = @{GV_BU_CD}
		   AND GROUP_CD = 'PROD_PART'
		   AND USE_FLAG = 'Y'
		   AND ATTB_2_CD IS NOT NULL
		ORDER BY SORT
	</select>
	
	<select id="commFacilityOpRateSelect" parameterType="map" resultType="map">
		/****** [ aps.planResult.commFacilityOpRateSelect ] ******/
		WITH W_DATA AS 
		(
		    SELECT HACU.WC_CD
		         , MWC.WC_NM
		         , MR.RESOURCE_CNT
		         , HACU.YEARWEEK
		         , HACU.PROD_PART
		         , HACU.MEAS_CD
		         , HACU.[VALUE] AS VALUE
			FROM TB_HIS_APS_CAPA_UTIL_COMM HACU WITH(NOLOCK)
		    INNER JOIN TB_MST_WORK_CENTER MWC WITH(NOLOCK)
		       ON MWC.COMPANY_CD = HACU.COMPANY_CD
		      AND MWC.BU_CD = HACU.BU_CD
		      AND MWC.WC_CD = HACU.WC_CD
		      AND MWC.COMM_FLAG = 'Y'
		      AND MWC.PLANT_CD = 'WF01'
		      AND HACU.VERSION_TYPE_CD = @{versionType}
		    OUTER APPLY 
		    (
				SELECT COUNT(RESOURCE_CD) AS RESOURCE_CNT
		        FROM TB_MST_RESOURCE MR WITH(NOLOCK)
		        WHERE MR.COMPANY_CD = MWC.COMPANY_CD
		          AND MR.BU_CD = MWC.BU_CD
		          AND MR.WC_CD = MWC.WC_CD
		          AND MR.RESOURCE_TYPE = MWC.WC_MGR
			) MR
		    WHERE HACU.COMPANY_CD = @{GV_COMPANY_CD}
		      AND HACU.BU_CD = @{GV_BU_CD}
		      AND HACU.PLAN_ID = @{planId}
		      AND HACU.YEARWEEK BETWEEN @{fromWeek} AND @{toWeek}
			#if($_parameter.workplaces and $_parameter.workplaces != "")
		      AND HACU.WC_CD IN ('$_parameter.workplaces.replace(",","','")')
			#end
		),
		W_COL AS 
		(
		    SELECT A.WC_CD
		         , A.WC_NM
		         , A.RESOURCE_CNT
		         , A.YEARWEEK
		         , A.PROD_PART
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME' THEN A.VALUE ELSE NULL END) AS NEED_TIME
		         , SUM(CASE WHEN A.MEAS_CD = 'AVAIL_TIME' THEN A.VALUE ELSE NULL END) AS AVAIL_TIME
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME_DMD1' THEN A.VALUE ELSE NULL END) AS NEED_TIME_DMD1
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME_DMD2' THEN A.VALUE ELSE NULL END) AS NEED_TIME_DMD2
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME_DMD3' THEN A.VALUE ELSE NULL END) AS NEED_TIME_DMD3
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME_SS' THEN A.VALUE ELSE NULL END) AS NEED_TIME_SS
		         
			FROM W_DATA A
		    GROUP BY A.WC_CD, A.WC_NM, A.RESOURCE_CNT, A.YEARWEEK, A.PROD_PART
		    UNION ALL
		    SELECT A.WC_CD
		         , A.WC_NM
		         , A.RESOURCE_CNT
		         , 'TOTAL' AS YEARWEEK
		         , A.PROD_PART
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME' THEN A.VALUE ELSE NULL END) AS NEED_TIME
		         , SUM(CASE WHEN A.MEAS_CD = 'AVAIL_TIME' THEN A.VALUE ELSE NULL END) AS AVAIL_TIME
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME_DMD1' THEN A.VALUE ELSE NULL END) AS NEED_TIME_DMD1
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME_DMD2' THEN A.VALUE ELSE NULL END) AS NEED_TIME_DMD2
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME_DMD3' THEN A.VALUE ELSE NULL END) AS NEED_TIME_DMD3
		         , SUM(CASE WHEN A.MEAS_CD = 'NEED_TIME_SS' THEN A.VALUE ELSE NULL END) AS NEED_TIME_SS
			FROM W_DATA A
		    GROUP BY A.WC_CD, A.WC_NM, A.RESOURCE_CNT, A.PROD_PART
		),
		W_MEASURE AS 
		(
	    	SELECT CATEGORY_CD
	    	     , CATEGORY_NM
	    	     , CATEGORY_IDX 
	        FROM 
	        (
	        	SELECT NULL AS CATEGORY_CD
	        	     , NULL AS CATEGORY_NM
	        	     , NULL AS CATEGORY_IDX
				#foreach( $meaMap in $_parameter.meaList )
	            UNION ALL 
	            SELECT '$meaMap.CD'
	                 , '$meaMap.NM'
	                 , $velocityCount 
				#end
			) A
	        WHERE CATEGORY_CD IS NOT NULL
		),
		W_CAL AS 
		(
		    SELECT T.WC_CD
		         , T.WC_NM
		         , T.RESOURCE_CNT
		         , T.YEARWEEK
		         , T.PROD_PART
		         , T.NEED_TIME
		         , T.AVAIL_TIME
		         , T.NEED_TIME_DMD1
		         , T.NEED_TIME_DMD2
		         , T.NEED_TIME_DMD3
		         , T.NEED_TIME_SS
		         , ROUND(T.NEED_TIME / NULLIF(T.AVAIL_TIME, 0) * 100, 1) AS LOAD_FACTOR
		         , ROUND(T.RESOURCE_CNT * (T.NEED_TIME / NULLIF(T.AVAIL_TIME, 0)), 3) AS NEED_CNT
		         , T.RESOURCE_CNT * ((ROUND(T.NEED_TIME / NULLIF(T.AVAIL_TIME, 0), 3)) / NULLIF(ROUND(SUM(T.NEED_TIME / NULLIF(T.AVAIL_TIME, 0)) OVER(PARTITION BY T.WC_CD, T.WC_NM, T.RESOURCE_CNT, T.YEARWEEK), 3), 0)) AS ALLOC_CNT
			FROM W_COL T
		),
		W_MAIN AS 
		(
		    SELECT T1.WC_CD
		         , T1.WC_NM
		         , T1.RESOURCE_CNT
		         , T1.YEARWEEK
		         , T1.PROD_PART
		         , T2.CATEGORY_CD
		         , T2.CATEGORY_NM
		         , T2.CATEGORY_IDX
		         , CASE #foreach( $meaMap in $_parameter.meaList )
		                WHEN T2.CATEGORY_CD = '${meaMap.CD}' THEN T1.${meaMap.CD}
		                #end
		           END AS VALUE
			FROM W_CAL T1
		    CROSS JOIN W_MEASURE T2
		)
		SELECT T.WC_CD AS WC_CD_NM
		     , T.WC_NM AS WC_NM_NM
		     , T.RESOURCE_CNT AS RESOURCE_CNT_NM
		     , T.CATEGORY_CD
		     , T.CATEGORY_NM
			#foreach( $bucketMap in $_parameter.bucketList )
		     , SUM(CASE WHEN T.YEARWEEK = '$bucketMap.BUCKET_VAL' AND T.PROD_PART = SUBSTRING('$bucketMap.CD',CHARINDEX('_', '$bucketMap.CD') + 1, LEN('$bucketMap.CD')) THEN T.VALUE ELSE NULL END) AS $bucketMap.CD
		    #end
		FROM W_MAIN T
		GROUP BY T.WC_CD, T.WC_NM, T.RESOURCE_CNT, T.CATEGORY_CD, T.CATEGORY_NM, T.CATEGORY_IDX
		ORDER BY T.WC_CD, T.WC_NM, T.CATEGORY_IDX
	</select>
	
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="aps.static">

	<select id="basicWorkCalendarRscSelect" parameterType="map" resultType="map">
		/****** [ aps.static.basicWorkCalendarRscSelect ] ******/
		WITH W_CAL AS
        (
           SELECT CODE_CD AS DAY_NM
                , CASE WHEN 'KO' = UPPER(@{GV_LANG}) THEN CODE_NM_KR
                	   WHEN 'CN' = UPPER(@{GV_LANG}) THEN CODE_NM_CN
                	   ELSE CODE_NM
             	   END CODE_NM 
			FROM TB_MST_CODE WITH (NOLOCK)
            WHERE GROUP_CD = 'DAY_INDEX'
              AND USE_FLAG= 'Y'
        )
		SELECT NULL AS TMP_COL         
	         , W.BU_CD AS BU_CD         
	         , W.PART_CD AS PART_CD       
	         , W.PART_CD_NM AS PART_CD_NM
	         , W.POQ_CD AS POQ_CD
	         , W.POQ_CD_NM AS POQ_CD_NM
	         , W.WC_MGR AS WC_MGR_CD
	         , W.WC_MGR_NM AS WC_MGR_CD_NM     
	         , W.WC_CD AS WC_CD         
	         , W.WC_NM AS WC_CD_NM   
			 , W.RESOURCE_CD AS RESOURCE_CD   
	         , W.RESOURCE_NM AS RESOURCE_CD_NM
	         , W.ROUTING_ID AS ROUTING_ID
	         , W.ROUTING_ID AS ROUTING_ID_NM
			 , MAX (CASE WHEN W.DAY_NM = 'SUN' AND W.SHIFT_CODE_CD ='A'
					     THEN ROUND(X.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS SUN_A
             , MAX (CASE WHEN W.DAY_NM = 'SUN' AND W.SHIFT_CODE_CD ='B'
					     THEN ROUND(Y.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS SUN_B
             , MAX (CASE WHEN W.DAY_NM = 'MON' AND W.SHIFT_CODE_CD ='A'
					     THEN ROUND(X.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS MON_A
             , MAX (CASE WHEN W.DAY_NM = 'MON' AND W.SHIFT_CODE_CD ='B'
					     THEN ROUND(Y.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS MON_B
             , MAX (CASE WHEN W.DAY_NM = 'TUE' AND W.SHIFT_CODE_CD ='A'
					     THEN ROUND(X.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS TUE_A
			 , MAX (CASE WHEN W.DAY_NM = 'TUE' AND W.SHIFT_CODE_CD ='B'
					     THEN ROUND(Y.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS TUE_B					          
			 , MAX (CASE WHEN W.DAY_NM = 'WED' AND W.SHIFT_CODE_CD ='A'
					     THEN ROUND(X.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS WED_A
			 , MAX (CASE WHEN W.DAY_NM = 'WED' AND W.SHIFT_CODE_CD ='B'
					     THEN ROUND(Y.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS WED_B					          
             , MAX (CASE WHEN W.DAY_NM = 'THU' AND W.SHIFT_CODE_CD ='A'
					     THEN ROUND(X.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS THU_A
             , MAX (CASE WHEN W.DAY_NM = 'THU' AND W.SHIFT_CODE_CD ='B'
					     THEN ROUND(Y.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS THU_B				          
             , MAX (CASE WHEN W.DAY_NM = 'FRI' AND W.SHIFT_CODE_CD ='A'
					     THEN ROUND(X.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS FRI_A
             , MAX (CASE WHEN W.DAY_NM = 'FRI' AND W.SHIFT_CODE_CD ='B'
					     THEN ROUND(Y.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS FRI_B					          
			 , MAX (CASE WHEN W.DAY_NM = 'SAT' AND W.SHIFT_CODE_CD ='A'
					     THEN ROUND(X.OVER_TIME/3600,2)
						 ELSE NULL
					END) AS SAT_A
             , MAX (CASE WHEN W.DAY_NM = 'SAT' AND W.SHIFT_CODE_CD ='B'
					     THEN ROUND(Y.OVER_TIME/3600,2)
						 ELSE NULL
				END) AS SAT_B					          
		FROM
		(
			SELECT A.DAY_NM                                       
                 , B.PART_CD        
                 , B.PART_CD_NM 
                 , B.POQ_CD
				 , B.POQ_Cd_NM       
                 , B.WC_MGR_NM     
                 , B.WC_MGR   
                 , B.WC_CD          
                 , B.WC_NM          
                 , B.RESOURCE_CD    
                 , B.RESOURCE_NM    
                 , B.COMPANY_CD 
                 , B.BU_CD      
                 , B.PLANT_CD
                 , B.PART_SORT
                 , B.SHIFT_CODE_CD
                 , B.ROUTING_ID
			FROM W_CAL AS A
			CROSS JOIN
			(
				SELECT MC2.CODE_CD AS PART_CD     
                     , CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN MC2.CODE_NM_KR
                   			WHEN UPPER(@{GV_LANG}) = 'CN' THEN MC2.CODE_NM_CN
                   			ELSE MC2.CODE_NM
                		END AS PART_CD_NM  
                     , CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN CD.CODE_NM_KR 
                            WHEN UPPER(@{GV_LANG}) = 'CN' THEN CD.CODE_NM_CN 
                            ELSE CD.CODE_NM 
                        END AS WC_MGR_NM       
                     , MWC.WC_MGR         
                     , MWC.WC_CD                
                     , MWC.WC_NM                
                     , MR.RESOURCE_CD           
                     , MR.RESOURCE_NM           
                     , MR.COMPANY_CD
                     , MR.BU_CD     
                     , MR.PLANT_CD
                     , S.POQ_CD
                     , S.POQ_CD_NM
                     , MWC.ROUTING_ID
                     , MC2.SORT AS PART_SORT
                     , C.SHIFT_CODE_CD
              		 , C.SHIFT_CODE_NM
				FROM TB_MST_RESOURCE MR WITH(NOLOCK)
				INNER JOIN TB_MST_WORK_CENTER MWC WITH(NOLOCK)
				   ON MWC.COMPANY_CD = MR.COMPANY_CD
				  AND MWC.BU_CD      = MR.BU_CD
                  AND MWC.WC_CD      = MR.WC_CD
                  AND MWC.WC_MGR     = MR.RESOURCE_TYPE
                  AND MWC.PLANT_CD   = 'WF01'
				INNER JOIN TB_MST_CODE CD WITH(NOLOCK)
				   ON MWC.WC_MGR = CD.CODE_CD
                  AND CD.GROUP_CD ='RESOURCE_TYPE'
                  AND CD.USE_FLAG !='N'
				LEFT OUTER JOIN TB_MST_CODE MC1 WITH(NOLOCK)
  				  ON MC1.BU_CD    = MWC.BU_CD
                 AND MC1.GROUP_CD = 'PROD_L2'
                 AND MC1.CODE_CD  = MWC.ROUTING_ID
				LEFT OUTER JOIN TB_MST_CODE MC2 WITH(NOLOCK)
 				  ON MC2.BU_CD    = MC1.BU_CD
                 AND MC2.GROUP_CD = 'PROD_PART'
                 AND MC2.CODE_CD  = MC1.ATTB_2_CD 
				INNER JOIN 
				(
		        	SELECT CODE_CD AS POQ_CD
		        	     , CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN CODE_NM_KR
							    WHEN UPPER(@{GV_LANG}) = 'CN' THEN CODE_NM_CN
							    ELSE CODE_NM
							END AS POQ_CD_NM
					FROM TB_MST_CODE WITH (NOLOCK)
					WHERE BU_CD IN ('ALL',  @{GV_BU_CD})
					  AND USE_FLAG != 'N'
					  AND GROUP_CD IN ('PROD_OR_QC')
				) S
		        ON S.POQ_CD = MWC.PROD_OR_QC          
				CROSS JOIN
				(
					SELECT CODE_CD AS SHIFT_CODE_CD
					     , CASE WHEN UPPER(@{GV_LANG}) = 'KO' THEN CODE_NM_KR
				                WHEN UPPER(@{GV_LANG}) = 'CN' THEN CODE_NM_CN
				                ELSE CODE_NM
							END SHIFT_CODE_NM
					FROM TB_MST_CODE WITH (NOLOCK)
				    WHERE BU_CD IN ('ALL', @{GV_BU_CD})
				      AND USE_FLAG !='N'
				      AND GROUP_CD = 'WC_SHIFT'
				) C         
                WHERE MC2.CODE_CD IS NOT NULL 
                  AND MWC.ROUTING_ID IS NOT NULL
                  AND MR.PLANT_CD ='WF01'
                  /* 210201 이큰산 추가 */
				  AND MR.VALID_TO_DATE >= DBO.UFN_GETDATE()
				  -----------------------
			) AS B
		) W
		LEFT OUTER JOIN
		(
			SELECT COMPANY_CD	
				 , BU_CD	
				 , RESOURCE_CD	
				 , DAY_NM	
				 , WC_SHIFT	
				 , CASE WHEN OVER_TIME = 0 THEN NULL ELSE OVER_TIME END AS OVER_TIME	
				 , CREATE_ID	
				 , CREATE_DTTM	
				 , UPDATE_ID	
				 , UPDATE_DTTM
			FROM TB_MST_WORK_TIME_RSC WITH(NOLOCK)
			WHERE COMPANY_CD = @{GV_COMPANY_CD}
			  AND BU_CD      = @{GV_BU_CD}
			  AND WC_SHIFT   = 'A' 		                
		) X
		ON X.COMPANY_CD  = W.COMPANY_CD
		AND X.BU_CD      = W.BU_CD
		AND X.RESOURCE_CD = W.RESOURCE_CD
		AND X.DAY_NM    = W.DAY_NM
		AND X.WC_SHIFT = W.SHIFT_CODE_CD
		LEFT OUTER JOIN
		(
			SELECT COMPANY_CD	
				 , BU_CD	
				 , RESOURCE_CD	
				 , DAY_NM	
				 , WC_SHIFT	
				 , CASE WHEN OVER_TIME = 0 THEN NULL ELSE OVER_TIME END AS OVER_TIME	
				 , CREATE_ID	
				 , CREATE_DTTM	
				 , UPDATE_ID	
				 , UPDATE_DTTM
			FROM TB_MST_WORK_TIME_RSC WITH(NOLOCK)
			WHERE COMPANY_CD = @{GV_COMPANY_CD}
			  AND BU_CD      = @{GV_BU_CD}
		      AND WC_SHIFT   = 'B' 		                
		) Y
		ON Y.COMPANY_CD  = W.COMPANY_CD
		AND Y.BU_CD       = W.BU_CD
		AND Y.RESOURCE_CD = W.RESOURCE_CD
		AND Y.DAY_NM    = W.DAY_NM
		AND Y.WC_SHIFT = W.SHIFT_CODE_CD
		WHERE 1 = 1
		#if($_parameter.prodPart and $_parameter.prodPart != "")
		  AND W.PART_CD IN ('$_parameter.prodPart.replace(",","','")')
		#end 
		#if($_parameter.workplaces and $_parameter.workplaces != "")
		  AND W.WC_CD IN ('$_parameter.workplaces.replace(",","','")')
		#end 
		#if($_parameter.workType and $_parameter.workType != "")
		  AND W.WC_MGR IN ('$_parameter.workType.replace(",","','")')
		#end 
		#if($_parameter.prodOrQc and $_parameter.prodOrQc != "")
		  AND W.POQ_CD IN ('$_parameter.prodOrQc.replace(",","','")')
		#end
		GROUP BY W.BU_CD, W.PART_CD, W.PART_CD_NM, W.WC_MGR, W.WC_MGR_NM, W.WC_CD, W.WC_NM, W.RESOURCE_CD, W.RESOURCE_NM, W.POQ_CD, W.POQ_CD_NM, W.PART_SORT, W.ROUTING_ID
		ORDER BY W.PART_SORT, W.POQ_CD, W.WC_MGR_NM DESC, W.WC_CD, W.RESOURCE_CD
	</select>
	
	<update id="basicWorkCalendarRscUpdate" parameterType="map">
		/****** [ aps.static.basicWorkCalendarUpdate ] ******/
	    MERGE TB_MST_WORK_TIME_RSC WITH (HOLDLOCK) AS T 
	    USING 
	    (
			SELECT '$_parameter.GV_COMPANY_CD' AS COMPANY_CD
	             , '$_parameter.GV_BU_CD' AS BU_CD
	             , '$_parameter.RESOURCE_CD' AS RESOURCE_CD
				 , '$_parameter.DAY_NM' AS DAY_NM
				 , '$_parameter.WC_SHIFT' AS WC_SHIFT
				 , '$_parameter.OVER_TIME' AS OVER_TIME
				 , '$_parameter.GV_USER_ID' AS CREATE_ID
				 , DBO.UFN_GETDATE() AS CREATE_DTTM
				 , '$_parameter.GV_USER_ID' AS UPDATE_ID
				 , DBO.UFN_GETDATE() AS UPDATE_DTTM
			     
		) AS S
	    ON 
	    (
			T.COMPANY_CD = S.COMPANY_CD 
			AND T.BU_CD = S.BU_CD
	        AND T.RESOURCE_CD = S.RESOURCE_CD
	        AND T.DAY_NM = S.DAY_NM
	        AND T.WC_SHIFT = S.WC_SHIFT
		)
		WHEN MATCHED THEN 
	    UPDATE SET
	    	UPDATE_ID = S.UPDATE_ID
	      , UPDATE_DTTM = S.UPDATE_DTTM 
		#if($_parameter.OVER_TIME != "undefined")
	      , OVER_TIME = CASE WHEN S.OVER_TIME = '' THEN NULL ELSE ROUND(CAST(S.OVER_TIME AS decimal(6,3))*3600,2) END
	    #end                                     
	    WHEN NOT MATCHED THEN
		INSERT 
		(
	    	COMPANY_CD
          , BU_CD
          , RESOURCE_CD
          , DAY_NM
          , WC_SHIFT
		#if($_parameter.OVER_TIME != "undefined")
          , OVER_TIME
        #end
          , CREATE_ID
          , CREATE_DTTM
          , UPDATE_ID
          , UPDATE_DTTM
		)VALUES(
			S.COMPANY_CD
          , S.BU_CD
          , S.RESOURCE_CD
          , S.DAY_NM
          , S.WC_SHIFT
		#if($_parameter.OVER_TIME != "undefined")
          , CASE WHEN S.OVER_TIME = '' THEN NULL ELSE ROUND(CAST(S.OVER_TIME AS decimal(6,3))*3600,2) END
        #end
          , S.CREATE_ID
          , S.CREATE_DTTM
          , S.UPDATE_ID
          , S.UPDATE_DTTM
		);
      </update>
	<select id="basicWorkCalendarRscExcelSqlSelect" parameterType="map" resultType="map">
		/****** [ aps.static.basicWorkCalendarRscExcelSqlSelect ] ******/
		SELECT CASE WHEN A2.MENU_CD = @{popUpMenuCd} THEN 'Y' ELSE 'N' END AS USE_FLAG
			, A2.ACTION_CD
			FROM
			(
			  	SELECT BU_CD
			         , ROLE_CD
			  	FROM TB_MAP_USER_ROLE WITH(NOLOCK)
			  	WHERE USER_ID = @{GV_USER_ID}
			      AND BU_CD = @{GV_BU_CD}
			      AND USE_FLAG = 'Y'
			) A1
			INNER JOIN
			(
			  	SELECT COMPANY_CD
			         , BU_CD
			         , ROLE_CD
			         , MENU_CD
			         , ACTION_CD
			  	FROM TB_MAP_ROLE_MENU_ACTION WITH(NOLOCK)
			  	WHERE COMPANY_CD = @{GV_COMPANY_CD}
			      AND BU_CD = @{GV_BU_CD}
			      AND MENU_CD = @{popUpMenuCd}
			      AND ACTION_CD IN ('EXCEL','SQL')
			      AND USE_FLAG = 'Y'
			) A2
			ON A1.BU_CD = A2.BU_CD
			AND A1.ROLE_CD = A2.ROLE_CD
			GROUP BY A2.MENU_CD
			, A2.ACTION_CD
		
	
	</select>
</mapper>

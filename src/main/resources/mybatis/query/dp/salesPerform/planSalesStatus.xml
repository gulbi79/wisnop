<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dp.salesPerform">

	<select id="planSalesStatusChartBucketSelect" parameterType="map" resultType="map">
		/****** [ dp.salesPerform.planSalesStatusChartBucketSelect ] ******/
		SELECT 'PW' + YEARWEEK AS CD
		      , YEARWEEK AS NM
		      , 'W' + RIGHT(YEARWEEK, 2) AS DISWEEK
		FROM TB_MST_CALENDAR WITH(NOLOCK)
		WHERE YEARWEEK BETWEEN @{fromWeek} AND @{toWeek}
		GROUP BY YEARWEEK
	</select>
	
	
	<select id="planSalesRepCustGroupSelect" parameterType="map" resultType="map">
		/****** [ dp.salesPerform.planSalesRepCustGroupSelect ] ******/
		SELECT REP_CUST_GROUP_CD AS CD
		     , REP_CUST_GROUP_NM AS NM
		FROM TB_MST_REP_CUST_GROUP WITH(NOLOCK)
		WHERE COMPANY_CD = @{GV_COMPANY_CD}
	      AND BU_CD = @{GV_BU_CD}
		  AND USE_FLAG = 'Y'
	</select>
	
	<select id="chartSelect" parameterType="map" resultType="map">
		/****** [ dp.salesPerform.chartSelect ] ******/
		WITH W_DIM_ROW AS
	    (
	    	SELECT ISNULL(CM.REP_CUST_GROUP_CD, ' ') AS REP_CUST_GROUP_CD
	             , ISNULL(CM.REP_CUST_GROUP_NM, ' ') AS REP_CUST_GROUP_NM
	             , ISNULL(CM.CUST_GROUP_CD, ' ') AS CUST_GROUP_CD
	             , ISNULL(CM.CUST_GROUP_NM, ' ') AS CUST_GROUP_NM
	             , ISNULL(IT.ITEM_GROUP_CD, ' ') AS ITEM_GROUP_CD
	             , ISNULL(IG.ITEM_GROUP_NM, ' ') AS ITEM_GROUP_NM
	             , ISNULL(SO.SALES_ORG_LVL3_CD, ' ') AS SALES_ORG_LVL3_CD
	             , ISNULL(SO.SALES_ORG_LVL3_NM, ' ') AS SALES_ORG_LVL3_NM
	             , ISNULL(SO.SALES_ORG_LVL4_CD, ' ') AS SALES_ORG_LVL4_CD
	             , ISNULL(SO.SALES_ORG_LVL4_NM, ' ') AS SALES_ORG_LVL4_NM
	             , CASE WHEN CG.SALES_ORG_LVL5_CD IS NULL THEN ' ' ELSE ISNULL(SO.SALES_ORG_LVL5_CD, ' ') END AS SALES_ORG_LVL5_CD
	             , CASE WHEN CG.SALES_ORG_LVL5_CD IS NULL THEN ' ' ELSE ISNULL(SO.SALES_ORG_LVL5_NM, ' ') END AS SALES_ORG_LVL5_NM
	             , IT.ITEM_CD
	             , IT.ITEM_NM
	             , IT.SPEC
	             , IT.DRAW_NO
	             , PP.YEARWEEK
	             , CASE WHEN SALES_PLAN_QTY <![CDATA[>]]> 0 THEN 1 ELSE 0 END PLAN_SET_ITEM_COUNT
	             , PR.PTSP_TYPE
	             , CASE WHEN PR.QTY <![CDATA[>]]> 0 THEN 1 ELSE 0 END PLAN_ITEM_COUNT
			FROM TB_MAP_ITEM_CUST_GROUP CG WITH(NOLOCK)
	        INNER JOIN TB_MST_ITEM IT WITH(NOLOCK)
	        ON CG.COMPANY_CD = IT.COMPANY_CD
	        AND CG.BU_CD = IT.BU_CD
	        AND CG.ITEM_CD = IT.ITEM_CD
	        INNER JOIN TB_MST_ITEM_PLANT IP WITH(NOLOCK)
	           ON IT.COMPANY_CD = IP.COMPANY_CD
	          AND IT.BU_CD = IP.BU_CD
	          AND IT.ITEM_CD = IP.ITEM_CD
	        INNER JOIN TB_MST_CUSTOMER CM WITH(NOLOCK)
	           ON CG.COMPANY_CD = CM.COMPANY_CD
	          AND CG.BU_CD = CM.BU_CD
	          AND CG.CUST_GROUP_CD = CM.CUST_CD
	        LEFT OUTER JOIN TB_MST_ITEM_GROUP IG WITH(NOLOCK)
	          ON IG.COMPANY_CD = IT.COMPANY_CD
	         AND IG.BU_CD = IT.BU_CD
	         AND IG.ITEM_GROUP_CD = IT.ITEM_GROUP_CD
	        LEFT OUTER JOIN UV_MAP_SALES_ORG SO WITH(NOLOCK)
	          ON CG.COMPANY_CD = SO.COMPANY_CD
	         AND CG.BU_CD = SO.BU_CD
	         AND CG.SALES_ORG_LVL4_CD = SO.SALES_ORG_LVL4_CD
	         AND (
	         		CG.SALES_ORG_LVL5_CD IS NULL
	                OR (CG.SALES_ORG_LVL5_CD IS NOT NULL AND CG.SALES_ORG_LVL5_CD = SO.SALES_ORG_LVL5_CD)
	             )
	        INNER JOIN TB_DYN_PTSP PP WITH(NOLOCK)
	           ON CG.COMPANY_CD = PP.COMPANY_CD
	          AND CG.BU_CD = PP.BU_CD
	          AND CG.ITEM_CD = PP.ITEM_CD
	          AND CG.CUST_GROUP_CD = PP.CUST_GROUP_CD
	          AND PP.YEARWEEK BETWEEN @{fromWeek} AND @{toWeek}
	        INNER JOIN TB_DYN_PTSP_REASON PR WITH(NOLOCK)
	           ON PP.COMPANY_CD = PR.COMPANY_CD
	          AND PP.BU_CD = PR.BU_CD
	          AND PP.ITEM_CD = PR.ITEM_CD
	          AND PP.CUST_GROUP_CD = PR.CUST_GROUP_CD
	          AND PP.YEARWEEK = PR.YEARWEEK
	        WHERE CG.COMPANY_CD = @{GV_COMPANY_CD}
	          AND CG.BU_CD = @{GV_BU_CD}
	          AND CM.REP_CUST_GROUP_CD = @{repCustGroup}
	          AND IP.PLANT_CD = 'WF01'
	        #if($_parameter.ptspType and $_parameter.ptspType != "")
	          AND EXISTS (
	             SELECT 1
	               FROM TB_DYN_PTSP_REASON PT
	              WHERE PT.COMPANY_CD    = CG.COMPANY_CD
	                AND PT.BU_CD         = CG.BU_CD
	                AND PT.ITEM_CD       = CG.ITEM_CD
	                AND PT.CUST_GROUP_CD = CG.CUST_GROUP_CD
	                AND PT.YEARWEEK     = PP.YEARWEEK
	                AND PT.PTSP_TYPE     IN ('$_parameter.ptspType.replace(",","','")')
	                AND PT.QTY           <![CDATA[>]]> 0
	          )
			#end
	    ),
	    W_ROW AS 
	    (
	        SELECT R.REP_CUST_GROUP_CD
	             , R.REP_CUST_GROUP_NM
	             , R.CUST_GROUP_CD
	             , R.CUST_GROUP_NM
	             , R.ITEM_GROUP_CD
	             , R.ITEM_GROUP_NM
	             , R.SALES_ORG_LVL3_CD
	             , R.SALES_ORG_LVL3_NM
	             , R.SALES_ORG_LVL4_CD
	             , R.SALES_ORG_LVL4_NM
	             , R.SALES_ORG_LVL5_CD
	             , R.SALES_ORG_LVL5_NM
	             , R.ITEM_CD
	             , R.ITEM_NM
	             , R.SPEC
	             , R.DRAW_NO
	             , R.YEARWEEK
	             , R.PLAN_SET_ITEM_COUNT
	             , SUM(CASE WHEN R.PTSP_TYPE = 'PTSP_TYPE_1' THEN R.PLAN_ITEM_COUNT ELSE 0 END) AS PTSP_TYPE_1
	             , SUM(CASE WHEN R.PTSP_TYPE = 'PTSP_TYPE_2' THEN R.PLAN_ITEM_COUNT ELSE 0 END) AS PTSP_TYPE_2
	             , SUM(CASE WHEN R.PTSP_TYPE = 'PTSP_TYPE_3' THEN R.PLAN_ITEM_COUNT ELSE 0 END) AS PTSP_TYPE_3
			FROM W_DIM_ROW R
	        GROUP BY R.REP_CUST_GROUP_CD, R.REP_CUST_GROUP_NM, R.CUST_GROUP_CD, R.CUST_GROUP_NM, R.ITEM_GROUP_CD, R.ITEM_GROUP_NM
	            , R.SALES_ORG_LVL3_CD, R.SALES_ORG_LVL3_NM, R.SALES_ORG_LVL4_CD, R.SALES_ORG_LVL4_NM, R.SALES_ORG_LVL5_CD
	            , R.SALES_ORG_LVL5_NM, R.ITEM_CD, R.ITEM_NM, R.SPEC, R.DRAW_NO, R.YEARWEEK, R.PLAN_SET_ITEM_COUNT
	    ),
	    W_ROW_GROUP AS 
	    (
	    	SELECT REP_CUST_GROUP_CD 
			     , REP_CUST_GROUP_NM
			#foreach( $bucketMap in $_parameter.bucketList )
	                 , SUM(CASE WHEN YEARWEEK = '$bucketMap.NM' THEN PLAN_SET_ITEM_COUNT ELSE 0 END) AS ${bucketMap.CD}_PLAN_SET_ITEM_COUNT
	                 , SUM(CASE WHEN YEARWEEK = '$bucketMap.NM' THEN PTSP_TYPE_1 ELSE 0 END) AS ${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT
	                 , SUM(CASE WHEN YEARWEEK = '$bucketMap.NM' THEN PTSP_TYPE_2 ELSE 0 END) AS ${bucketMap.CD}_PLAN_OVER_ITEM_COUNT
	                 , SUM(CASE WHEN YEARWEEK = '$bucketMap.NM' THEN PTSP_TYPE_3 ELSE 0 END) AS ${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT
			#end
	        FROM W_ROW
	        GROUP BY REP_CUST_GROUP_CD, REP_CUST_GROUP_NM
	    ),
	    W_MEASURE AS 
	    (
	    	SELECT B.COMPANY_CD
			     , B.BU_CD
			     , B.MENU_CD
			     , B.MEAS_CD AS CATEGORY_CD
			     , CASE WHEN 'ko' = @{GV_LANG} THEN A.MEAS_NM_KR
		                WHEN 'cn' = @{GV_LANG} THEN A.MEAS_NM_CN
		                ELSE A.MEAS_NM
		           END CATEGORY_NM
			     , B.SORT AS CATEGORY_IDX
			FROM TB_MST_MEAS A WITH(NOLOCK)
			INNER JOIN TB_MAP_MENU_MEAS B WITH(NOLOCK)
			   ON B.MEAS_CD    = A.MEAS_CD
			  AND B.COMPANY_CD = @{GV_COMPANY_CD}
			  AND B.BU_CD      = @{GV_BU_CD}
			  AND B.MENU_CD    = 'DP302'
		      AND A.MEAS_CD IN ('PLAN_ACHIEVE_ITEM_COUNT', 'PLAN_OVER_ITEM_COUNT', 'PLAN_SHORT_ITEM_COUNT')
	    ),
	    W_MAIN AS 
	    (
	        SELECT REP_CUST_GROUP_CD 
			     , REP_CUST_GROUP_NM
	             , M.CATEGORY_CD
	             , M.CATEGORY_NM
	             , M.CATEGORY_IDX
				 #foreach( $bucketMap in $_parameter.bucketList )
		             , SUM(
		             	CASE
		                   	WHEN M.CATEGORY_CD = 'PLAN_ACHIEVE_ITEM_COUNT' THEN A.${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT
		                   	WHEN M.CATEGORY_CD = 'PLAN_OVER_ITEM_COUNT' THEN A.${bucketMap.CD}_PLAN_OVER_ITEM_COUNT
		                   	WHEN M.CATEGORY_CD = 'PLAN_SHORT_ITEM_COUNT' THEN A.${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT
		                   	ELSE 0
		                END
		             ) AS $bucketMap.CD
				#end
			FROM W_ROW_GROUP A
	        CROSS JOIN W_MEASURE M
			GROUP BY ROLLUP (REP_CUST_GROUP_CD, REP_CUST_GROUP_NM), M.CATEGORY_CD, M.CATEGORY_NM, M.CATEGORY_IDX
	    )
	    SELECT 
	    (
		    SELECT CATEGORY_CD "code"
		         , CATEGORY_NM "name"
		         , JSON_QUERY( '[' 
				 #foreach( $bucketMap in $_parameter.bucketList )
				 	+ CAST ($bucketMap.CD AS NVARCHAR(30)) 
				 	#if($foreach.hasNext) 
				 	+ ','
				 	#end   
		         #end 
		         + ']') "data"
	    	FROM W_MAIN A
	    	WHERE REP_CUST_GROUP_NM IS NOT NULL
	    	FOR JSON AUTO
       	) STATUS_CHART
	    
	</select>
	
	<select id="planSalesStatusDateSelect" parameterType="map" resultType="map">
	/****** [ dp.salesPerform.planSalesStatusDateSelect ] ******/
	WITH W_DATE AS 
	(
	    SELECT * 
	    FROM 
	    (
			SELECT YEARWEEK, MIN(YYYYMMDD) AS MIN_YYYYMMDD, MAX(YYYYMMDD) AS MAX_YYYYMMDD, ROW_NUMBER() OVER(ORDER BY YEARWEEK DESC) AS RN
	        FROM TB_MST_CALENDAR WITH(NOLOCK)
	        WHERE YEARWEEK <![CDATA[<=]]> (SELECT YEARWEEK FROM TB_MST_CALENDAR WITH(NOLOCK) WHERE YYYYMMDD = CONVERT(VARCHAR(8), DBO.UFN_GETDATE(), 112))
	        GROUP BY YEARWEEK
	    ) T
		WHERE RN <![CDATA[<=]]> 5
	)
	SELECT (SELECT CONVERT(VARCHAR(10), CONVERT(DATE, MIN_YYYYMMDD), 120) FROM W_DATE WHERE RN = 5) AS FROM_DATE
	     , (SELECT CONVERT(VARCHAR(10), CONVERT(DATE, MAX_YYYYMMDD), 120) FROM W_DATE WHERE RN = 2) AS TO_DATE
	     , (SELECT CONVERT(VARCHAR(10), CONVERT(DATE, MAX_YYYYMMDD), 120) FROM W_DATE WHERE RN = 1) AS MAX_DATE
	     , (SELECT YEARWEEK FROM W_DATE WHERE RN = 2) AS TO_PWEEK
		 , (SELECT YEARWEEK FROM W_DATE WHERE RN = 1) AS MAX_PWEEK
	</select>
	
    <select id="planSalesStatusSelect" parameterType="map" resultType="map">
	    /****** [ dp.salesPerform.planSalesStatusSelect ] ******/
	    <include refid="include.macros"/>
	    #getProductTree()
	    #getCustomerTree()
	    #getSalesOrgTree()
	    
	    WITH W_DIM_ROW AS
	    (
	    	SELECT ISNULL(CM.REP_CUST_GROUP_CD, ' ') AS REP_CUST_GROUP_CD
	             , ISNULL(CM.REP_CUST_GROUP_NM, ' ') AS REP_CUST_GROUP_NM
	             , ISNULL(CM.CUST_GROUP_CD, ' ') AS CUST_GROUP_CD
	             , ISNULL(CM.CUST_GROUP_NM, ' ') AS CUST_GROUP_NM
	             , ISNULL(IT.ITEM_GROUP_CD, ' ') AS ITEM_GROUP_CD
	             , ISNULL(IG.ITEM_GROUP_NM, ' ') AS ITEM_GROUP_NM
	             , ISNULL(SO.SALES_ORG_LVL3_CD, ' ') AS SALES_ORG_LVL3_CD
	             , ISNULL(SO.SALES_ORG_LVL3_NM, ' ') AS SALES_ORG_LVL3_NM
	             , ISNULL(SO.SALES_ORG_LVL4_CD, ' ') AS SALES_ORG_LVL4_CD
	             , ISNULL(SO.SALES_ORG_LVL4_NM, ' ') AS SALES_ORG_LVL4_NM
	             , CASE WHEN CG.SALES_ORG_LVL5_CD IS NULL THEN ' ' ELSE ISNULL(SO.SALES_ORG_LVL5_CD, ' ') END AS SALES_ORG_LVL5_CD
	             , CASE WHEN CG.SALES_ORG_LVL5_CD IS NULL THEN ' ' ELSE ISNULL(SO.SALES_ORG_LVL5_NM, ' ') END AS SALES_ORG_LVL5_NM
	             , IT.ITEM_CD
	             , IT.ITEM_NM
	             , IT.SPEC
	             , IT.DRAW_NO
	             , PP.YEARWEEK
	             , CASE WHEN SALES_PLAN_QTY <![CDATA[>]]> 0 THEN 1 ELSE 0 END PLAN_SET_ITEM_COUNT
	             , PR.PTSP_TYPE
	             , CASE WHEN PR.QTY <![CDATA[>]]> 0 THEN 1 ELSE 0 END PLAN_ITEM_COUNT
	    	FROM TB_MAP_ITEM_CUST_GROUP CG WITH(NOLOCK)
	        INNER JOIN TB_MST_ITEM IT WITH(NOLOCK)
	        ON CG.COMPANY_CD = IT.COMPANY_CD
	        AND CG.BU_CD = IT.BU_CD
	        AND CG.ITEM_CD = IT.ITEM_CD
	        #set($treeAlias = "IT")
	        <include refid="include.productTree"/>
	        INNER JOIN TB_MST_ITEM_PLANT IP WITH(NOLOCK)
	           ON IT.COMPANY_CD = IP.COMPANY_CD
	          AND IT.BU_CD = IP.BU_CD
	          AND IT.ITEM_CD = IP.ITEM_CD
	        INNER JOIN TB_MST_CUSTOMER CM WITH(NOLOCK)
	           ON CG.COMPANY_CD = CM.COMPANY_CD
	          AND CG.BU_CD = CM.BU_CD
	          AND CG.CUST_GROUP_CD = CM.CUST_CD
	        LEFT OUTER JOIN TB_MST_ITEM_GROUP IG WITH(NOLOCK)
	          ON IG.COMPANY_CD = IT.COMPANY_CD
	         AND IG.BU_CD = IT.BU_CD
	         AND IG.ITEM_GROUP_CD = IT.ITEM_GROUP_CD
	        LEFT OUTER JOIN UV_MAP_SALES_ORG SO WITH(NOLOCK)
	          ON CG.COMPANY_CD = SO.COMPANY_CD
	         AND CG.BU_CD = SO.BU_CD
	         AND CG.SALES_ORG_LVL4_CD = SO.SALES_ORG_LVL4_CD
	         AND (
	         		CG.SALES_ORG_LVL5_CD IS NULL
	                OR (CG.SALES_ORG_LVL5_CD IS NOT NULL AND CG.SALES_ORG_LVL5_CD = SO.SALES_ORG_LVL5_CD)
	             )
	        INNER JOIN TB_DYN_PTSP PP WITH(NOLOCK)
	           ON CG.COMPANY_CD = PP.COMPANY_CD
	          AND CG.BU_CD = PP.BU_CD
	          AND CG.ITEM_CD = PP.ITEM_CD
	          AND CG.CUST_GROUP_CD = PP.CUST_GROUP_CD
	          AND PP.YEARWEEK BETWEEN @{fromWeek} AND @{toWeek}
	        INNER JOIN TB_DYN_PTSP_REASON PR WITH(NOLOCK)
	           ON PP.COMPANY_CD = PR.COMPANY_CD
	          AND PP.BU_CD = PR.BU_CD
	          AND PP.ITEM_CD = PR.ITEM_CD
	          AND PP.CUST_GROUP_CD = PR.CUST_GROUP_CD
	          AND PP.YEARWEEK = PR.YEARWEEK
	        WHERE CG.COMPANY_CD = @{GV_COMPANY_CD}
	          AND CG.BU_CD = @{GV_BU_CD}
	          AND IP.PLANT_CD = 'WF01'
	        #if($_parameter.item_cd and $_parameter.item_cd != "")
			  AND IT.ITEM_CD IN ('$_parameter.item_cd.replace(",","','")')
			#elseif($_parameter.item_nm and $_parameter.item_nm != "")
			  AND (IT.ITEM_CD LIKE '%'+@{item_nm}+'%' OR IT.ITEM_NM LIKE '%'+@{item_nm}+'%')
			#end
			#if($_parameter.itemGroup and $_parameter.itemGroup != "")
		      AND IT.ITEM_GROUP_CD IN ('$_parameter.itemGroup.replace(",","','")')
		  	#end
		  	#if($_parameter.reptCustGroup and $_parameter.reptCustGroup != "")
		      AND CM.REP_CUST_GROUP_CD IN ('$_parameter.reptCustGroup.replace(",","','")')
		  	#end
		  	#if($_parameter.custGroup and $_parameter.custGroup != "")
		      AND CM.CUST_GROUP_CD IN ('$_parameter.custGroup.replace(",","','")')
		  	#end
		  	#if($_parameter.ptspType and $_parameter.ptspType != "")
	          AND EXISTS (
	             SELECT 1
	               FROM TB_DYN_PTSP_REASON PT
	              WHERE PT.COMPANY_CD    = CG.COMPANY_CD
	                AND PT.BU_CD         = CG.BU_CD
	                AND PT.ITEM_CD       = CG.ITEM_CD
	                AND PT.CUST_GROUP_CD = CG.CUST_GROUP_CD
	                AND PT.YEARWEEK      = PP.YEARWEEK
	                AND PT.PTSP_TYPE     IN ('$_parameter.ptspType.replace(",","','")')
	                AND PT.QTY           <![CDATA[>]]> 0
	          )
			#end
			#if($_parameter.customerList and $_parameter.customerList.size() > 0)
	          AND EXISTS 
	          (
	             SELECT 1
	             FROM TB_MST_CUSTOMER TT
	             WHERE TT.COMPANY_CD = CG.COMPANY_CD
	               AND TT.BU_CD = CG.BU_CD
	               AND TT.CUST_GROUP_CD = CG.CUST_GROUP_CD
	             #set($treeAlias = "TT")
	             <include refid="include.customerTree"/>
	          )
			#end
			#if($_parameter.salesOrgList and $_parameter.salesOrgList.size() > 0)
				#set($treeAlias = "SO")
				<include refid="include.salesOrgTree"/>
			#end
	    ),
	    W_ROW AS 
	    (
	        SELECT R.REP_CUST_GROUP_CD
	             , R.REP_CUST_GROUP_NM
	             , R.CUST_GROUP_CD
	             , R.CUST_GROUP_NM
	             , R.ITEM_GROUP_CD
	             , R.ITEM_GROUP_NM
	             , R.SALES_ORG_LVL3_CD
	             , R.SALES_ORG_LVL3_NM
	             , R.SALES_ORG_LVL4_CD
	             , R.SALES_ORG_LVL4_NM
	             , R.SALES_ORG_LVL5_CD
	             , R.SALES_ORG_LVL5_NM
	             , R.ITEM_CD
	             , R.ITEM_NM
	             , R.SPEC
	             , R.DRAW_NO
	             , R.YEARWEEK
	             , R.PLAN_SET_ITEM_COUNT
	             , SUM(CASE WHEN R.PTSP_TYPE = 'PTSP_TYPE_1' THEN R.PLAN_ITEM_COUNT ELSE 0 END) AS PTSP_TYPE_1
	             , SUM(CASE WHEN R.PTSP_TYPE = 'PTSP_TYPE_2' THEN R.PLAN_ITEM_COUNT ELSE 0 END) AS PTSP_TYPE_2
	             , SUM(CASE WHEN R.PTSP_TYPE = 'PTSP_TYPE_3' THEN R.PLAN_ITEM_COUNT ELSE 0 END) AS PTSP_TYPE_3
			FROM W_DIM_ROW R
	        GROUP BY R.REP_CUST_GROUP_CD, R.REP_CUST_GROUP_NM, R.CUST_GROUP_CD, R.CUST_GROUP_NM, R.ITEM_GROUP_CD
	            , R.ITEM_GROUP_NM, R.SALES_ORG_LVL3_CD, R.SALES_ORG_LVL3_NM, R.SALES_ORG_LVL4_CD, R.SALES_ORG_LVL4_NM
	            , R.SALES_ORG_LVL5_CD, R.SALES_ORG_LVL5_NM, R.ITEM_CD, R.ITEM_NM, R.SPEC, R.DRAW_NO, R.YEARWEEK, R.PLAN_SET_ITEM_COUNT
	    ),
	    W_ROW_GROUP AS 
	    (
	    	SELECT NULL AS TMP_COL 
			#foreach( $dimMap in $_parameter.dimList )
	                 , $dimMap.DIM_CD 
			#end
			#foreach( $bucketMap in $_parameter.bucketList )
	                 , SUM(CASE WHEN YEARWEEK = '$bucketMap.NM' THEN PLAN_SET_ITEM_COUNT ELSE 0 END) AS ${bucketMap.CD}_PLAN_SET_ITEM_COUNT
	                 , SUM(CASE WHEN YEARWEEK = '$bucketMap.NM' THEN PTSP_TYPE_1 ELSE 0 END) AS ${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT
	                 , SUM(CASE WHEN YEARWEEK = '$bucketMap.NM' THEN PTSP_TYPE_2 ELSE 0 END) AS ${bucketMap.CD}_PLAN_OVER_ITEM_COUNT
	                 , SUM(CASE WHEN YEARWEEK = '$bucketMap.NM' THEN PTSP_TYPE_3 ELSE 0 END) AS ${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT
	                 , 0 AS ${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT_RATE
	                 , 0 AS ${bucketMap.CD}_PLAN_OVER_ITEM_COUNT_RATE
	                 , 0 AS ${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT_RATE
			#end
	        FROM W_ROW
	        GROUP BY
			#foreach( $dimMap in $_parameter.dimList )
				#if($velocityCount == 1)
		        	$dimMap.DIM_CD
				#else
		            , $dimMap.DIM_CD
				#end
			#end
	    ),
	    W_MEASURE AS 
	    (
	    	SELECT CATEGORY_CD
	    	     , CATEGORY_NM
	    	     , CATEGORY_IDX 
	        FROM 
	        (
	        	SELECT NULL AS CATEGORY_CD
	        	     , NULL AS CATEGORY_NM
	        	     , NULL AS CATEGORY_IDX
				#foreach( $meaMap in $_parameter.meaList )
	            UNION ALL 
	            SELECT '$meaMap.CD'
	                 , '$meaMap.NM'
	                 , $velocityCount 
				#end
			) A
	        WHERE CATEGORY_CD IS NOT NULL
	    ),
	    W_MAIN AS 
	    (
	        SELECT NULL AS TMP_COL 
			#foreach( $dimMap in $_parameter.dimList )
	             , $dimMap.DIM_CD
	             , MAX($dimMap.DIM_CD) AS ${dimMap.DIM_CD}_NM
			#end
	        <include refid="include.getGrpLvlId"/>
	             , M.CATEGORY_CD
	             , M.CATEGORY_NM
	             , M.CATEGORY_IDX
				 #foreach( $bucketMap in $_parameter.bucketList )
					 #if($bucketMap.TOT_TYPE != "MT")
		             , SUM(
		             	CASE
		  				#foreach( $meaMap in $_parameter.meaList )
		                   	WHEN M.CATEGORY_CD = '${meaMap.CD}' THEN A.${bucketMap.CD}_${meaMap.CD}
		  				#end
		                   	ELSE 0
		                END
		             ) AS $bucketMap.CD
		            , SUM(${bucketMap.CD}_PLAN_SET_ITEM_COUNT) AS ${bucketMap.CD}_PLAN_SET_ITEM_COUNT
		            , SUM(${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT) AS ${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT
		            , SUM(${bucketMap.CD}_PLAN_OVER_ITEM_COUNT) AS ${bucketMap.CD}_PLAN_OVER_ITEM_COUNT
		            , SUM(${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT) AS ${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT
		            #end
				#end
			FROM W_ROW_GROUP A
	        CROSS JOIN W_MEASURE M
			GROUP BY ROLLUP (
	            <include refid="include.getCdRollup"/>
	         )
	             , M.CATEGORY_CD
	             , M.CATEGORY_NM
	             , M.CATEGORY_IDX
	    )
	    SELECT TMP_COL
			 #foreach( $dimMap in $_parameter.dimList )
		     , B.$dimMap.DIM_CD, B.${dimMap.DIM_CD}_NM 
			 #end
			 , GRP_LVL_ID
	         , CATEGORY_CD
	         , CATEGORY_NM
	         , CATEGORY_IDX
	         #set($strInBucket = "")
			 #foreach( $bucketMap in $_parameter.bucketList )
				#if($bucketMap.TOT_TYPE != "MT")
				 	, $bucketMap.CD
			    	#set($strInBucket = $strInBucket + "," + $bucketMap.CD) 
			    #else
			    	, CASE WHEN CATEGORY_CD = 'PLAN_ACHIEVE_ITEM_COUNT_RATE' THEN CAST(${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT AS DECIMAL(21, 6)) / NULLIF(${bucketMap.CD}_ACHIEVE_OVER_SHORT_TOT, 0) * 100
			    	       WHEN CATEGORY_CD = 'PLAN_OVER_ITEM_COUNT_RATE' THEN CAST(${bucketMap.CD}_PLAN_OVER_ITEM_COUNT  AS DECIMAL(21, 6)) / NULLIF(${bucketMap.CD}_ACHIEVE_OVER_SHORT_TOT, 0) * 100
			    	       WHEN CATEGORY_CD = 'PLAN_SHORT_ITEM_COUNT_RATE' THEN CAST(${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT AS DECIMAL(21, 6)) / NULLIF(${bucketMap.CD}_ACHIEVE_OVER_SHORT_TOT, 0) * 100
			    	       ELSE ISNULL($strInBucket.substring(1).replace(",",",0)+ISNULL("),0)
			    	   END $bucketMap.CD
	    			#set($strInBucket = "") 
			    #end 
	         #end
	         , 0
	         #foreach( $bucketMap in $_parameter.bucketList )
				#if($bucketMap.TOT_TYPE != "MT")
	                  + ISNULL(ABS($bucketMap.CD), 0)
				#end 
			 #end AS OMIT_FLAG
	    FROM
	    (  
		    SELECT NULL AS TMP_COL
		          <include refid="include.getDimTotal"/>
		         , GRP_LVL_ID
		         , CATEGORY_CD
		         , CATEGORY_NM
		         , CATEGORY_IDX
		         #set($strSet = "")
		         #set($strAchieve = "")
		         #set($strOver = "")
		         #set($strInShort = "")
				 #foreach( $bucketMap in $_parameter.bucketList )
					#if($bucketMap.TOT_TYPE != "MT")
					 , CASE WHEN CATEGORY_CD = 'PLAN_ACHIEVE_ITEM_COUNT_RATE' THEN ISNULL(ROUND(CAST(${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT AS DECIMAL(21, 6)) / NULLIF(${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT + ${bucketMap.CD}_PLAN_OVER_ITEM_COUNT + ${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT , 0) * 100, 1), 0)
					        WHEN CATEGORY_CD = 'PLAN_OVER_ITEM_COUNT_RATE' THEN ISNULL(ROUND(CAST(${bucketMap.CD}_PLAN_OVER_ITEM_COUNT AS DECIMAL(21, 6)) / NULLIF(${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT + ${bucketMap.CD}_PLAN_OVER_ITEM_COUNT + ${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT , 0) * 100, 1), 0)
					        WHEN CATEGORY_CD = 'PLAN_SHORT_ITEM_COUNT_RATE' THEN ISNULL(ROUND(CAST(${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT AS DECIMAL(21, 6)) / NULLIF(${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT + ${bucketMap.CD}_PLAN_OVER_ITEM_COUNT + ${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT , 0) * 100, 1), 0)
					        ELSE $bucketMap.CD
					    END $bucketMap.CD
						#set($strSet = $strSet + "," + $bucketMap.CD_SUB1)    
						#set($strAchieve = $strAchieve + "," + $bucketMap.CD_SUB2)    
						#set($strOver = $strOver + "," + $bucketMap.CD_SUB3)    
						#set($strInShort = $strInShort + "," + $bucketMap.CD_SUB4)    
					#else
						, ISNULL($strSet.substring(1).replace(",",",0)+ISNULL("),0) AS ${bucketMap.CD}_PLAN_SET_ITEM_COUNT_TOT
						, ISNULL($strAchieve.substring(1).replace(",",",0)+ISNULL("),0) AS ${bucketMap.CD}_PLAN_ACHIEVE_ITEM_COUNT
						, ISNULL($strOver.substring(1).replace(",",",0)+ISNULL("),0) AS ${bucketMap.CD}_PLAN_OVER_ITEM_COUNT
						, ISNULL($strInShort.substring(1).replace(",",",0)+ISNULL("),0) AS ${bucketMap.CD}_PLAN_SHORT_ITEM_COUNT
						, ISNULL($strAchieve.substring(1).replace(",",",0)+ISNULL("),0) + ISNULL($strOver.substring(1).replace(",",",0)+ISNULL("),0) + ISNULL($strInShort.substring(1).replace(",",",0)+ISNULL("),0) AS ${bucketMap.CD}_ACHIEVE_OVER_SHORT_TOT 
	    				#set($strSet = "") 
	    				#set($strAchieve = "") 
	    				#set($strOver = "") 
	    				#set($strInShort = "") 
				    #end
		         #end
		    	FROM W_MAIN A
		) B
		ORDER BY TMP_COL
		#foreach( $dimMap in $_parameter.dimList )
	           , B.$dimMap.DIM_CD, B.${dimMap.DIM_CD}_NM 
		#end
	           , B.CATEGORY_IDX 
    </select>
	
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dp.planSalesCfm">
    
    <select id="salesPlanListCfmSelect" parameterType="map" resultType="map">
        /****** [ dp.planSalesCfm.salesPlanListCfmSelect ] ******/
        BEGIN
            <include refid="include.macros"/>
            #getProductTree()
            #getCustomerTree()
                
            #foreach( $dimMap in $_parameter.dimList )
                #if     ( $dimMap.DIM_CD == "SS_QTY") #set($dim_SS_QTY = "Y")
                #elseif ( $dimMap.DIM_CD == "INV_QTY") #set($dim_INV_QTY = "Y")
                #elseif ( $dimMap.DIM_CD == "WIP_MFG_QTY2") #set($dim_WIP_MFG_QTY = "Y")
                #elseif ( $dimMap.DIM_CD == "TOTAL_OPEN_SO") #set($dim_TOTAL_OPEN_SO = "Y")
                #elseif ( $dimMap.DIM_CD == "SO_QTY")        #set($dim_SO_QTY = "Y")
                #elseif ( $dimMap.DIM_CD == "DIM_PROD_QTY")  #set($dim_PROD_QTY = "Y") #set($dim_DIM_PROD_PLAN_QTY = "Y")
                #elseif ( $dimMap.DIM_CD == "DIM_PROD_PLAN_QTY2" or $dimMap.DIM_CD == "DIM_SALES_REMAIN_QTY" or $dimMap.DIM_CD == "DIM_PROD_REMAIN_QTY" or $dimMap.DIM_CD == "DIM_PROD_1ST_QTY"
                or $dimMap.DIM_CD == "DIM_PROD_2ND_QTY" or $dimMap.DIM_CD == "DIM_PROD_3RD_QTY") #set($dim_DIM_PROD_PLAN_QTY = "Y")
                #elseif ( $dimMap.DIM_CD == "DIM_PROD_NO_REFLECTION") #set($dim_DIM_PROD_NO_REFLECTION = "Y")
                #elseif ( $dimMap.DIM_CD == "DIM_CALC_BOH_QTY") #set($dim_DIM_CALC_BOH_QTY = "Y")
                #elseif ( $dimMap.DIM_CD == "DIM_AVAIL_QTY2") #set($dim_DIM_AVAIL_QTY = "Y")
                #elseif ( $dimMap.DIM_CD == "DIM_PROD_PLAN_QTY_REMAINS") #set($dim_DIM_PROD_PLAN_QTY_REMAINS = "Y")
                #end
            #end
            
            #if ($_parameter.dataAddSales == "INV_WIP" or $_parameter.soDataCheck == "OPEN_SO_INV_WIP")
                #set($dim_INV_QTY     = "Y")
                #set($dim_WIP_MFG_QTY = "Y")
            #end
            
            #if ($_parameter.soDataCheck == "OPEN_SO_SP" or $_parameter.soDataCheck == "OPEN_SO_SP2" or $_parameter.soDataCheck == "OPEN_SO_INV_WIP")
                #set($dim_OPEN_SO_SP = "Y")
            #end
            
                DECLARE @P_BEFORE_WEEK NVARCHAR(6);
                DECLARE @P_BEFORE_THU NVARCHAR(8);
                DECLARE @P_BEFORE_SAT NVARCHAR(8);
                DECLARE @CONFIRM_YN     NVARCHAR(1);
                DECLARE @P_PROD_PLAN_ID NVARCHAR(8);
                DECLARE @P_CURRENT_DAY  DATE;
                SELECT @P_CURRENT_DAY = DBO.UFN_GETDATE();
                
                SELECT @P_BEFORE_WEEK = YEARWEEK
                     , @P_BEFORE_THU = CONVERT (NVARCHAR (30), DATEADD (DAY, 4, CAST (YYYYMMDD AS DATE)), 112)
                     , @P_BEFORE_SAT = CONVERT (NVARCHAR (30), DATEADD (DAY, 6, CAST (YYYYMMDD AS DATE)), 112)
                FROM TB_MST_CALENDAR WITH(NOLOCK)
                WHERE YYYYMMDD = (
                                    SELECT CONVERT (NVARCHAR, DATEADD (DAY, -7, MIN (DTTM)), 112)
                                    FROM TB_MST_CALENDAR WITH(NOLOCK)
                                    WHERE YEARPWEEK = @{partADimWeek});
                                    
                
                SELECT @P_PROD_PLAN_ID = PLAN_ID 
                FROM TB_MST_PLAN_VERSION
                WHERE COMPANY_CD = @{GV_COMPANY_CD}
                  AND BU_CD = @{GV_BU_CD}
                  AND PLAN_TYPE_CD = 'MP'
                  AND START_WEEK = ( 
                                        SELECT YEARWEEK
                                        FROM TB_MST_CALENDAR
                                        WHERE YYYYMMDD = (
                                                            SELECT CONVERT (NVARCHAR, DATEADD (DAY, 7, MIN (DTTM)), 112)
                                                            FROM TB_MST_CALENDAR
                                                            WHERE YEARWEEK = (
                                                                                SELECT START_WEEK
                                                                                FROM TB_MST_PLAN_VERSION
                                                                                WHERE COMPANY_CD = @{GV_COMPANY_CD}
                                                                                  AND BU_CD = @{GV_BU_CD}
                                                                                  AND PLAN_ID = @{planIdPast}
                                                                                  AND PLAN_TYPE_CD = 'DP_W'
                                                                              )
                                                         )
                                   );
                
                IF (@{ap1_yn} != 'Y' AND @{ap2_yn} != 'Y')
                    SELECT @CONFIRM_YN = 'Y';
                ELSE
                    WITH W_CODE AS 
                    (
                        #set($_parameter.groupCd="DAY_INDEX")
                        <include refid="include.mstCode"/>
                    )
                    SELECT @CONFIRM_YN = 
                           CASE WHEN CD.ATTB_1_CD = 'N' THEN 'Y' ELSE (
                                                                        SELECT TOP 1 CASE WHEN PLAN_ID = @{planIdPast} THEN 'N' ELSE 'Y' END
                                                                        FROM TB_MST_PLAN_VERSION WITH(NOLOCK)
                                                                        WHERE COMPANY_CD = @{GV_COMPANY_CD}
                                                                          AND BU_CD = @{GV_BU_CD}
                                                                          AND PLAN_TYPE_CD = 'DP_W'
                                                                          AND RELEASE_FLAG = 'Y'
                                                                        ORDER BY PLAN_ID DESC
                                                                      )
                            END
                    FROM W_CODE CD
                    INNER JOIN TB_MST_CALENDAR CA WITH(NOLOCK)
                      ON CD.CODE_CD = CA.DAY_NM
                     AND CA.YYYYMMDD = @{currentDay};
                
                WITH W_PROD AS 
                (
                    SELECT MATERIAL_CD AS PROD_LVL2_CD
                    FROM UV_HIER_ITEM
                    WHERE LEVEL = 'L2'
                ),
                W_PWEEK AS 
                (
                    SELECT YEARWEEK
                         , YEARPWEEK
                         , DENSE_RANK() OVER(ORDER BY YEARWEEK ASC) AS RNUM
                    FROM TB_MST_CALENDAR WITH(NOLOCK)
                    WHERE YYYYMMDD BETWEEN @{planStartDay} AND @{toCal}
                    GROUP BY YEARWEEK, YEARPWEEK
                ),
                W_CODE_OPEN AS 
                (
                    #set($_parameter.groupCd="DMD_FROZEN_PERIOD")
                    <include refid="include.mstCode"/>
                ),
                W_FROZEN AS 
                (
                    SELECT PD.PROD_LVL2_CD
                         , CASE WHEN ISNUMERIC(CD.ATTB_1_CD) = 1 THEN CD.ATTB_1_CD ELSE 1 END AS FROZEN_WEEK
                    FROM W_PROD PD
                    LEFT OUTER JOIN W_CODE_OPEN CD
                      ON PD.PROD_LVL2_CD = CD.CODE_CD
                ),
                W_OPEN_LIST AS
                (
                    SELECT A1.PROD_LVL2_CD
                         , A2.YEARWEEK
                         , A2.YEARPWEEK
                    FROM W_FROZEN A1
                    CROSS JOIN W_PWEEK A2
                    WHERE A2.RNUM <![CDATA[>]]> A1.FROZEN_WEEK
                ),
                W_CUST_LVL2_CD_OPEN AS
                (
                    SELECT CAST(A1.REP_CUST_GROUP_CD AS VARCHAR) AS CUST_LVL2_CD_OPEN
                         , CAST(A2.ATTB_1_CD AS VARCHAR) AS DMD1_SP
                         , CAST(A2.ATTB_2_CD AS VARCHAR) AS DMD2_SP
                         , CAST(A2.ATTB_3_CD AS VARCHAR) AS DMD3_SP
                         , CONVERT(VARCHAR, CASE WHEN A2.ATTB_1_CD = 'Y' OR A2.ATTB_2_CD = 'Y' OR A2.ATTB_3_CD = 'Y' THEN 'Y' ELSE 'N' END) ADJ_REASON
                    FROM TB_MST_REP_CUST_GROUP A1 WITH(NOLOCK)
                    INNER JOIN TB_MST_CODE A2 WITH(NOLOCK)
                       ON A1.BU_CD = A2.BU_CD
                      AND A2.GROUP_CD = 'CUST_CATE'
                      AND A1.CUST_CATE = A2.CODE_CD
                    WHERE A1.COMPANY_CD = @{GV_COMPANY_CD}
                      AND A1.BU_CD = @{GV_BU_CD}
                      AND A1.USE_FLAG = 'Y'
                      AND A2.USE_FLAG = 'Y'
                ),
                W_OPEN_LIST_CONFIRM AS
                (
                    SELECT *
                    FROM W_OPEN_LIST B1
                    CROSS JOIN W_CUST_LVL2_CD_OPEN B2
                ), 
                #if($_parameter.authorityFlag == "Y")
                W_OPEN_CONFIRM AS
                (
                    SELECT *
                    FROM 
                    (
                        SELECT PROD_LVL2_CD
                             , CUST_LVL2_CD_OPEN
                             , CASE WHEN DEMAND_TYPE COLLATE DATABASE_DEFAULT = 'ADJ_REASON' THEN 'PW' + YEARPWEEK + '_' + DEMAND_TYPE COLLATE DATABASE_DEFAULT + '_YN' 
                                    ELSE 'PW' + YEARPWEEK + '_' + 'CFM' + '_' + DEMAND_TYPE COLLATE DATABASE_DEFAULT + '_YN'
                                END YEARPWEEK_DEMAND_TYPE
                             , EDIT_YN
                        FROM 
                        (
                            SELECT PROD_LVL2_CD
                                 , CUST_LVL2_CD_OPEN
                                 , YEARPWEEK
                                 , DMD1_SP
                                 , DMD2_SP
                                 , DMD3_SP
                                 , ADJ_REASON
                            FROM W_OPEN_LIST_CONFIRM
                        ) A
                        UNPIVOT 
                        (
                            EDIT_YN FOR DEMAND_TYPE IN (DMD1_SP, DMD2_SP, DMD3_SP, ADJ_REASON)
                        ) AS UPVT
                    ) A
                    PIVOT 
                    (
                        MAX(EDIT_YN) FOR YEARPWEEK_DEMAND_TYPE IN 
                        (
                            #set($strCnt = "")
                            #foreach($hiddenMap in $_parameter.hiddenList)
                                
                                #if($hiddenMap.CD.indexOf("PW") != -1 and $hiddenMap.CD.indexOf("PW_REMARK_YN") == -1)
                                    #if($strCnt == "1")
                                        ,
                                    #end
                                    [$hiddenMap.CD]
                                    #set($strCnt = "1")
                                #end
                            #end 
                        )
                    ) PVT
                ),
                #end
                W_CODE AS 
                (
                    #set($_parameter.groupCd="DP_AUTH_CTRL,SO_TYPE")
                    <include refid="include.mstCode"/>
                ), 
                W_SALES_WEEK AS
                (
                      SELECT SUM(
                                  CASE WHEN A1.YYYYMMDD <![CDATA[>=]]> CONVERT(NVARCHAR, DATEADD(D, 1, EOMONTH(DATEADD(M, -2, @P_CURRENT_DAY))), 112)
                                       AND A1.YYYYMMDD <![CDATA[<=]]>  CONVERT(NVARCHAR, EOMONTH(DATEADD(M, -1, @P_CURRENT_DAY)), 112)
                                       THEN 1 ELSE 0 
                                  END
                                ) AS M1_DAYS
                           , SUM(
                                  CASE WHEN A1.YYYYMMDD <![CDATA[>=]]> CONVERT(NVARCHAR, DATEADD(D, 1, EOMONTH(DATEADD(M, -4, @P_CURRENT_DAY))), 112)
                                       AND A1.YYYYMMDD <![CDATA[<=]]>  CONVERT(NVARCHAR, EOMONTH(DATEADD(M, -1, @P_CURRENT_DAY)), 112)
                                       THEN 1 ELSE 0 
                                   END
                                ) AS M3_DAYS            
                           , SUM(
                                  CASE WHEN A1.YYYYMMDD <![CDATA[>=]]> CONVERT(NVARCHAR, DATEADD(D, 1, EOMONTH(DATEADD(M, -13, @P_CURRENT_DAY))), 112)
                                       AND A1.YYYYMMDD <![CDATA[<=]]>  CONVERT(NVARCHAR, EOMONTH(DATEADD(M, -1, @P_CURRENT_DAY)), 112)
                                       THEN 1 ELSE 0 
                                   END
                                ) AS M12_DAYS
                      FROM TB_MST_CALENDAR A1
                      WHERE A1.YYYYMMDD <![CDATA[>=]]> CONVERT(NVARCHAR, DATEADD(D, 1, EOMONTH(DATEADD(M, -13, @P_CURRENT_DAY))), 112) 
                        AND A1.YYYYMMDD <![CDATA[<=]]> CONVERT(NVARCHAR, EOMONTH(DATEADD(M, -1, @P_CURRENT_DAY)), 112) 
                ),
                W_ITEM_CUST_GROUP AS 
                (
                    SELECT CG.COMPANY_CD
                         , CG.BU_CD
                         , CG.CUST_GROUP_CD
                         , IT.ITEM_CD
                         , ISNULL(IT.PROD_LVL3_CD, ' ') AS PROD_LVL3_CD
                         , ISNULL(IT.PROD_LVL3_NM, ' ') AS PROD_LVL3_NM
                         , ISNULL(CM.CUST_LVL2_CD, ' ') AS CUST_LVL2_CD
                         , ISNULL(CM.CUST_LVL2_NM, ' ') AS CUST_LVL2_NM 
                         , ISNULL(CM.CUST_NM, ' ') AS CUST_GROUP_NM
                         , ISNULL(IT.ITEM_NM, ' ') AS ITEM_NM
                         , ISNULL(IT.SPEC, ' ') AS SPEC
                         , ISNULL(IT.DRAW_NO, ' ') AS DRAW_NO
                         , CG.REMARK
                         , CG.CFM_CHG_REASON
                         , CG.SALES_QTY_M1
                         , CG.SALES_QTY_M3
                         , CG.SALES_QTY_M12
                         , ROUND(CG.SALES_QTY_M1 / NULLIF((SELECT M1_DAYS FROM W_SALES_WEEK), 0) * 7, 0) AS SALES_QTY_M1_WEEK
                         , ROUND(CG.SALES_QTY_M3 / NULLIF((SELECT M3_DAYS FROM W_SALES_WEEK), 0) * 7, 0) AS SALES_QTY_M3_WEEK
                         , ROUND(CG.SALES_QTY_M12 / NULLIF((SELECT M12_DAYS FROM W_SALES_WEEK), 0) * 7, 0) AS SALES_QTY_M12_WEEK
                         , IT.PROD_LVL2_CD
                         , CM.CUST_LVL2_CD AS CUST_LVL2_CD_HIDDEN
                         , CASE WHEN @CONFIRM_YN = 'N' THEN CG.CONFIRM_YN_CFM ELSE @CONFIRM_YN END AS CONFIRM_YN 
                         , CG.SALES_PRICE_KRW AS SALES_PRICE_KRW_HIDDEN
                         , IP.ROUTING_ID
                         , CG.CPFR_YN
                         , CG.SALES_PLAN_YN
                         , CASE WHEN MC1.CODE_CD IS NULL THEN 'N' ELSE 'Y' END AS CLEANING_YN
                    FROM TB_MAP_ITEM_CUST_GROUP CG WITH(NOLOCK)
                    INNER JOIN TB_MST_ITEM IT WITH(NOLOCK)
                      ON CG.COMPANY_CD = IT.COMPANY_CD
                     AND CG.BU_CD = IT.BU_CD
                     AND CG.ITEM_CD = IT.ITEM_CD
                     AND IT.VALID_FLAG = 'Y'
                     AND IT.USE_FLAG = 'Y'
                     #set($treeAlias = "IT")
                     <include refid="include.productTree"/>
                    LEFT OUTER JOIN 
                    (
                        SELECT COMPANY_CD 
                             , BU_CD 
                             , ITEM_CD 
                             , MAX(ROUTING_ID) AS ROUTING_ID 
                             , MAX(PUR_LT) AS PUR_LT
                             , MAX(MFG_LT) AS MFG_LT
                             , SUM(SS_QTY) AS SS_QTY
                             , MAX(PROCUR_TYPE) AS PROCUR_TYPE
                             , MAX(RCPT_SL_CD) AS RCPT_SL_CD
                        FROM TB_MST_ITEM_PLANT WITH(NOLOCK) 
                        WHERE PLANT_CD = 'WF01'
                        GROUP BY COMPANY_CD, BU_CD, ITEM_CD
                    ) IP
                    ON CG.COMPANY_CD = IP.COMPANY_CD
                    AND CG.BU_CD = IP.BU_CD
                    AND CG.ITEM_CD = IP.ITEM_CD 
                    INNER JOIN TB_MST_CUSTOMER CM WITH(NOLOCK)
                       ON CG.COMPANY_CD = CM.COMPANY_CD
                      AND CG.BU_CD = CM.BU_CD
                      AND CG.CUST_GROUP_CD = CM.CUST_CD
                      AND CM.VALID_FLAG = 'Y'
                    LEFT OUTER JOIN TB_MST_CODE MC1 WITH(NOLOCK)
                      ON MC1.BU_CD = IP.BU_CD
                     AND MC1.GROUP_CD = 'CL_SL_CD'
                     AND MC1.CODE_CD = IP.RCPT_SL_CD
                     AND MC1.USE_FLAG = 'Y'
                    WHERE CG.COMPANY_CD = @{GV_COMPANY_CD}
                      AND CG.BU_CD = @{GV_BU_CD}
                    #if($_parameter.pastFlag != "Y")
                      AND CG.SALES_PLAN_YN = 'Y'
                    #end
                      AND CG.VALID_FLAG = 'Y'
                    #if($_parameter.dataCheck == "SALES_PRICE")
                      AND (CG.SALES_PRICE_KRW IS NULL OR CG.SALES_PRICE_KRW = 0)
                    #end
                    #if($_parameter.customerList and $_parameter.customerList.size() > 0)
                      AND EXISTS (
                                     SELECT 1
                                     FROM TB_MST_CUSTOMER TT
                                     WHERE TT.COMPANY_CD = CG.COMPANY_CD
                                       AND TT.BU_CD = CG.BU_CD
                                       AND TT.CUST_GROUP_CD = CG.CUST_GROUP_CD
                                       AND TT.VALID_FLAG = 'Y'
                                     #set($treeAlias = "TT")
                                     <include refid="include.customerTree"/>
                                 )
                    #end
                    #if($_parameter.item_cd and $_parameter.item_cd != "")
                      AND CG.ITEM_CD IN ('$_parameter.item_cd.replace(",","','")')
                    #elseif($_parameter.item_nm and $_parameter.item_nm != "")
                      AND (IT.ITEM_CD LIKE '%' + @{item_nm} + '%'
                         OR IT.ITEM_NM LIKE '%' + @{item_nm} + '%'
                       )
                    #end
                    #if($_parameter.remark and $_parameter.remark != "")
                      AND CG.REMARK LIKE '%' + @{remark} + '%'
                    #end
                    #if($_parameter.drawNo and $_parameter.drawNo != "")
                      AND IT.DRAW_NO LIKE '%' + @{drawNo} + '%'
                    #end
                    #if($_parameter.excelFlag == "Y")
                      AND EXISTS (
                                SELECT 1
                                FROM TB_MAP_ITEM_CUST_GROUP_AP1 A1 WITH(NOLOCK)
                                INNER JOIN TB_MAP_AP1_AP2 A2 WITH(NOLOCK)
                                   ON A1.COMPANY_CD  = A2.COMPANY_CD
                                  AND A1.AP1_USER_ID = A2.AP1_USER_ID
                                #if($_parameter.goc_yn != "Y")
                                  AND (A2.AP2_USER_ID = @{GV_USER_ID} OR A2.AP1_USER_ID = @{GV_USER_ID})
                                #end
                                WHERE A1.COMPANY_CD    = CG.COMPANY_CD
                                  AND A1.BU_CD         = CG.BU_CD
                                  AND A1.ITEM_CD       = CG.ITEM_CD
                                  AND A1.CUST_GROUP_CD = CG.CUST_GROUP_CD
                                  AND A1.USE_FLAG      = 'Y'
                             )
                    #end
            ),
            #if($_parameter.excelFlag != "Y")
            W_MY_SELECT_ITEM AS
            (
                SELECT CG.COMPANY_CD
                     , CG.BU_CD
                     , CG.CUST_GROUP_CD
                     , CG.ITEM_CD
                FROM TB_MAP_ITEM_CUST_GROUP CG WITH(NOLOCK)
                WHERE CG.COMPANY_CD = @{GV_COMPANY_CD}
                  AND CG.BU_CD      = @{GV_BU_CD}
                  AND EXISTS 
                (
                    SELECT 1
                    FROM TB_MAP_ITEM_CUST_GROUP_AP1 A1 WITH(NOLOCK)
                    INNER JOIN TB_MAP_AP1_AP2 A2 WITH(NOLOCK)
                       ON A1.COMPANY_CD  = A2.COMPANY_CD
                      AND A1.AP1_USER_ID = A2.AP1_USER_ID
                    #if($_parameter.goc_yn != "Y")
                      AND (A2.AP2_USER_ID = @{GV_USER_ID} OR A2.AP1_USER_ID = @{GV_USER_ID})
                    #end
                    WHERE A1.COMPANY_CD    = CG.COMPANY_CD
                      AND A1.BU_CD         = CG.BU_CD
                      AND A1.ITEM_CD       = CG.ITEM_CD
                      AND A1.CUST_GROUP_CD = CG.CUST_GROUP_CD
                      AND A1.USE_FLAG      = 'Y'
                )
            ),
            #end
            #if($dim_SS_QTY == "Y")
                W_SS_QTY AS 
                (
                    SELECT CG.COMPANY_CD
                         , CG.BU_CD
                         , CG.ITEM_CD
                         , SUM(IP.SS_QTY) AS SS_QTY
                    FROM W_ITEM_CUST_GROUP CG
                    INNER JOIN TB_MST_ITEM_PLANT IP WITH(NOLOCK)
                       ON CG.COMPANY_CD = IP.COMPANY_CD
                      AND CG.BU_CD = IP.BU_CD
                      AND CG.ITEM_CD = IP.ITEM_CD
                      AND IP.PLANT_CD = 'WF01'
                      AND IP.VALID_FLAG = 'Y'
                    GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD
                ),
            #end
            #if($dim_INV_QTY == "Y")
                W_INV_QTY AS 
                (
                    SELECT CG.COMPANY_CD
                         , CG.BU_CD
                         , CG.ITEM_CD
                         , SUM(IV.INV_QTY) AS INV_QTY
                    FROM W_ITEM_CUST_GROUP CG
                    INNER JOIN UV_DYN_INVENTORY IV WITH(NOLOCK)
                       ON CG.COMPANY_CD = IV.COMPANY_CD
                      AND CG.BU_CD = IV.BU_CD
                      AND CG.ITEM_CD = IV.ITEM_CD
                      AND IV.PLANT_CD = 'WF01'
                      AND IV.INV_DATE = @{qtyDate}
                    GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD
                ),
            #end
            #if($dim_WIP_MFG_QTY == "Y")
                W_WIP_MFG_QTY AS 
                (
                    SELECT DWR.COMPANY_CD
                         , DWR.BU_CD
                         , DPOH.ITEM_CD
                         , SUM(DWR.REMAIN_QTY) AS WIP_MFG_QTY2
                    FROM TB_DYN_WIP_ROUTING DWR WITH(NOLOCK)
                    INNER JOIN TB_DYN_PROD_ORDER_HDR DPOH WITH(NOLOCK)
                       ON DPOH.COMPANY_CD = DWR.COMPANY_CD
                      AND DPOH.BU_CD = DWR.BU_CD
                      AND DPOH.PROD_ORDER_NO = DWR.PROD_ORDER_NO
                    WHERE DWR.COMPANY_CD = @{GV_COMPANY_CD}
                      AND DWR.BU_CD = @{GV_BU_CD}
                      AND DWR.WIP_DATE = @{qtyDate}
                    GROUP BY DWR.COMPANY_CD, DWR.BU_CD, DPOH.ITEM_CD
                ),
            #end
            #if($dim_TOTAL_OPEN_SO == "Y")
                W_OPEN_SO AS 
                (
                    SELECT A1.COMPANY_CD
                         , A1.BU_CD
                         , A1.ITEM_CD
                         , A1.CUST_GROUP_CD
                         , ISNULL(A1.TOTAL_OPEN_SO, 0) AS TOTAL_OPEN_SO
                    FROM
                    (
                        SELECT SO.COMPANY_CD
                             , SO.BU_CD
                             , CM.CUST_GROUP_CD
                             , SO.ITEM_CD
                             , SUM(SO.SO_QTY - SO.GI_QTY) AS TOTAL_OPEN_SO
                        FROM TB_MST_CUSTOMER CM WITH(NOLOCK)
                        INNER JOIN TB_DYN_SALES_ORDER SO WITH(NOLOCK)
                           ON CM.COMPANY_CD = SO.COMPANY_CD
                          AND CM.BU_CD = SO.BU_CD
                          AND CM.CUST_CD = SO.CUST_CD
                          AND SO.CLOSE_YN = 'N'
                          AND SO.DEL_FLAG = 'N'
                          AND CM.VALID_FLAG = 'Y'
                        INNER JOIN W_CODE CD
                           ON SO.SO_TYPE = CD.CODE_CD
                          AND CD.GROUP_CD  = 'SO_TYPE'
                          AND CD.ATTB_1_CD = 'Y'
                        WHERE CM.COMPANY_CD = @{GV_COMPANY_CD}
                          AND CM.BU_CD = @{GV_BU_CD}
                        GROUP BY SO.COMPANY_CD, SO.BU_CD, SO.ITEM_CD, CM.CUST_GROUP_CD
                    ) A1
                ),
            #end
            #if($dim_SO_QTY == "Y")
                W_OPEN_SO2 AS (
                    SELECT A1.COMPANY_CD
                         , A1.BU_CD
                         , A1.CUST_GROUP_CD
                         , A1.ITEM_CD
                         , ISNULL(A1.SO_QTY, 0)AS SO_QTY
                    FROM
                    (
                        SELECT SO.COMPANY_CD
                             , SO.BU_CD
                             , CM.CUST_GROUP_CD
                             , SO.ITEM_CD
                             , SUM(SO.SO_QTY - SO.GI_QTY) AS SO_QTY
                        FROM TB_MST_CUSTOMER CM WITH(NOLOCK)
                        INNER JOIN TB_DYN_SALES_ORDER SO WITH(NOLOCK)
                           ON CM.COMPANY_CD = SO.COMPANY_CD
                          AND CM.BU_CD = SO.BU_CD
                          AND CM.CUST_CD = SO.CUST_CD
                          AND SO.CLOSE_YN = 'N'
                          AND SO.DEL_FLAG = 'N'
                          AND CM.VALID_FLAG = 'Y'
                        INNER JOIN W_CODE CD
                           ON SO.SO_TYPE = CD.CODE_CD
                          AND CD.GROUP_CD = 'SO_TYPE'
                          AND CD.ATTB_1_CD = 'Y'
                        WHERE CM.COMPANY_CD = @{GV_COMPANY_CD}
                          AND CM.BU_CD = @{GV_BU_CD}
                        GROUP BY SO.COMPANY_CD, SO.BU_CD, SO.ITEM_CD, CM.CUST_GROUP_CD
                    ) A1
                ),
            #end
            #if($dim_PROD_QTY == "Y")
                W_DIM_PROD_PR AS
                (
                    SELECT B1.COMPANY_CD
                         , B1.BU_CD
                         , B1.ITEM_CD
                         , CASE WHEN ISNULL(PLAN_QTY, 0) - ISNULL(RESULT_QTY, 0) <![CDATA[>]]> 0 
                                THEN ISNULL(PLAN_QTY, 0) - ISNULL(RESULT_QTY, 0) 
                                ELSE 0
                            END DIM_PROD_QTY
                    FROM
                    (
                        SELECT HAPPD.COMPANY_CD
                             , HAPPD.BU_CD
                             , HAPPD.ITEM_CD
                             , SUM(HAPPD.QTY) AS PLAN_QTY
                        FROM TB_HIS_APS_PROD_PLAN_DAILY HAPPD WITH(NOLOCK)
                        WHERE HAPPD.COMPANY_CD = @{GV_COMPANY_CD}
                          AND HAPPD.BU_CD = @{GV_BU_CD}
                          AND HAPPD.PLAN_ID = @P_BEFORE_THU
                          AND HAPPD.YYYYMMDD BETWEEN @P_BEFORE_THU AND @P_BEFORE_SAT
                        GROUP BY HAPPD.COMPANY_CD, HAPPD.BU_CD, HAPPD.ITEM_CD
                    ) B1
                    LEFT OUTER JOIN
                    (
                        SELECT PR.COMPANY_CD
                             , PR.BU_CD
                             , PR.ITEM_CD
                             , SUM(PR.QTY) AS RESULT_QTY
                        FROM UV_PROD_RESULT PR WITH(NOLOCK)
                        WHERE PR.COMPANY_CD = @{GV_COMPANY_CD}
                          AND PR.BU_CD = @{GV_BU_CD}
                          AND PR.PLANT_CD = 'WF01'
                          AND PR.PROD_DATE BETWEEN @P_BEFORE_THU AND @P_BEFORE_SAT
                        GROUP BY PR.COMPANY_CD, PR.BU_CD, PR.ITEM_CD 
                    ) B2
                    ON B1.COMPANY_CD = B2.COMPANY_CD
                    AND B1.BU_CD = B2.BU_CD
                    AND B1.ITEM_CD = B2.ITEM_CD
                ),
            #end
            #if($dim_DIM_PROD_PLAN_QTY == "Y")
                W_DIM_PROD_PLAN_QTY AS 
                (
                    SELECT CG.COMPANY_CD
                         , CG.BU_CD
                         , CG.ITEM_CD
                         , CG.CUST_GROUP_CD
                         , SUM(CASE WHEN SP.MEAS_CD = 'PROD_PLAN_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_PROD_PLAN_QTY2
                         , SUM(CASE WHEN SP.MEAS_CD = 'SALES_REMAIN_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_SALES_REMAIN_QTY
                         , SUM(CASE WHEN SP.MEAS_CD = 'PROD_REMAIN_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_PROD_REMAIN_QTY
                         , SUM(CASE WHEN SP.MEAS_CD = 'PROD_1ST_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_PROD_1ST_QTY
                         , SUM(CASE WHEN SP.MEAS_CD = 'PROD_2ND_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_PROD_2ND_QTY
                         , SUM(CASE WHEN SP.MEAS_CD = 'PROD_3RD_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_PROD_3RD_QTY
                    FROM W_ITEM_CUST_GROUP CG
                    #if($_parameter.pastFlag == "Y")
                    INNER JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
                    #elseif($_parameter.pastFlag == "N")
                    INNER JOIN TB_DYN_SALES_PLAN SP WITH(NOLOCK)
                    #end
                       ON CG.COMPANY_CD = SP.COMPANY_CD
                      AND CG.BU_CD = SP.BU_CD
                      AND CG.ITEM_CD = SP.ITEM_CD
                      AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                    WHERE 1 = 1
                    #if($_parameter.pastFlag == "Y")
                      AND SP.PLAN_ID = @{planIdPast}
                    #end
                      AND SP.YEARPWEEK = @{partADimWeek}
                      AND SP.MEAS_CD IN ('PROD_PLAN_QTY', 'SALES_REMAIN_QTY', 'PROD_REMAIN_QTY', 'PROD_1ST_QTY', 'PROD_2ND_QTY', 'PROD_3RD_QTY')
                    GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD, CG.CUST_GROUP_CD
                ),
            #end
            #if($dim_DIM_AVAIL_QTY == "Y")
            W_DIM_AVAIL_QTY AS 
            (
                SELECT CG.COMPANY_CD
                     , CG.BU_CD
                     , CG.ITEM_CD
                     , CG.CUST_GROUP_CD
                     , SUM(CASE WHEN SP.MEAS_CD = 'AVAIL_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_AVAIL_QTY2
                FROM W_ITEM_CUST_GROUP CG
                #if($_parameter.pastFlag == "Y")
                INNER JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
                #elseif($_parameter.pastFlag == "N")
                INNER JOIN TB_DYN_SALES_PLAN SP WITH(NOLOCK)
                #end
                   ON CG.COMPANY_CD = SP.COMPANY_CD
                  AND CG.BU_CD = SP.BU_CD
                  AND CG.ITEM_CD = SP.ITEM_CD
                  AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                WHERE 1 = 1
                #if($_parameter.pastFlag == "Y")
                  AND SP.PLAN_ID = @{planIdPast}
                #end
                  AND SP.YEARPWEEK = @{partADimWeek}
                  AND SP.MEAS_CD = 'AVAIL_QTY'
                GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD, CG.CUST_GROUP_CD
            ),
        #end
        
        #if($dim_DIM_CALC_BOH_QTY == "Y")
            W_DIM_CALC_BOH_QTY AS 
            (
                SELECT CG.COMPANY_CD
                     , CG.BU_CD
                     , CG.ITEM_CD
                     , CG.CUST_GROUP_CD
                     , SUM(CASE WHEN SP.MEAS_CD = 'CALC_BOH_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_CALC_BOH_QTY
                FROM W_ITEM_CUST_GROUP CG
                #if($_parameter.pastFlag == "Y")
                INNER JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
                #elseif($_parameter.pastFlag == "N")
                INNER JOIN TB_DYN_SALES_PLAN SP WITH(NOLOCK)
                #end
                   ON CG.COMPANY_CD = SP.COMPANY_CD
                  AND CG.BU_CD = SP.BU_CD
                  AND CG.ITEM_CD = SP.ITEM_CD
                  AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                WHERE 1 = 1
                #if($_parameter.pastFlag == "Y")
                  AND SP.PLAN_ID = @{planIdPast}
                #end
                  AND SP.YEARPWEEK = @{partADimWeek}
                  AND SP.MEAS_CD = 'CALC_BOH_QTY'
                GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD, CG.CUST_GROUP_CD
            ),
        #end
        #if($dim_DIM_PROD_NO_REFLECTION == "Y")
            W_DIM_PROD_NO_REFLECTION AS 
            (
                SELECT A1.COMPANY_CD
                     , A1.BU_CD
                     , A1.CUST_GROUP_CD
                     , A1.ITEM_CD
                     , CASE WHEN ISNULL(A1.DIM_AP2_SP, 0) - ISNULL(A2.DIM_AVAIL_QTY2, 0) <![CDATA[<]]> 0 THEN 0
                            ELSE ISNULL(A1.DIM_AP2_SP, 0) - ISNULL(A2.DIM_AVAIL_QTY2, 0)
                        END DIM_PROD_NO_REFLECTION 
                FROM
                (
                    SELECT CG.COMPANY_CD
                         , CG.BU_CD
                         , CG.ITEM_CD
                         , CG.CUST_GROUP_CD
                         , SUM(SP.QTY) AS DIM_AP2_SP
                    FROM W_ITEM_CUST_GROUP CG
                    INNER JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
                       ON CG.COMPANY_CD = SP.COMPANY_CD
                      AND CG.BU_CD = SP.BU_CD
                      AND CG.ITEM_CD = SP.ITEM_CD
                      AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                    WHERE 1 = 1
                      AND SP.PLAN_ID = @{planIdPast}
                      AND SP.YEARWEEK = @{partADimWeek}
                      AND SP.MEAS_CD = 'AP2_SP'
                    GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD, CG.CUST_GROUP_CD
                    
                ) A1
                LEFT OUTER JOIN 
                (
                    SELECT CG.COMPANY_CD
                         , CG.BU_CD
                         , CG.ITEM_CD
                         , CG.CUST_GROUP_CD
                         , SUM(SP.QTY) AS DIM_AVAIL_QTY2
                    FROM W_ITEM_CUST_GROUP CG
                    #if($_parameter.pastFlag == "Y")
                    INNER JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
                    #elseif($_parameter.pastFlag == "N")
                    INNER JOIN TB_DYN_SALES_PLAN SP WITH(NOLOCK)
                    #end
                       ON CG.COMPANY_CD = SP.COMPANY_CD
                      AND CG.BU_CD = SP.BU_CD
                      AND CG.ITEM_CD = SP.ITEM_CD
                      AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                    WHERE 1 = 1
                    #if($_parameter.pastFlag == "Y")
                      AND SP.PLAN_ID = @{planIdPast}
                    #end
                      AND SP.YEARWEEK = @{partADimWeek}
                      AND SP.MEAS_CD = 'AVAIL_QTY'
                    GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD, CG.CUST_GROUP_CD
                ) A2
                ON A1.COMPANY_CD = A2.COMPANY_CD
                AND A1.BU_CD = A2.BU_CD
                AND A1.ITEM_CD = A2.ITEM_CD
                AND A1.CUST_GROUP_CD = A2.CUST_GROUP_CD
            ),
        #end
        #if($dim_OPEN_SO_SP == "Y")
            W_OPEN_SO_HIDDEN AS 
            (
                SELECT A1.COMPANY_CD
                     , A1.BU_CD
                     , A1.ITEM_CD
                     , A1.CUST_GROUP_CD
                     , ISNULL(A1.SO_QTY, 0) AS SO_QTY
                FROM
                (
                    SELECT SO.COMPANY_CD
                         , SO.BU_CD
                         , CM.CUST_GROUP_CD
                         , SO.ITEM_CD
                         , SUM(SO.SO_QTY - SO.GI_QTY) AS SO_QTY
                    FROM TB_MST_CUSTOMER CM WITH(NOLOCK)
                    INNER JOIN TB_DYN_SALES_ORDER SO WITH(NOLOCK)
                       ON CM.COMPANY_CD = SO.COMPANY_CD
                      AND CM.BU_CD = SO.BU_CD
                      AND CM.CUST_CD = SO.CUST_CD
                      AND SO.CLOSE_YN = 'N'
                      AND SO.DEL_FLAG = 'N'
                      AND CM.VALID_FLAG = 'Y'
                    INNER JOIN W_CODE CD
                       ON SO.SO_TYPE = CD.CODE_CD
                      AND CD.GROUP_CD = 'SO_TYPE'
                      AND CD.ATTB_1_CD = 'Y'
                    WHERE CM.COMPANY_CD = @{GV_COMPANY_CD}
                      AND CM.BU_CD = @{GV_BU_CD}
                    GROUP BY SO.COMPANY_CD, SO.BU_CD, SO.ITEM_CD, CM.CUST_GROUP_CD
                ) A1
            ),
        #end
        #if($dim_DIM_PROD_PLAN_QTY_REMAINS == "Y")
            W_DIM_PROD_PLAN_QTY_REMAINS AS 
            (
                SELECT A1.COMPANY_CD
                     , A1.BU_CD
                     , A1.ITEM_CD
                     , SUM(A2.QTY) AS DIM_PROD_PLAN_QTY_REMAINS
                FROM W_ITEM_CUST_GROUP A1
                INNER JOIN 
                (
                    SELECT COMPANY_CD
                         , BU_CD
                         , ITEM_CD
                         , QTY
                    FROM TB_HIS_APS_PROD_PLAN_DAILY WITH(NOLOCK)
                    WHERE PLAN_ID = (
                                        SELECT TOP 1 PLAN_ID
                                        FROM TB_MST_PLAN_VERSION WITH(NOLOCK)
                                        WHERE COMPANY_CD = @{GV_COMPANY_CD}
                                          AND BU_CD = @{GV_BU_CD}
                                          AND PLAN_TYPE_CD = 'FP'
                                        #if($_parameter.pastFlag == "Y")
                                          AND APS_START_DATE <![CDATA[<=]]> @{qtyDate}
                                        #end 
                                          AND RELEASE_FLAG = 'Y'
                                        ORDER BY APS_START_DATE DESC
                                     )
                    #if($_parameter.pastFlag == "Y")
                      AND YYYYMMDD BETWEEN @{startRemains} AND @{endRemains}
                    #else
                      AND YYYYMMDD BETWEEN @P_START_DATE AND @P_END_DATE
                    #end
                      AND YYYYMMDD <![CDATA[>=]]> @{qtyDate}
                ) A2
                ON A1.COMPANY_CD = A2.COMPANY_CD
                AND A1.BU_CD = A2.BU_CD
                AND A1.ITEM_CD = A2.ITEM_CD
                GROUP BY A1.COMPANY_CD, A1.BU_CD, A1.ITEM_CD
            ),
        #end
            W_DIM_AVAIL_CFM_SP AS 
            (
                SELECT CG.COMPANY_CD
                     , CG.BU_CD
                     , CG.ITEM_CD
                     , CG.CUST_GROUP_CD
                     , SUM(CASE WHEN SP.MEAS_CD = 'AVAIL_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_AVAIL_QTY_HIDDEN
                     , SUM(CASE WHEN SP.MEAS_CD = 'CFM_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END) AS DIM_CFM_SP_HIDDEN
                FROM W_ITEM_CUST_GROUP CG
                #if($_parameter.pastFlag == "Y")
                INNER JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
                #elseif($_parameter.pastFlag == "N")
                INNER JOIN TB_DYN_SALES_PLAN SP WITH(NOLOCK)
                #end
                   ON CG.COMPANY_CD = SP.COMPANY_CD
                  AND CG.BU_CD = SP.BU_CD
                  AND CG.ITEM_CD = SP.ITEM_CD
                  AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                WHERE 1 = 1
                #if($_parameter.pastFlag == "Y")
                  AND SP.PLAN_ID = @{planIdPast}
                #end
                  AND SP.YEARWEEK = @{dimWeek}
                  AND SP.MEAS_CD IN ('AVAIL_QTY', 'CFM_SP')
                GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD, CG.CUST_GROUP_CD
            ),
            W_DIM AS 
            (
                SELECT CAST(CG.COMPANY_CD AS VARCHAR) AS COMPANY_CD
                     , CAST(CG.BU_CD AS VARCHAR) AS BU_CD
                     , CAST(CG.PROD_LVL2_CD AS VARCHAR) AS PROD_LVL2_CD
                     , CAST(CG.CUST_LVL2_CD_HIDDEN AS VARCHAR) AS CUST_LVL2_CD_HIDDEN
                     , CAST(CG.PROD_LVL3_CD AS VARCHAR) AS PROD_LVL3_CD
                     , CAST(CG.PROD_LVL3_NM AS VARCHAR) AS PROD_LVL3_NM
                     , CAST(CG.CUST_LVL2_CD AS VARCHAR) AS CUST_LVL2_CD
                     , CAST(CG.CUST_LVL2_NM AS VARCHAR) AS CUST_LVL2_NM
                     , CAST(CG.CUST_GROUP_CD AS VARCHAR) AS CUST_GROUP_CD
                     , CAST(CG.CUST_GROUP_NM AS VARCHAR) AS CUST_GROUP_NM
                     , CAST(CG.ITEM_CD AS VARCHAR) AS ITEM_CD
                     , CAST(CG.ITEM_NM AS VARCHAR) AS ITEM_NM
                     , CAST(CG.SPEC AS VARCHAR) AS SPEC
                     , CAST(CG.DRAW_NO AS VARCHAR) AS DRAW_NO
                     , CAST(CG.ROUTING_ID AS VARCHAR) AS ROUTING_ID
                     , CAST(ISNULL(CG.REMARK, '') AS VARCHAR) AS REMARK
                     , CAST(ISNULL(CG.CFM_CHG_REASON, '') AS VARCHAR) AS CFM_CHG_REASON
                     , CAST(ISNULL(CG.CONFIRM_YN, 'N') AS VARCHAR) AS CONFIRM_YN
                     , ISNULL(CG.SALES_PRICE_KRW_HIDDEN, 0) AS SALES_PRICE_KRW_HIDDEN
                     , ISNULL(CAST (CG.SALES_PRICE_KRW_HIDDEN AS NVARCHAR(20)), ' ') AS SALES_PRICE_KRW
                     , CONVERT(VARCHAR, ISNULL(CG.SALES_QTY_M1, 0)) AS SALES_1M
                     , CONVERT(VARCHAR, ISNULL(CG.SALES_QTY_M3, 0)) AS SALES_3M
                     , CONVERT(VARCHAR, ISNULL(CG.SALES_QTY_M12, 0)) AS SALES_12M
                     , CONVERT(VARCHAR, ISNULL(CG.SALES_QTY_M1_WEEK, 0)) AS SALES_1M_WEEK
                     , CONVERT(VARCHAR, ISNULL(CG.SALES_QTY_M3_WEEK, 0)) AS SALES_3M_WEEK
                     , CONVERT(VARCHAR, ISNULL(CG.SALES_QTY_M3_WEEK, 0)) AS SALES_3M_WEEK_HIDDEN
                     , CONVERT(VARCHAR, ISNULL(CG.SALES_QTY_M12_WEEK, 0)) AS SALES_12M_WEEK
                     , 'CFM_SP' AS CATEGORY_CD
                     , AC.DIM_AVAIL_QTY_HIDDEN
                     , AC.DIM_CFM_SP_HIDDEN
                     , CG.CLEANING_YN
                    #if($dim_OPEN_SO_SP == "Y")             
                     , CONVERT(VARCHAR, ISNULL(SOH.SO_QTY, 0)) AS SO_QTY_HIDDEN
                    #end
                    #if($dim_DIM_PROD_NO_REFLECTION == "Y")
                     , CONVERT(VARCHAR, ISNULL(PNR.DIM_PROD_NO_REFLECTION, 0)) AS DIM_PROD_NO_REFLECTION 
                    #end
                    #if($dim_DIM_PROD_PLAN_QTY_REMAINS == "Y")
                     , CONVERT(VARCHAR, ISNULL(DPPQR.DIM_PROD_PLAN_QTY_REMAINS, 0)) AS DIM_PROD_PLAN_QTY_REMAINS
                    #end
                    #if($dim_DIM_CALC_BOH_QTY == "Y")
                     , CONVERT(VARCHAR, ISNULL(DCB.DIM_CALC_BOH_QTY, 0)) AS DIM_CALC_BOH_QTY 
                    #end
                    #if($dim_DIM_AVAIL_QTY == "Y")
                     , CONVERT(VARCHAR, ISNULL(AQ.DIM_AVAIL_QTY2, 0)) AS DIM_AVAIL_QTY2 
                    #end
                    #if($dim_DIM_PROD_PLAN_QTY == "Y")
                     , CONVERT(VARCHAR, ISNULL(PPQ.DIM_PROD_PLAN_QTY2, 0)) AS DIM_PROD_PLAN_QTY2
                     , CONVERT(VARCHAR, ISNULL(PPQ.DIM_SALES_REMAIN_QTY, 0)) AS DIM_SALES_REMAIN_QTY
                     , CONVERT(VARCHAR, ISNULL(PPQ.DIM_PROD_REMAIN_QTY, 0)) AS DIM_PROD_REMAIN_QTY
                     , CONVERT(VARCHAR, ISNULL(PPQ.DIM_PROD_1ST_QTY, 0)) AS DIM_PROD_1ST_QTY
                     , CONVERT(VARCHAR, ISNULL(PPQ.DIM_PROD_2ND_QTY, 0)) AS DIM_PROD_2ND_QTY
                     , CONVERT(VARCHAR, ISNULL(PPQ.DIM_PROD_3RD_QTY, 0)) AS DIM_PROD_3RD_QTY
                    #end
                    #if($dim_PROD_QTY == "Y")
                     , CONVERT(VARCHAR, CASE WHEN ISNULL(CG.CLEANING_YN, 'N') = 'N' THEN ISNULL(PR.DIM_PROD_QTY, 0) + ISNULL(PPQ.DIM_PROD_1ST_QTY, 0) + ISNULL(PPQ.DIM_PROD_2ND_QTY, 0)
                            ELSE ISNULL(PR.DIM_PROD_QTY, 0) + ISNULL(PPQ.DIM_PROD_1ST_QTY, 0) 
                       END) AS DIM_PROD_QTY
                    #end
                    #if($dim_SS_QTY == "Y")
                     , CONVERT(VARCHAR, ISNULL(IP.SS_QTY, 0)) AS SS_QTY
                    #end
                    #if($dim_INV_QTY == "Y")
                     , CONVERT(VARCHAR, ISNULL(IV.INV_QTY, 0)) AS INV_QTY
                    #end
                    #if($dim_WIP_MFG_QTY == "Y")
                     , CONVERT(VARCHAR, ISNULL(WP.WIP_MFG_QTY2, 0)) AS WIP_MFG_QTY2
                    #end
                    #if($dim_TOTAL_OPEN_SO == "Y")
                     , CONVERT(VARCHAR, ISNULL(SO.TOTAL_OPEN_SO, 0)) AS TOTAL_OPEN_SO
                    #else
                     , 0 AS TOTAL_OPEN_SO
                    #end
                    #if($dim_SO_QTY == "Y")
                     , CONVERT(VARCHAR, ISNULL(SO2.SO_QTY, 0)) AS SO_QTY
                    #end
                    #if($_parameter.dataAddSales == "INV_WIP" or $_parameter.dataAddSales == "OPEN_SO_INV_WIP")
                     , (ISNULL(IV.INV_QTY, 0) + ISNULL(WP.WIP_MFG_QTY2, 0)) AS INV_WIP_QTY
                    #else
                     , 0 AS INV_WIP_QTY
                    #end
                FROM W_ITEM_CUST_GROUP CG
                LEFT OUTER JOIN W_DIM_AVAIL_CFM_SP AC
                  ON CG.COMPANY_CD = AC.COMPANY_CD
                 AND CG.BU_CD = AC.BU_CD
                 AND CG.ITEM_CD = AC.ITEM_CD
                 AND CG.CUST_GROUP_CD = AC.CUST_GROUP_CD
                #if($dim_OPEN_SO_SP == "Y")
                LEFT OUTER JOIN W_OPEN_SO_HIDDEN SOH
                  ON CG.COMPANY_CD = SOH.COMPANY_CD
                 AND CG.BU_CD = SOH.BU_CD
                 AND CG.ITEM_CD = SOH.ITEM_CD
                 AND CG.CUST_GROUP_CD = SOH.CUST_GROUP_CD
                #end
                #if($dim_SS_QTY == "Y")
                LEFT OUTER JOIN W_SS_QTY IP
                  ON CG.COMPANY_CD = IP.COMPANY_CD
                 AND CG.BU_CD = IP.BU_CD
                 AND CG.ITEM_CD = IP.ITEM_CD
                #end
                #if($dim_INV_QTY == "Y")
                LEFT OUTER JOIN W_INV_QTY IV
                  ON CG.COMPANY_CD = IV.COMPANY_CD
                 AND CG.BU_CD = IV.BU_CD
                 AND CG.ITEM_CD = IV.ITEM_CD
                #end
                #if($dim_WIP_MFG_QTY == "Y")
                LEFT OUTER JOIN W_WIP_MFG_QTY WP
                  ON CG.COMPANY_CD = WP.COMPANY_CD
                 AND CG.BU_CD = WP.BU_CD
                 AND CG.ITEM_CD = WP.ITEM_CD
                #end
                #if($dim_TOTAL_OPEN_SO == "Y")
                LEFT OUTER JOIN W_OPEN_SO SO
                  ON CG.COMPANY_CD = SO.COMPANY_CD
                 AND CG.BU_CD = SO.BU_CD
                 AND CG.ITEM_CD = SO.ITEM_CD
                 AND CG.CUST_GROUP_CD = SO.CUST_GROUP_CD
                #end
                #if($dim_SO_QTY == "Y")
                LEFT OUTER JOIN W_OPEN_SO2 SO2
                  ON CG.COMPANY_CD = SO2.COMPANY_CD
                 AND CG.BU_CD = SO2.BU_CD
                 AND CG.ITEM_CD = SO2.ITEM_CD
                 AND CG.CUST_GROUP_CD = SO2.CUST_GROUP_CD
                #end
                #if($dim_DIM_PROD_PLAN_QTY == "Y")
                LEFT OUTER JOIN W_DIM_PROD_PLAN_QTY PPQ
                  ON CG.COMPANY_CD = PPQ.COMPANY_CD
                 AND CG.BU_CD = PPQ.BU_CD
                 AND CG.ITEM_CD = PPQ.ITEM_CD
                #end
                #if($dim_PROD_QTY == "Y")
                LEFT OUTER JOIN W_DIM_PROD_PR PR
                  ON CG.COMPANY_CD = PR.COMPANY_CD
                 AND CG.BU_CD = PR.BU_CD
                 AND CG.ITEM_CD = PR.ITEM_CD
                #end
                #if($dim_DIM_AVAIL_QTY == "Y")
                LEFT OUTER JOIN W_DIM_AVAIL_QTY AQ
                  ON CG.COMPANY_CD = AQ.COMPANY_CD
                 AND CG.BU_CD = AQ.BU_CD
                 AND CG.ITEM_CD = AQ.ITEM_CD
                 AND CG.CUST_GROUP_CD = AQ.CUST_GROUP_CD
                #end
                #if($dim_DIM_CALC_BOH_QTY == "Y")
                LEFT OUTER JOIN W_DIM_CALC_BOH_QTY DCB
                  ON CG.COMPANY_CD = DCB.COMPANY_CD
                 AND CG.BU_CD = DCB.BU_CD
                 AND CG.ITEM_CD = DCB.ITEM_CD
                 AND CG.CUST_GROUP_CD = DCB.CUST_GROUP_CD
                #end
                #if($dim_DIM_PROD_NO_REFLECTION == "Y")
                LEFT OUTER JOIN W_DIM_PROD_NO_REFLECTION PNR
                  ON CG.COMPANY_CD = PNR.COMPANY_CD
                 AND CG.BU_CD = PNR.BU_CD
                 AND CG.ITEM_CD = PNR.ITEM_CD
                 AND CG.CUST_GROUP_CD = PNR.CUST_GROUP_CD
                #end
                #if($dim_DIM_PROD_PLAN_QTY_REMAINS == "Y")
                LEFT OUTER JOIN W_DIM_PROD_PLAN_QTY_REMAINS DPPQR
                  ON CG.COMPANY_CD = DPPQR.COMPANY_CD
                 AND CG.BU_CD      = DPPQR.BU_CD
                 AND CG.ITEM_CD    = DPPQR.ITEM_CD
                #end
            ),
            W_PLAN AS 
            (               
                /*AP2_SP START*/
                SELECT CG.COMPANY_CD
                     , CG.BU_CD
                     , CG.CUST_GROUP_CD
                     , CG.ITEM_CD
                     , SP.YEARPWEEK
                     , CASE WHEN SP.MEAS_CD = 'AP2_DMD1_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END AP2_DMD1_SP
                     , CASE WHEN SP.MEAS_CD = 'AP2_DMD2_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END AP2_DMD2_SP
                     , CASE WHEN SP.MEAS_CD = 'AP2_DMD3_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END AP2_DMD3_SP
                     , CASE WHEN SP.MEAS_CD = 'AP2_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END AP2_SP
                     , CASE WHEN SP.MEAS_CD = 'AP2_DMD1_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END AP2_DMD1_SP_AMT_KRW
                     , CASE WHEN SP.MEAS_CD = 'AP2_DMD2_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END AP2_DMD2_SP_AMT_KRW
                     , CASE WHEN SP.MEAS_CD = 'AP2_DMD3_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END AP2_DMD3_SP_AMT_KRW
                     , CASE WHEN SP.MEAS_CD = 'AP2_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END AP2_SP_AMT_KRW
                     , 0 AS PROD_PLAN_QTY
                     , 0 AS CALC_BOH_QTY 
                     , 0 AS AVAIL_QTY
                     , 0 AS CALC_EOH_QTY
                     , 0 AS PROD_1ST_QTY
                     , 0 AS PROD_2ND_QTY
                     , 0 AS PROD_3RD_QTY
                     , NULL AS CFM_DMD1_SP
                     , NULL AS CFM_DMD2_SP
                     , NULL AS CFM_DMD3_SP
                     , NULL AS CFM_SP
                     , NULL AS CFM_DMD1_SP_AMT_KRW
                     , NULL AS CFM_DMD2_SP_AMT_KRW
                     , NULL AS CFM_DMD3_SP_AMT_KRW
                     , NULL AS CFM_SP_AMT_KRW
                FROM W_DIM CG
                INNER JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
                   ON CG.COMPANY_CD = SP.COMPANY_CD
                  AND CG.BU_CD = SP.BU_CD
                  AND CG.ITEM_CD = SP.ITEM_CD
                  AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                  AND SP.PLAN_ID = @{planIdPast}
                  AND SP.MEAS_CD IN ('AP2_DMD1_SP', 'AP2_DMD2_SP', 'AP2_DMD3_SP', 'AP2_SP')
                  AND SP.YEARPWEEK BETWEEN @{fromPWeek} AND @{toPWeek}
                /*AP2_SP END*/            
            ),
            W_RESULT AS 
            (
                SELECT CG.COMPANY_CD
                     , CG.BU_CD
                     , CG.CUST_GROUP_CD
                     , CG.ITEM_CD
                     , CA.YEARPWEEK
                FROM W_DIM CG
                INNER JOIN TB_MST_CUSTOMER CT WITH(NOLOCK)
                   ON CG.COMPANY_CD = CT.COMPANY_CD
                  AND CG.BU_CD = CT.BU_CD
                  AND CG.CUST_GROUP_CD = CT.CUST_GROUP_CD
                  AND CT.VALID_FLAG = 'Y'
                INNER JOIN TB_DYN_SALES_RESULT SR WITH(NOLOCK)
                   ON CG.COMPANY_CD = SR.COMPANY_CD
                  AND CG.BU_CD = SR.BU_CD
                  AND CG.ITEM_CD = SR.ITEM_CD
                  AND CT.CUST_CD = SR.CUST_CD
                  AND SR.PLANT_CD = 'WF01'
                  AND SR.DEL_FLAG = 'N'
                  AND SR.SALES_DATE BETWEEN CONVERT(VARCHAR(8), DATEADD(YYYY, -1, CONVERT(DATE, @{fromCal})), 112) AND CONVERT(VARCHAR(8), DATEADD(YYYY, -1, CONVERT(DATE, @{toCal})), 112)
                INNER JOIN 
                (
                    SELECT YEARPWEEK
                         , CONVERT(VARCHAR(8), DATEADD(YYYY, -1, CONVERT(DATE, YYYYMMDD)), 112) AS YYYYMMDD
                    FROM TB_MST_CALENDAR WITH(NOLOCK)
                    WHERE YYYYMMDD BETWEEN @{fromCal} AND @{toCal}
                       /* 2월 29일은 제외 */
                       AND YYYYMMDD != SUBSTRING(@{fromCal}, 1, 4)+'0229'
                       AND YYYYMMDD != SUBSTRING(@{toCal}, 1, 4)+'0229'
                ) CA
                ON SR.SALES_DATE = CA.YYYYMMDD
                GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.ITEM_CD, CG.CUST_GROUP_CD, CA.YEARPWEEK
            ),
            W_CFM_PLAN_HIDDEN AS 
            (
                SELECT COMPANY_CD
                     , BU_CD
                     , CUST_GROUP_CD
                     , ITEM_CD
                     , SUM(QTY) AS SP_HIDDEN
                FROM TB_DYN_SALES_PLAN WITH(NOLOCK)
                WHERE COMPANY_CD = @{GV_COMPANY_CD}
                  AND BU_CD = @{GV_BU_CD}
                  AND MEAS_CD = 'CFM_SP'
                  AND YEARPWEEK BETWEEN @{fromPWeek} AND @{toPWeek}
                GROUP BY COMPANY_CD, BU_CD, CUST_GROUP_CD, ITEM_CD
            ),              
            W_CFM_PLAN AS 
            (
                #if($_parameter.excelFlag == "Y")
                    SELECT CG.COMPANY_CD
                         , CG.BU_CD
                         , CG.CUST_GROUP_CD
                         , CG.ITEM_CD
                         , SP.YEARPWEEK
                         , NULL AS AP2_DMD1_SP
                         , NULL AS AP2_DMD2_SP
                         , NULL AS AP2_DMD3_SP
                         , NULL AS AP2_SP
                         , NULL AS AP2_DMD1_SP_AMT_KRW
                         , NULL AS AP2_DMD2_SP_AMT_KRW
                         , NULL AS AP2_DMD3_SP_AMT_KRW
                         , NULL AS AP2_SP_AMT_KRW
                         , 0 AS PROD_PLAN_QTY
                         , NULL AS CALC_BOH_QTY
                         , NULL AS AVAIL_QTY
                         , NULL AS CALC_EOH_QTY
                         , NULL AS PROD_1ST_QTY
                         , NULL AS PROD_2ND_QTY
                         , NULL AS PROD_3RD_QTY
                         , CASE WHEN SP.MEAS_CD = 'CFM_DMD1_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD1_SP
                         , CASE WHEN SP.MEAS_CD = 'CFM_DMD2_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD2_SP
                         , CASE WHEN SP.MEAS_CD = 'CFM_DMD3_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD3_SP
                         , CASE WHEN SP.MEAS_CD = 'CFM_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_SP
                         , CASE WHEN SP.MEAS_CD = 'CFM_DMD1_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD1_SP_AMT_KRW
                         , CASE WHEN SP.MEAS_CD = 'CFM_DMD2_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD2_SP_AMT_KRW
                         , CASE WHEN SP.MEAS_CD = 'CFM_DMD3_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD3_SP_AMT_KRW
                         , CASE WHEN SP.MEAS_CD = 'CFM_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_SP_AMT_KRW
                      FROM W_DIM CG
                      INNER JOIN TB_DYN_SALES_PLAN SP WITH(NOLOCK)
                         ON CG.COMPANY_CD = SP.COMPANY_CD
                        AND CG.BU_CD = SP.BU_CD
                        AND CG.ITEM_CD = SP.ITEM_CD
                        AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                        AND SP.MEAS_CD IN ('CFM_DMD1_SP', 'CFM_DMD2_SP', 'CFM_DMD3_SP', 'CFM_SP', 'AP2_SP')
                        AND SP.YEARPWEEK BETWEEN @{fromPWeek} AND @{toPWeek}
                #else
                    #if($_parameter.pastPlanIdStartWeek and $_parameter.pastPlanIdStartWeek != "")
                        SELECT CG.COMPANY_CD
                             , CG.BU_CD
                             , CG.CUST_GROUP_CD
                             , CG.ITEM_CD
                             , SP.YEARPWEEK
                             , NULL AS AP2_DMD1_SP
                             , NULL AS AP2_DMD2_SP
                             , NULL AS AP2_DMD3_SP
                             , NULL AS AP2_SP
                             , NULL AS AP2_DMD1_SP_AMT_KRW
                             , NULL AS AP2_DMD2_SP_AMT_KRW
                             , NULL AS AP2_DMD3_SP_AMT_KRW
                             , NULL AS AP2_SP_AMT_KRW
                             , 0 AS PROD_PLAN_QTY
                             , NULL AS CALC_BOH_QTY
                             , NULL AS AVAIL_QTY
                             , NULL AS CALC_EOH_QTY
                             , NULL AS PROD_1ST_QTY
                             , NULL AS PROD_2ND_QTY
                             , NULL AS PROD_3RD_QTY
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD1_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD1_SP
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD2_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD2_SP
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD3_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD3_SP
                             , CASE WHEN SP.MEAS_CD = 'CFM_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_SP
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD1_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD1_SP_AMT_KRW
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD2_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD2_SP_AMT_KRW
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD3_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD3_SP_AMT_KRW
                             , CASE WHEN SP.MEAS_CD = 'CFM_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_SP_AMT_KRW
                        FROM W_DIM CG
                        INNER JOIN TB_KPI_SALES_PLAN SP WITH(NOLOCK)
                           ON CG.COMPANY_CD = SP.COMPANY_CD
                          AND CG.BU_CD = SP.BU_CD
                          AND CG.ITEM_CD = SP.ITEM_CD
                          AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                          AND SP.MEAS_CD IN ('CFM_DMD1_SP', 'CFM_DMD2_SP', 'CFM_DMD3_SP', 'CFM_SP', 'AP2_SP')
                          AND SP.YEARPWEEK <![CDATA[>=]]> @{pastPlanIdStartWeek} 
                        #if($_parameter.futurePlanIdStartWeek and $_parameter.futurePlanIdStartWeek != "" )
                          AND SP.YEARPWEEK <![CDATA[<]]> @{pastPlanIdEndWeek}
                        #else
                          AND SP.YEARPWEEK <![CDATA[<=]]> @{pastPlanIdEndWeek}
                        #end
                    #end
                    #if($_parameter.pastPlanIdStartWeek and $_parameter.pastPlanIdStartWeek != "" and $_parameter.futurePlanIdStartWeek and $_parameter.futurePlanIdStartWeek != "" )
                        UNION ALL
                    #end
                    #if($_parameter.futurePlanIdStartWeek and $_parameter.futurePlanIdStartWeek != "")
                        SELECT CG.COMPANY_CD
                             , CG.BU_CD
                             , CG.CUST_GROUP_CD
                             , CG.ITEM_CD
                             , SP.YEARPWEEK
                             , NULL AS AP2_DMD1_SP
                             , NULL AS AP2_DMD2_SP
                             , NULL AS AP2_DMD3_SP
                             , NULL AS AP2_SP
                             , NULL AS AP2_DMD1_SP_AMT_KRW
                             , NULL AS AP2_DMD2_SP_AMT_KRW
                             , NULL AS AP2_DMD3_SP_AMT_KRW
                             , NULL AS AP2_SP_AMT_KRW
                             , CASE WHEN SP.MEAS_CD = 'PROD_PLAN_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END PROD_PLAN_QTY
                             , CASE WHEN SP.MEAS_CD = 'CALC_BOH_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END CALC_BOH_QTY
                             , CASE WHEN SP.MEAS_CD = 'AVAIL_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END AVAIL_QTY
                             , CASE WHEN SP.MEAS_CD = 'CALC_EOH_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END CALC_EOH_QTY
                             , CASE WHEN SP.MEAS_CD = 'PROD_1ST_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END PROD_1ST_QTY
                             , CASE WHEN SP.MEAS_CD = 'PROD_2ND_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END PROD_2ND_QTY
                             , CASE WHEN SP.MEAS_CD = 'PROD_3RD_QTY' THEN ISNULL(SP.QTY, 0) ELSE 0 END PROD_3RD_QTY
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD1_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD1_SP
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD2_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD2_SP
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD3_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_DMD3_SP
                             , CASE WHEN SP.MEAS_CD = 'CFM_SP' THEN ISNULL(SP.QTY, 0) ELSE 0 END CFM_SP
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD1_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD1_SP_AMT_KRW
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD2_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD2_SP_AMT_KRW
                             , CASE WHEN SP.MEAS_CD = 'CFM_DMD3_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_DMD3_SP_AMT_KRW
                             , CASE WHEN SP.MEAS_CD = 'CFM_SP' THEN ISNULL(SP.QTY, 0) * SALES_PRICE_KRW_HIDDEN ELSE 0 END CFM_SP_AMT_KRW
                        FROM W_DIM CG
                        #if($_parameter.pastFlag == "Y")
                        INNER JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
                        #elseif($_parameter.pastFlag == "N")
                        INNER JOIN TB_DYN_SALES_PLAN SP WITH(NOLOCK)
                        #end      
                           ON CG.COMPANY_CD = SP.COMPANY_CD
                          AND CG.BU_CD = SP.BU_CD
                          AND CG.ITEM_CD = SP.ITEM_CD
                          AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
                          AND SP.MEAS_CD IN ('CFM_DMD1_SP', 'CFM_DMD2_SP', 'CFM_DMD3_SP', 'CFM_SP', 'CALC_BOH_QTY', 'AVAIL_QTY', 'CALC_EOH_QTY', 'PROD_PLAN_QTY', 'PROD_1ST_QTY', 'PROD_2ND_QTY', 'PROD_3RD_QTY')
                          AND SP.YEARPWEEK <![CDATA[>=]]> @{futurePlanIdStartWeek} 
                          AND SP.YEARPWEEK <![CDATA[<=]]> @{futurePlanIdEndWeek}
                        #if($_parameter.pastFlag == "Y")
                          AND SP.PLAN_ID = @{planIdPast}
                        #end
                    #end
                #end
            ),
            W_PLAN_ORDER AS 
            (
                SELECT COMPANY_CD
                     , BU_CD
                     , ITEM_CD
                     , CUST_GROUP_CD
                     , YEARPWEEK
                     , SUM(AP2_DMD1_SP) AS AP2_DMD1_SP
                     , SUM(AP2_DMD2_SP) AS AP2_DMD2_SP
                     , SUM(AP2_DMD3_SP) AS AP2_DMD3_SP
                     , SUM(AP2_SP) AS AP2_SP
                     , SUM(AP2_DMD1_SP_AMT_KRW) AS AP2_DMD1_SP_AMT_KRW
                     , SUM(AP2_DMD2_SP_AMT_KRW) AS AP2_DMD2_SP_AMT_KRW
                     , SUM(AP2_DMD3_SP_AMT_KRW) AS AP2_DMD3_SP_AMT_KRW
                     , SUM(AP2_SP_AMT_KRW) AS AP2_SP_AMT_KRW
                     , SUM(PROD_PLAN_QTY) AS PROD_PLAN_QTY
                     , SUM(CALC_BOH_QTY) AS CALC_BOH_QTY
                     , SUM(PROD_1ST_QTY) AS PROD_1ST_QTY
                     , SUM(PROD_2ND_QTY) AS PROD_2ND_QTY
                     , SUM(PROD_3RD_QTY) AS PROD_3RD_QTY
                     , SUM(AVAIL_QTY) AS AVAIL_QTY
                     , SUM(CALC_EOH_QTY) AS CALC_EOH_QTY
                     , SUM(CFM_DMD1_SP) AS CFM_DMD1_SP
                     , SUM(CFM_DMD2_SP) AS CFM_DMD2_SP
                     , SUM(CFM_DMD3_SP) AS CFM_DMD3_SP
                     , SUM(CFM_SP) AS CFM_SP
                     , SUM(CFM_DMD1_SP_AMT_KRW) AS CFM_DMD1_SP_AMT_KRW
                     , SUM(CFM_DMD2_SP_AMT_KRW) AS CFM_DMD2_SP_AMT_KRW
                     , SUM(CFM_DMD3_SP_AMT_KRW) AS CFM_DMD3_SP_AMT_KRW
                     , SUM(CFM_SP_AMT_KRW) AS CFM_SP_AMT_KRW
                FROM 
                (
                    SELECT * 
                    FROM W_PLAN
                    UNION ALL
                    SELECT * 
                    FROM W_CFM_PLAN
                ) TM
                GROUP BY COMPANY_CD, BU_CD, ITEM_CD, CUST_GROUP_CD, YEARPWEEK
            ),
            W_DIM_ROW AS 
            (
                SELECT CG.*
                     , CAST(PO.YEARPWEEK AS VARCHAR) AS YEARPWEEK
                     , PO.AP2_DMD1_SP
                     , PO.AP2_DMD2_SP
                     , PO.AP2_DMD3_SP
                     , PO.AP2_SP
                     , PO.AP2_DMD1_SP_AMT_KRW
                     , PO.AP2_DMD2_SP_AMT_KRW
                     , PO.AP2_DMD3_SP_AMT_KRW
                     , PO.AP2_SP_AMT_KRW
                     , PO.PROD_PLAN_QTY
                     , PO.CALC_BOH_QTY
                     , PO.AVAIL_QTY
                     , PO.CALC_EOH_QTY
                     , PO.PROD_1ST_QTY
                     , PO.PROD_2ND_QTY
                     , PO.PROD_3RD_QTY
                     , PO.CFM_DMD1_SP
                     , PO.CFM_DMD2_SP
                     , PO.CFM_DMD3_SP
                     , PO.CFM_SP
                     , PO.CFM_DMD1_SP_AMT_KRW
                     , PO.CFM_DMD2_SP_AMT_KRW
                     , PO.CFM_DMD3_SP_AMT_KRW
                     , PO.CFM_SP_AMT_KRW
                     , CASE WHEN ISNULL(PO.AP2_SP, 0) - ISNULL(PO.AVAIL_QTY, 0) <![CDATA[<]]> 0 THEN 0
                            ELSE ISNULL(PO.AP2_SP, 0) - ISNULL(PO.AVAIL_QTY, 0) 
                        END PROD_NO_REFLECTION
                FROM
                (
                    SELECT DIM.*
                    FROM W_DIM DIM
                    LEFT OUTER JOIN W_CFM_PLAN_HIDDEN SP
                      ON DIM.COMPANY_CD = SP.COMPANY_CD
                     AND DIM.BU_CD = SP.BU_CD
                     AND DIM.ITEM_CD = SP.ITEM_CD
                     AND DIM.CUST_GROUP_CD = SP.CUST_GROUP_CD
                    WHERE 1 = 1
                    #if($_parameter.dataAddSales == "INV_WIP")
                      AND SP.SP_HIDDEN <![CDATA[<]]> DIM.INV_WIP_QTY
                    #end 
                    #if($_parameter.soDataCheck == "OPEN_SO_SP")
                      AND EXISTS (
                                    SELECT * 
                                    FROM W_CFM_PLAN_HIDDEN SP
                                    WHERE DIM.COMPANY_CD = SP.COMPANY_CD
                                      AND DIM.BU_CD = SP.BU_CD
                                      AND DIM.ITEM_CD = SP.ITEM_CD
                                      AND DIM.CUST_GROUP_CD = SP.CUST_GROUP_CD
                                      AND DIM.SO_QTY_HIDDEN <![CDATA[<]]> SP.SP_HIDDEN
                                 )
                    #end
                    #if($_parameter.soDataCheck == "OPEN_SO_SP2")
                      AND EXISTS (
                                    SELECT * 
                                    FROM W_CFM_PLAN_HIDDEN SP
                                    WHERE DIM.COMPANY_CD = SP.COMPANY_CD
                                      AND DIM.BU_CD = SP.BU_CD
                                      AND DIM.ITEM_CD = SP.ITEM_CD
                                      AND DIM.CUST_GROUP_CD = SP.CUST_GROUP_CD
                                      AND DIM.SO_QTY_HIDDEN <![CDATA[>]]> SP.SP_HIDDEN
                                 )
                    #end
                    #if($_parameter.soDataCheck == "OPEN_SO_INV_WIP")
                      AND CONVERT(NUMERIC(21,4), DIM.SO_QTY_HIDDEN) <![CDATA[>]]> DIM.INV_WIP_QTY
                    #end
                ) CG
                LEFT OUTER JOIN W_PLAN_ORDER PO
                  ON CG.COMPANY_CD = PO.COMPANY_CD
                 AND CG.BU_CD = PO.BU_CD
                 AND CG.ITEM_CD = PO.ITEM_CD
                 AND CG.CUST_GROUP_CD = PO.CUST_GROUP_CD
            ),
            W_ROW AS 
            (
                SELECT NULL AS COL_TMP
                    #foreach( $dimMap in $_parameter.dimList )
                     , $dimMap.DIM_CD 
                     , $dimMap.DIM_CD AS ${dimMap.DIM_CD}_NM 
                    #end
                    #foreach( $hiddenMap in $_parameter.hiddenList )
                        #if($hiddenMap.CD.indexOf("MY_SELECT_ITEM") != -1) 
                        #elseif($hiddenMap.CD.indexOf("PW") == -1)
                         , $hiddenMap.CD
                        #end
                    #end
                     , YEARPWEEK
                     , AP2_DMD1_SP
                     , AP2_DMD2_SP
                     , AP2_DMD3_SP
                     , AP2_SP
                     , AP2_DMD1_SP_AMT_KRW
                     , AP2_DMD2_SP_AMT_KRW
                     , AP2_DMD3_SP_AMT_KRW
                     , AP2_SP_AMT_KRW
                     , PROD_PLAN_QTY
                     , CALC_BOH_QTY
                     , AVAIL_QTY
                     , CALC_EOH_QTY
                     , PROD_1ST_QTY
                     , PROD_2ND_QTY
                     , PROD_3RD_QTY
                     , CFM_DMD1_SP
                     , CFM_DMD2_SP
                     , CFM_DMD3_SP
                     , CFM_SP
                     , CFM_DMD1_SP_AMT_KRW
                     , CFM_DMD2_SP_AMT_KRW
                     , CFM_DMD3_SP_AMT_KRW
                     , CFM_SP_AMT_KRW
                     , PROD_NO_REFLECTION
                FROM W_DIM_ROW
            ),
            W_MAIN AS 
            (
                SELECT NULL AS TMP_COL 
                    #foreach( $dimMap in $_parameter.dimList )
                     , $dimMap.DIM_CD 
                     , MAX(${dimMap.DIM_CD}_NM) AS ${dimMap.DIM_CD}_NM
                    #end
                    #foreach( $hiddenMap in $_parameter.hiddenList )
                        #if($hiddenMap.CD.indexOf("MY_SELECT_ITEM") != -1) 
                        #elseif($hiddenMap.CD.indexOf("PW") == -1 and $hiddenMap.CD.indexOf("CFM") == -1)
                        , MAX($hiddenMap.CD) AS $hiddenMap.CD
                        #end
                    #end
                    <include refid="include.getGrpLvlId"/>
                    #foreach($bucketMap in $_parameter.bucketList)
                    #set($paramWeek = "$bucketMap.BUCKET_VAL")
                        #if($_parameter.excelFlag == "Y")
                            #if($bucketMap.CD.indexOf("_CFM_DMD1_SP") > -1)
                                , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD1_SP END) AS $bucketMap.CD
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP") > -1)
                                , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD2_SP END) AS $bucketMap.CD
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP") > -1)
                                , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD3_SP END) AS $bucketMap.CD
                            #elseif($bucketMap.CD.indexOf("_CFM_SP") > -1)
                                , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_SP END) AS $bucketMap.CD
                            #end
                        #else
                            #if($bucketMap.ROOT_CD.indexOf("MT_") == -1)
                                #if($bucketMap.CD.indexOf("_CFM_DMD1_SP_HD") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD1_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP_HD") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD2_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP_HD") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD3_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_SP_HD") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_SP END) AS $bucketMap.CD
                                    , CASE WHEN ISNULL(SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_SP END), 0)
                                              = ISNULL(SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_SP END), 0)
                                           THEN 'Y'
                                           ELSE 'N'
                                       END ${bucketMap.CD}_SUB
                                #elseif($bucketMap.CD.indexOf("_AP2_SP_HD") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_DMD1_SP_AMT_KRW") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD1_SP_AMT_KRW END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP_AMT_KRW") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD2_SP_AMT_KRW END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP_AMT_KRW") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD3_SP_AMT_KRW END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_SP_AMT_KRW") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_SP_AMT_KRW END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_DMD1_SP") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD1_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD2_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_DMD3_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CFM_SP") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CFM_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AP2_DMD1_SP_AMT_KRW") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_DMD1_SP_AMT_KRW END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AP2_DMD2_SP_AMT_KRW") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_DMD2_SP_AMT_KRW END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AP2_DMD3_SP_AMT_KRW") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_DMD3_SP_AMT_KRW END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AP2_SP_AMT_KRW") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_SP_AMT_KRW END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AP2_DMD1_SP") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_DMD1_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AP2_DMD2_SP") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_DMD2_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AP2_DMD3_SP") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_DMD3_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AP2_SP") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AP2_SP END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_PROD_PLAN_QTY") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN PROD_PLAN_QTY END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CALC_BOH_QTY") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CALC_BOH_QTY END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_AVAIL_QTY") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN AVAIL_QTY END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_CALC_EOH_QTY") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN CALC_EOH_QTY END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_PROD_NO_REFLECTION") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN PROD_NO_REFLECTION END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_PROD_1ST_QTY") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN PROD_1ST_QTY END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_PROD_2ND_QTY") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN PROD_2ND_QTY END) AS $bucketMap.CD
                                #elseif($bucketMap.CD.indexOf("_PROD_3RD_QTY") > -1)
                                    , SUM(CASE WHEN YEARPWEEK = '$paramWeek' THEN PROD_3RD_QTY END) AS $bucketMap.CD
                                #end
                            #end
                        #end
                    #end
                FROM W_ROW A
                GROUP BY ROLLUP (<include refid="include.getCdRollup"/>)
            )
            SELECT NULL AS TMP_COL
                #foreach( $dimMap in $_parameter.dimList )
                 , C.$dimMap.DIM_CD 
                 , C.${dimMap.DIM_CD}_NM
                #end
                #foreach( $hiddenMap in $_parameter.hiddenList )
                    #if($hiddenMap.CD.indexOf("MY_SELECT_ITEM") != -1)
                        #if($_parameter.excelFlag != "Y")
                        , CASE WHEN D.ITEM_CD IS NULL THEN 'N' ELSE 'Y' END $hiddenMap.CD
                        #end
                    #elseif($hiddenMap.CD.indexOf("PW_REMARK_YN") != -1)
                    , C.$hiddenMap.CD
                    #elseif($hiddenMap.CD.indexOf("PW") == -1)
                    , C.$hiddenMap.CD
                    #else
                        #if($_parameter.excelFlag == "Y")
                        , C.$hiddenMap.CD
                        #else
                        , CASE WHEN D.ITEM_CD IS NULL THEN 'N' ELSE C.$hiddenMap.CD END $hiddenMap.CD
                        #end    
                    #end
                #end
                #foreach($bucketMap in $_parameter.bucketList)
                #if($bucketMap.CD.indexOf("PW") == 0)
                 , C.$bucketMap.CD
                #else
                    #if($bucketMap.CD.indexOf("_ADJ_REASON") == -1)
                     , C.$bucketMap.CD
                    #end
                #end
                #end
                 , GRP_LVL_ID
                 , OMIT_FLAG
            FROM
            (
                SELECT NULL AS TMP_COL
                <include refid="include.getDimTotal"/>
                #foreach( $hiddenMap in $_parameter.hiddenList )
                    #if($hiddenMap.CD.indexOf("MY_SELECT_ITEM") != -1)
                    #elseif($hiddenMap.CD.indexOf("PW") == -1)
                    , A.$hiddenMap.CD AS $hiddenMap.CD
                    #elseif($hiddenMap.CD.indexOf("PW_REMARK_YN") != -1)
                    , CASE WHEN GRP_LVL_ID = 0 AND @{pastFlag} = 'N' THEN 'Y' ELSE 'N' END $hiddenMap.CD
                    #else
                    , CASE WHEN GRP_LVL_ID = 0 AND CONFIRM_YN = 'N' THEN B.$hiddenMap.CD ELSE 'N' END $hiddenMap.CD 
                    #end
                #end
                
                #set($strAp2Dmd1Sp = "")
                #set($strAp2Dmd2Sp = "")
                #set($strAp2Dmd3Sp = "")
                
                
                #set($strAp2Sp = "")
                #set($strAp2SpTemp = "")
                
                
                #set($strAp2SpHd = "")
                #set($strAp2Dmd1SpAmtKrw = "")
                #set($strAp2Dmd2SpAmtKrw = "")
                #set($strAp2Dmd3SpAmtKrw = "")
                #set($strAp2SpAmtKrw = "")
                #set($strCfmDmd1Sp = "")
                #set($strCfmDmd2Sp = "")
                #set($strCfmDmd3Sp = "")
                
                
                #set($strCfmSp = "")
                #set($strCfmSpTemp = "")
                
                
                #set($strCfmDmd1SpHd = "")
                #set($strCfmDmd2SpHd = "")
                #set($strCfmDmd3SpHd = "")
                #set($strCfmSpHd = "")
                #set($strCfmDmd1SpAmtKrw = "")
                #set($strCfmDmd2SpAmtKrw = "")
                #set($strCfmDmd3SpAmtKrw = "")
                #set($strCfmSpAmtKrw = "")
                #set($strCalcBohQty = "")
                #set($strCalcEohQty = "")
                #set($strAvailQty = "")
                #set($strProdPlanQty = "")
                #set($strProdNoReflection = "")
                #set($strProd1stQty = "")
                #set($strProd2ndQty = "")
                #set($strProd3rdQty = "")
                
                #foreach($bucketMap in $_parameter.bucketList)
                #set($paramWeek = "$bucketMap.BUCKET_VAL")
                    #if($_parameter.excelFlag == "Y")
                        #if($bucketMap.CD.indexOf("_CFM_DMD1_SP") > -1)
                            , $bucketMap.CD AS $bucketMap.CD
                        #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP") > -1)
                            , $bucketMap.CD AS $bucketMap.CD
                        #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP") > -1)
                            , $bucketMap.CD AS $bucketMap.CD
                        #elseif($bucketMap.CD.indexOf("_CFM_SP") > -1)
                            , $bucketMap.CD AS $bucketMap.CD
                        #end
                    #else
                        #if($bucketMap.ROOT_CD.indexOf("MT_") == -1)
                            #if($bucketMap.CD.indexOf("_ADJ_REASON") > -1)
                            , CASE WHEN GRP_LVL_ID = 0 THEN $bucketMap.CD END $bucketMap.CD
                            #else
                            , $bucketMap.CD AS $bucketMap.CD
                            #end
                            #if($bucketMap.CD.indexOf("_CFM_DMD1_SP_HD") > -1)
                                #set($strCfmDmd1SpHd = $strCfmDmd1SpHd + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP_HD") > -1)
                                #set($strCfmDmd2SpHd = $strCfmDmd2SpHd + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP_HD") > -1)
                                #set($strCfmDmd3SpHd = $strCfmDmd3SpHd + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_SP_HD") > -1)
                                , ${bucketMap.CD}_SUB AS ${bucketMap.CD}_SUB
                                #set($strCfmSpHd = $strCfmSpHd + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_AP2_SP_HD") > -1)
                                #set($strAp2SpHd = $strAp2SpHd + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD1_SP_AMT_KRW") > -1)
                                #set($strCfmDmd1SpAmtKrw = $strCfmDmd1SpAmtKrw + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP_AMT_KRW") > -1)
                                #set($strCfmDmd2SpAmtKrw = $strCfmDmd2SpAmtKrw + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP_AMT_KRW") > -1)
                                #set($strCfmDmd3SpAmtKrw = $strCfmDmd3SpAmtKrw + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_SP_AMT_KRW") > -1)
                                #set($strCfmSpAmtKrw = $strCfmSpAmtKrw + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD1_SP") > -1)
                                #set($strCfmDmd1Sp = $strCfmDmd1Sp + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP") > -1)
                                #set($strCfmDmd2Sp = $strCfmDmd2Sp + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP") > -1)
                                #set($strCfmDmd3Sp = $strCfmDmd3Sp + "," +$bucketMap.CD)
                            
                            #elseif($bucketMap.CD.indexOf("_CFM_SP") > -1)
                                #set($strCfmSp = $strCfmSp + "," +$bucketMap.CD)
                                #set($strCfmSpTemp = $strCfmSpTemp + "," +$bucketMap.CD)
                        
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD1_SP_AMT_KRW") > -1)
                                #set($strAp2Dmd1SpAmtKrw = $strAp2Dmd1SpAmtKrw + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD2_SP_AMT_KRW") > -1)
                                #set($strAp2Dmd2SpAmtKrw = $strAp2Dmd2SpAmtKrw + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD3_SP_AMT_KRW") > -1)
                                #set($strAp2Dmd3SpAmtKrw = $strAp2Dmd3SpAmtKrw + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_AP2_SP_AMT_KRW") > -1)
                                #set($strAp2SpAmtKrw = $strAp2SpAmtKrw + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD1_SP") > -1)
                                #set($strAp2Dmd1Sp = $strAp2Dmd1Sp + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD2_SP") > -1)
                                #set($strAp2Dmd2Sp = $strAp2Dmd2Sp + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD3_SP") > -1)
                                #set($strAp2Dmd3Sp = $strAp2Dmd3Sp + "," +$bucketMap.CD)
                            
                            #elseif($bucketMap.CD.indexOf("_AP2_SP") > -1)
                                #set($strAp2Sp = $strAp2Sp + "," +$bucketMap.CD)
                                #set($strAp2SpTemp = $strAp2SpTemp + "," +$bucketMap.CD)
                            
                            #elseif($bucketMap.CD.indexOf("_PROD_PLAN_QTY") > -1)
                                #set($strProdPlanQty = $strProdPlanQty + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CALC_BOH_QTY") > -1)
                                #set($strCalcBohQty = $strCalcBohQty + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_AVAIL_QTY") > -1)
                                #set($strAvailQty = $strAvailQty + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_CALC_EOH_QTY") > -1)
                                #set($strCalcEohQty = $strCalcEohQty + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_PROD_NO_REFLECTION") > -1)
                                #set($strProdNoReflection = $strProdNoReflection + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_PROD_1ST_QTY") > -1)
                                #set($strProd1stQty = $strProd1stQty + "," +$bucketMap.CD)  
                            #elseif($bucketMap.CD.indexOf("_PROD_2ND_QTY") > -1)
                                #set($strProd2ndQty = $strProd2ndQty + "," +$bucketMap.CD)
                            #elseif($bucketMap.CD.indexOf("_PROD_3RD_QTY") > -1)
                                #set($strProd3rdQty = $strProd3rdQty + "," +$bucketMap.CD)                              
                            #end
                        #else
                            #if($bucketMap.CD.indexOf("_CFM_DMD1_SP_HD") > -1)
                                , ISNULL($strCfmDmd1SpHd.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd1SpHd = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP_HD") > -1)
                                , ISNULL($strCfmDmd2SpHd.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd2SpHd = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP_HD") > -1)
                                , ISNULL($strCfmDmd3SpHd.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd3SpHd = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_SP_HD") > -1)
                                , ISNULL($strCfmSpHd.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmSpHd = "")
                            #elseif($bucketMap.CD.indexOf("_AP2_SP_HD") > -1)
                                , ISNULL($strAp2SpHd.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2SpHd = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD1_SP_AMT_KRW") > -1)
                                , ISNULL($strCfmDmd1SpAmtKrw.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd1SpAmtKrw = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP_AMT_KRW") > -1)
                                , ISNULL($strCfmDmd2SpAmtKrw.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd2SpAmtKrw = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP_AMT_KRW") > -1)
                                , ISNULL($strCfmDmd3SpAmtKrw.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd3SpAmtKrw = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_SP_AMT_KRW") > -1)
                                , ISNULL($strCfmSpAmtKrw.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmSpAmtKrw = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD1_SP") > -1)
                                , ISNULL($strCfmDmd1Sp.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd1Sp = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD2_SP") > -1)
                                , ISNULL($strCfmDmd2Sp.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd2Sp = "")
                            #elseif($bucketMap.CD.indexOf("_CFM_DMD3_SP") > -1)
                                , ISNULL($strCfmDmd3Sp.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmDmd3Sp = "")
                            
                            #elseif($bucketMap.CD.indexOf("_CFM_SP") > -1)
                                , ISNULL($strCfmSp.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCfmSp = "")
                                
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD1_SP_AMT_KRW") > -1)
                                , ISNULL($strAp2Dmd1SpAmtKrw.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2Dmd1SpAmtKrw = "")
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD2_SP_AMT_KRW") > -1)
                                , ISNULL($strAp2Dmd2SpAmtKrw.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2Dmd2SpAmtKrw = "")
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD3_SP_AMT_KRW") > -1)
                                , ISNULL($strAp2Dmd3SpAmtKrw.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2Dmd3SpAmtKrw = "")
                            #elseif($bucketMap.CD.indexOf("_AP2_SP_AMT_KRW") > -1)
                                , ISNULL($strAp2SpAmtKrw.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2SpAmtKrw = "")
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD1_SP") > -1)
                                , ISNULL($strAp2Dmd1Sp.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2Dmd1Sp = "")
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD2_SP") > -1)
                                , ISNULL($strAp2Dmd2Sp.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2Dmd2Sp = "")
                            #elseif($bucketMap.CD.indexOf("_AP2_DMD3_SP") > -1)
                                , ISNULL($strAp2Dmd3Sp.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2Dmd3Sp = "")
                            
                            #elseif($bucketMap.CD.indexOf("_AP2_SP") > -1)
                                , ISNULL($strAp2Sp.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAp2Sp = "")
                                
                            #elseif($bucketMap.CD.indexOf("_PROD_PLAN_QTY") > -1)
                                , ISNULL($strProdPlanQty.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strProdPlanQty = "") 
                            #elseif($bucketMap.CD.indexOf("_CALC_BOH_QTY") > -1)
                                , ISNULL($strCalcBohQty.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCalcBohQty = "") 
                            #elseif($bucketMap.CD.indexOf("_AVAIL_QTY") > -1)
                                , ISNULL($strAvailQty.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strAvailQty = "") 
                            #elseif($bucketMap.CD.indexOf("_CALC_EOH_QTY") > -1)
                                , ISNULL($strCalcEohQty.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strCalcEohQty = "") 
                            #elseif($bucketMap.CD.indexOf("_PROD_NO_REFLECTION") > -1)
                                , CASE WHEN  (ISNULL($strAp2SpTemp.substring(1).replace(",",",0)+ISNULL("),0)) - (ISNULL($strCfmSpTemp.substring(1).replace(",",",0)+ISNULL("),0))  <![CDATA[<]]> 0 THEN 0
                                  ELSE  (ISNULL($strAp2SpTemp.substring(1).replace(",",",0)+ISNULL("),0)) - (ISNULL($strCfmSpTemp.substring(1).replace(",",",0)+ISNULL("),0))
                                END AS $bucketMap.CD
                                
                                 
                            
                            #elseif($bucketMap.CD.indexOf("_PROD_1ST_QTY") > -1)
                                , ISNULL($strProd1stQty.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strProd1stQty = "")
                            #elseif($bucketMap.CD.indexOf("_PROD_2ND_QTY") > -1)
                                , ISNULL($strProd2ndQty.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strProd2ndQty = "")
                            #elseif($bucketMap.CD.indexOf("_PROD_3RD_QTY") > -1)
                                , ISNULL($strProd3rdQty.substring(1).replace(",",",0)+ISNULL("),0) AS $bucketMap.CD
                                #set($strProd3rdQty = "")
                            #end    
                        #end
                    #end
                #end
                     , GRP_LVL_ID
                     , 0.0
                #foreach( $bucketMap in $_parameter.bucketList )
                    #if($bucketMap.ROOT_CD.indexOf("MT_") == -1 and $bucketMap.CD.indexOf("_SP_HD") == -1 and $bucketMap.CD.indexOf("_ADJ_REASON") == -1)
                    + ISNULL(ABS($bucketMap.CD), 0)
                    #end
                #end AS OMIT_FLAG
                
                , 0.0
                #foreach( $bucketMap in $_parameter.bucketList )
                    #if($bucketMap.ROOT_CD.indexOf("MT_") == -1 and $bucketMap.CD.indexOf("_AMT_KRW") == -1 and $bucketMap.CD.indexOf("_CFM_SP_HD") > -1)
                    + CASE WHEN ${bucketMap.CD}_SUB = 'Y' THEN 0 
                           ELSE 1 
                       END 
                    #end
                #end AS CMF_SP_AP2_SP_FLAG 
                FROM W_MAIN A
                #if($_parameter.authorityFlag == "Y")
                LEFT OUTER JOIN W_OPEN_CONFIRM B
                  ON A.PROD_LVL2_CD = B.PROD_LVL2_CD
                 AND A.CUST_LVL2_CD_HIDDEN = B.CUST_LVL2_CD_OPEN
                #end
            ) C
            #if($_parameter.excelFlag != "Y")
            LEFT OUTER JOIN W_MY_SELECT_ITEM D
              ON C.CUST_GROUP_CD = D.CUST_GROUP_CD
             AND C.ITEM_CD = D.ITEM_CD
            #end
            WHERE 1 = 1
            #if($_parameter.dataCheck == "CFM_AP2_DIFF")
              AND C.CMF_SP_AP2_SP_FLAG <![CDATA[>]]> 0 
            #end 
            ORDER BY TMP_COL
            #foreach( $dimMap in $_parameter.dimList )
                   , C.$dimMap.DIM_CD 
            #end
        END;
    </select>
    
    <!-- <select id="salesPlanListCfmSummarySelect" parameterType="map" resultType="map">
        /****** [ dp.planSalesCfm.salesPlanListCfmSummarySelect ] ******/
        WITH W_MAIN AS
        (
            /*AP2 DMD 1 출하계획   AP2 DMD 2 출하계획   AP2 DMD 3 출하계획   AP2 출하계획 수량   AP2금액   확정 DMD 1 출하계획   확정 DMD 2 출하계획   확정 DMD 3 출하계획   확정 출하계획 수량   확정 출하계획 금액 */
            SELECT COMPANY_CD
                 , BU_CD
                 , ITEM_CD
                 , CUST_GROUP_CD
                 , MEAS_CD
                 , YEARWEEK
                 , QTY
                 , AMT
            FROM TB_HIS_SALES_PLAN WITH(NOLOCK)
            WHERE PLAN_ID = @{planId}
              AND COMPANY_CD = @{GV_COMPANY_CD}
              AND BU_CD = @{GV_BU_CD}
              AND MEAS_CD IN ('AP2_DMD1_SP', 'AP2_DMD2_SP', 'AP2_DMD3_SP', 'AP2_SP', 'CFM_DMD1_SP', 'CFM_DMD2_SP', 'CFM_DMD3_SP', 'CFM_SP')
              AND YEARWEEK IN (@{planStartWeek_1}, @{planStartWeek_2})
            UNION ALL
             
            /*생산 계획 수량   생산금액*/
            SELECT A1.COMPANY_CD
                 , A1.BU_CD
                 , A1.ITEM_CD
                 , A4.CUST_GROUP_CD
                 , 'PROD_PLAN' AS MEAS_CD
                 , A2.YEARWEEK
                 , SUM(A1.QTY) AS QTY
                 , SUM(A1.AMT) AS AMT
            FROM TB_HIS_APS_PROD_PLAN_WEEKLY A1 WITH(NOLOCK)
            INNER JOIN TB_MST_CALENDAR A2 WITH(NOLOCK)
               ON A1.YYYYMMDD = A2.YYYYMMDD
            INNER JOIN TB_MST_ITEM A3 WITH(NOLOCK)
               ON A1.COMPANY_CD = A3.COMPANY_CD
              AND A1.BU_CD = A3.BU_CD
              AND A1.ITEM_CD = A3.ITEM_CD
            INNER JOIN TB_MST_CUSTOMER A4 WITH(NOLOCK)
               ON A3.COMPANY_CD = A4.COMPANY_CD
              AND A3.BU_CD = A4.BU_CD
              AND A3.REP_CUST_CD = A4.CUST_CD
            WHERE A1.PLAN_ID = 
            (
                SELECT PLAN_ID
                FROM TB_MST_PLAN_VERSION WITH(NOLOCK)
                WHERE COMPANY_CD = @{GV_COMPANY_CD}
                  AND BU_CD = @{GV_BU_CD}
                  AND PLAN_TYPE_CD = 'MP'
                  AND APS_START_WEEK = @{planStartWeek}
            )
              AND A2.YEARWEEK IN (@{planStartWeek_1}, @{planStartWeek_2})
            GROUP BY A1.COMPANY_CD, A1.BU_CD, A1.ITEM_CD, A2.YEARWEEK, A4.CUST_GROUP_CD
            UNION ALL
              
            /*주초재고 수량*/ 
            SELECT A1.COMPANY_CD
                 , A1.BU_CD
                 , A1.ITEM_CD
                 , A4.CUST_GROUP_CD
                 , 'INV' AS MEAS_CD
                 , @{planStartWeek_1} AS YEARWEEK
                 , SUM(A1.INV_QTY) AS INV_QTY
                 , SUM(A1.INV_AMT_KRW) AS INV_AMT_KRW
            FROM UV_DYN_INVENTORY A1 WITH(NOLOCK)
            INNER JOIN TB_MST_ITEM A3 WITH(NOLOCK)
               ON A1.COMPANY_CD = A3.COMPANY_CD
              AND A1.BU_CD = A3.BU_CD
              AND A1.ITEM_CD = A3.ITEM_CD
            INNER JOIN TB_MST_CUSTOMER A4 WITH(NOLOCK)
               ON A3.COMPANY_CD = A4.COMPANY_CD
              AND A3.BU_CD = A4.BU_CD
              AND A3.REP_CUST_CD = A4.CUST_CD
            WHERE A1.COMPANY_CD = @{GV_COMPANY_CD}
              AND A1.BU_CD = @{GV_BU_CD}
              AND A1.PLANT_CD = 'WF01'
              AND A1.INV_DATE = @{planStartWeekMonday}
            GROUP BY A1.COMPANY_CD, A1.BU_CD, A1.ITEM_CD, A4.CUST_GROUP_CD
        )
        SELECT CUST_GROUP_CD
             , CASE WHEN CUST_GROUP_NM IS NULL THEN 'Total' ELSE CUST_GROUP_NM END AS CUST_GROUP_NM
             , SUM(AP2_DMD1_SP) AS AP2_DMD1_SP
             , SUM(AP2_DMD2_SP) AS AP2_DMD2_SP
             , SUM(AP2_DMD3_SP) AS AP2_DMD3_SP
             , SUM(AP2_SP) AS AP2_SP
             , SUM(AP2_SP_AMT_KRW) AS AP2_SP_AMT_KRW
             , SUM(CFM_DMD1_SP) AS CFM_DMD1_SP
             , SUM(CFM_DMD2_SP) AS CFM_DMD2_SP
             , SUM(CFM_DMD3_SP) AS CFM_DMD3_SP
             , SUM(AVAIL_QTY) AS  AVAIL_QTY
             , SUM(AVAIL_AMT_KRW) AS AVAIL_AMT_KRW 
             , SUM(CFM_SP) AS CFM_SP
             , SUM(CFM_SP_AMT_KRW) AS CFM_SP_AMT_KRW
             , SUM(WEEK_INV_QTY) AS WEEK_INV_QTY
             , SUM(WEEK_INV_AMT_KRW) AS WEEK_INV_AMT_KRW
             , SUM(PROD_PLAN_QTY) AS PROD_PLAN_QTY
             , SUM(PROD_PLAN_AMT_KRW) AS PROD_PLAN_AMT_KRW     
             , SUM(INV_SALES_QTY) AS INV_SALES_QTY
             , SUM(INV_SALES_AMT_KRW) AS INV_SALES_AMT_KRW
             , SUM(PROD_AVAIL_QTY) AS PROD_AVAIL_QTY
             , SUM(PROD_AVAIL_AMT_KRW) AS PROD_AVAIL_AMT_KRW
             , SUM(PRE_PROD_QTY) AS PRE_PROD_QTY
             , SUM(PRE_PROD_AMT_KRW) AS PRE_PROD_AMT_KRW           
             , SUM(ADD_CFM_AVAIL_QTY) AS ADD_CFM_AVAIL_QTY
             , SUM(ADD_CFM_AVAIL_AMT_KRW) AS ADD_CFM_AVAIL_AMT_KRW
             , SUM(PROD_NO_REF_QTY) AS PROD_NO_REF_QTY
             , SUM(PROD_NO_REF_AMT_KRW) AS PROD_NO_REF_AMT_KRW
             , SUM(PROD_NEED_QTY) AS PROD_NEED_QTY
             , SUM(PROD_NEED_AMT_KRW) AS PROD_NEED_AMT_KRW
             , SUM(AP2_DMD1_SP_2) AS AP2_DMD1_SP_2
             , SUM(AP2_DMD2_SP_2) AS AP2_DMD2_SP_2
             , SUM(AP2_DMD3_SP_2) AS AP2_DMD3_SP_2
             , SUM(AP2_SP_2) AS AP2_SP_2
             , SUM(AP2_SP_AMT_KRW_2) AS AP2_SP_AMT_KRW_2
             , SUM(CFM_DMD1_SP_2) AS CFM_DMD1_SP_2
             , SUM(CFM_DMD2_SP_2) AS CFM_DMD2_SP_2
             , SUM(CFM_DMD3_SP_2) AS CFM_DMD3_SP_2
             , SUM(AVAIL_QTY_2) AS  AVAIL_QTY_2
             , SUM(AVAIL_AMT_KRW_2) AS AVAIL_AMT_KRW_2 
             , SUM(CFM_SP_2) AS CFM_SP_2
             , SUM(CFM_SP_AMT_KRW_2) AS CFM_SP_AMT_KRW_2
             , SUM(WEEK_INV_QTY_2) AS WEEK_INV_QTY_2
             , SUM(WEEK_INV_AMT_KRW_2) AS WEEK_INV_AMT_KRW_2
             , SUM(PROD_PLAN_QTY_2) AS PROD_PLAN_QTY_2
             , SUM(PROD_PLAN_AMT_KRW_2) AS PROD_PLAN_AMT_KRW_2     
             , SUM(INV_SALES_QTY_2) AS INV_SALES_QTY_2
             , SUM(INV_SALES_AMT_KRW_2) AS INV_SALES_AMT_KRW_2
             , SUM(PROD_AVAIL_QTY_2) AS PROD_AVAIL_QTY_2
             , SUM(PROD_AVAIL_AMT_KRW_2) AS PROD_AVAIL_AMT_KRW_2
             , SUM(PRE_PROD_QTY_2) AS PRE_PROD_QTY_2
             , SUM(PRE_PROD_AMT_KRW_2) AS PRE_PROD_AMT_KRW_2           
             , SUM(ADD_CFM_AVAIL_QTY_2) AS ADD_CFM_AVAIL_QTY_2
             , SUM(ADD_CFM_AVAIL_AMT_KRW_2) AS ADD_CFM_AVAIL_AMT_KRW_2
             , SUM(PROD_NO_REF_QTY_2) AS PROD_NO_REF_QTY_2
             , SUM(PROD_NO_REF_AMT_KRW_2) AS PROD_NO_REF_AMT_KRW_2
             , SUM(PROD_NEED_QTY_2) AS PROD_NEED_QTY_2
             , SUM(PROD_NEED_AMT_KRW_2) AS PROD_NEED_AMT_KRW_2
        FROM
        (
            SELECT F1.*
                 , ISNULL(F2.CUST_GROUP_NM, ' ') AS CUST_GROUP_NM
                 , CASE WHEN ISNULL(PROD_NEED_QTY_2, 0) <![CDATA[>]]> ISNULL(PROD_PLAN_QTY_2, 0)
                        THEN ISNULL(PROD_PLAN_QTY_2, 0)
                        ELSE ISNULL(PROD_NEED_QTY_2, 0)
                    END PROD_AVAIL_QTY_2 /*생산가능수량2*/
                 , CASE WHEN ISNULL(PROD_NEED_AMT_KRW_2, 0) <![CDATA[>]]> ISNULL(PROD_PLAN_AMT_KRW_2, 0)
                        THEN ISNULL(PROD_PLAN_AMT_KRW_2, 0)
                        ELSE ISNULL(PROD_NEED_AMT_KRW_2, 0)
                    END PROD_AVAIL_AMT_KRW_2 /*생산가능금액2*/
                 , CASE WHEN ISNULL(PROD_PLAN_QTY_2, 0) - ISNULL(PROD_NEED_QTY_2, 0) <![CDATA[>]]> 0
                        THEN ISNULL(PROD_PLAN_QTY_2, 0) - ISNULL(PROD_NEED_QTY_2, 0)
                        ELSE 0
                    END PRE_PROD_QTY_2 /**선행생산수량2*/
                 , CASE WHEN ISNULL(PROD_PLAN_QTY_2, 0) - ISNULL(PROD_NEED_QTY_2, 0) <![CDATA[>]]> 0
                        THEN ISNULL(PROD_PLAN_QTY_2, 0) - ISNULL(PROD_NEED_QTY_2, 0)
                        ELSE 0
                    END PRE_PROD_AMT_KRW_2 /**선행생산수량2*/
                 , CASE WHEN ISNULL(AVAIL_QTY_2, 0) - ISNULL(CFM_SP_2, 0) <![CDATA[>]]> 0
                        THEN ISNULL(AVAIL_QTY_2, 0) - ISNULL(CFM_SP_2, 0)
                        ELSE 0
                    END ADD_CFM_AVAIL_QTY_2 /*추가출하확정가능수량2*/
                 , CASE WHEN ISNULL(AVAIL_AMT_KRW_2, 0) - ISNULL(CFM_SP_AMT_KRW_2, 0) <![CDATA[>]]> 0
                        THEN ISNULL(AVAIL_AMT_KRW_2, 0) - ISNULL(CFM_SP_AMT_KRW_2, 0)
                        ELSE 0
                    END ADD_CFM_AVAIL_AMT_KRW_2 /*추가출하확정가능금액2*/
                 , CASE WHEN ISNULL(PROD_NEED_QTY_2, 0) - ISNULL(PROD_PLAN_QTY_2, 0) <![CDATA[>]]> 0
                        THEN ISNULL(PROD_NEED_QTY_2, 0) - ISNULL(PROD_PLAN_QTY_2, 0)
                        ELSE 0
                    END PROD_NO_REF_QTY_2  /*생산미반영수량2*/
                 , CASE WHEN ISNULL(PROD_NEED_AMT_KRW_2, 0) - ISNULL(PROD_PLAN_AMT_KRW_2, 0) <![CDATA[>]]> 0
                        THEN ISNULL(PROD_NEED_AMT_KRW_2, 0) - ISNULL(PROD_PLAN_AMT_KRW_2, 0)
                        ELSE 0
                    END PROD_NO_REF_AMT_KRW_2  /*생산미반영금액2*/
            FROM
            (
                SELECT E.*
                     , CASE WHEN ISNULL(PROD_NEED_QTY, 0) <![CDATA[>]]> ISNULL(PROD_PLAN_QTY, 0)
                            THEN ISNULL(PROD_PLAN_QTY, 0)
                            ELSE ISNULL(PROD_NEED_QTY, 0)
                        END PROD_AVAIL_QTY /*생산가능수량*/
                     , CASE WHEN ISNULL(PROD_NEED_AMT_KRW, 0) <![CDATA[>]]> ISNULL(PROD_PLAN_AMT_KRW, 0)
                            THEN ISNULL(PROD_PLAN_AMT_KRW, 0)
                            ELSE ISNULL(PROD_NEED_AMT_KRW, 0)
                        END PROD_AVAIL_AMT_KRW /*생산가능금액*/
                     , CASE WHEN ISNULL(PROD_PLAN_QTY, 0) - ISNULL(PROD_NEED_QTY, 0) <![CDATA[>]]> 0
                            THEN ISNULL(PROD_PLAN_QTY, 0) - ISNULL(PROD_NEED_QTY, 0)
                            ELSE 0
                        END PRE_PROD_QTY /**선행생산수량*/
                     , CASE WHEN ISNULL(PROD_PLAN_QTY, 0) - ISNULL(PROD_NEED_QTY, 0) <![CDATA[>]]> 0
                            THEN ISNULL(PROD_PLAN_QTY, 0) - ISNULL(PROD_NEED_QTY, 0)
                            ELSE 0
                        END PRE_PROD_AMT_KRW /**선행생산수량*/
                     , CASE WHEN ISNULL(AVAIL_QTY, 0) - ISNULL(CFM_SP, 0) <![CDATA[>]]> 0
                            THEN ISNULL(AVAIL_QTY, 0) - ISNULL(CFM_SP, 0)
                            ELSE 0
                        END ADD_CFM_AVAIL_QTY /*추가출하확정가능수량*/
                     , CASE WHEN ISNULL(AVAIL_AMT_KRW, 0) - ISNULL(CFM_SP_AMT_KRW, 0) <![CDATA[>]]> 0
                            THEN ISNULL(AVAIL_AMT_KRW, 0) - ISNULL(CFM_SP_AMT_KRW, 0)
                            ELSE 0
                        END ADD_CFM_AVAIL_AMT_KRW /*추가출하확정가능금액*/
                     , CASE WHEN ISNULL(PROD_NEED_QTY, 0) - ISNULL(PROD_PLAN_QTY, 0) <![CDATA[>]]> 0 
                            THEN ISNULL(PROD_NEED_QTY, 0) - ISNULL(PROD_PLAN_QTY, 0) 
                            ELSE 0
                        END PROD_NO_REF_QTY  /*생산미반영수량*/
                     , CASE WHEN ISNULL(PROD_NEED_AMT_KRW, 0) - ISNULL(PROD_PLAN_AMT_KRW, 0) <![CDATA[>]]> 0
                            THEN ISNULL(PROD_NEED_AMT_KRW, 0) - ISNULL(PROD_PLAN_AMT_KRW, 0) 
                            ELSE 0
                        END PROD_NO_REF_AMT_KRW  /*생산미반영금액*/
                     , ISNULL(AP2_SP_2, 0) - ISNULL(INV_SALES_QTY_2, 0) AS PROD_NEED_QTY_2  /*생산필요수량2*/
                     , ISNULL(AP2_SP_AMT_KRW_2, 0) - ISNULL(INV_SALES_AMT_KRW_2, 0) AS PROD_NEED_AMT_KRW_2 /*생산필요금액2*/
                FROM
                (
                    SELECT D.*
                         , ISNULL(AP2_SP, 0) - ISNULL(INV_SALES_QTY, 0) AS PROD_NEED_QTY  /*생산필요수량*/
                         , ISNULL(AP2_SP_AMT_KRW, 0) - ISNULL(INV_SALES_AMT_KRW, 0) AS PROD_NEED_AMT_KRW /*생산필요금액*/
                         , CASE WHEN ISNULL(AP2_SP_2, 0) <![CDATA[>]]> ISNULL(WEEK_INV_QTY_2, 0)      
                                THEN ISNULL(WEEK_INV_QTY_2, 0)
                                ELSE ISNULL(AP2_SP_2, 0)
                            END INV_SALES_QTY_2    /*재고판매수량2*/
                         , CASE WHEN ISNULL(AP2_SP_AMT_KRW_2, 0) <![CDATA[>]]> ISNULL(WEEK_INV_AMT_KRW_2, 0)      
                                THEN ISNULL(WEEK_INV_AMT_KRW_2, 0)
                                ELSE ISNULL(AP2_SP_AMT_KRW_2, 0)
                            END INV_SALES_AMT_KRW_2    /*재고판매금액2*/   
                    FROM
                    (
                        SELECT NULL AS TML
                             , ISNULL(C.COMPANY_CD, ' ') AS COMPANY_CD 
                             , ISNULL(C.BU_CD, ' ') AS BU_CD
                             , ISNULL(C.ITEM_CD, ' ') AS ITEM_CD
                             , ISNULL(C.CUST_GROUP_CD, ' ') AS CUST_GROUP_CD
                             , C.AP2_DMD1_SP
                             , C.AP2_DMD2_SP
                             , C.AP2_DMD3_SP
                             , C.AP2_SP
                             , C.AP2_SP_AMT_KRW
                             , C.CFM_DMD1_SP
                             , C.CFM_DMD2_SP
                             , C.CFM_DMD3_SP
                             , ISNULL(C.WEEK_INV_QTY, 0) + ISNULL(C.PROD_PLAN_QTY, 0) AS AVAIL_QTY /*가용 수량*/
                             , ISNULL(C.WEEK_INV_AMT_KRW, 0) + ISNULL(C.PROD_PLAN_AMT_KRW, 0) AS AVAIL_AMT_KRW /*가용 금액*/
                             , C.CFM_SP
                             , C.CFM_SP_AMT_KRW
                             , C.WEEK_INV_QTY /*주초재고수량*/
                             , C.WEEK_INV_AMT_KRW /*주초재고금액*/
                             , C.PROD_PLAN_QTY /*생산계획수량*/
                             , C.PROD_PLAN_AMT_KRW /*생산계획금액*/
                             , CASE WHEN ISNULL(C.AP2_SP, 0) <![CDATA[>]]> ISNULL(C.WEEK_INV_QTY, 0)      
                                    THEN ISNULL(C.WEEK_INV_QTY, 0)
                                    ELSE ISNULL(C.AP2_SP, 0)
                                END INV_SALES_QTY    /*재고판매수량*/
                             , CASE WHEN ISNULL(C.AP2_SP_AMT_KRW, 0) <![CDATA[>]]> ISNULL(C.WEEK_INV_AMT_KRW, 0)      
                                    THEN ISNULL(C.WEEK_INV_AMT_KRW, 0)
                                    ELSE ISNULL(C.AP2_SP_AMT_KRW, 0)
                                END INV_SALES_AMT_KRW    /*재고판매금액*/   
                             , C.AP2_DMD1_SP_2
                             , C.AP2_DMD2_SP_2
                             , C.AP2_DMD3_SP_2
                             , C.AP2_SP_2
                             , C.AP2_SP_AMT_KRW_2
                             , C.CFM_DMD1_SP_2
                             , C.CFM_DMD2_SP_2
                             , C.CFM_DMD3_SP_2
                             , (ISNULL(C.WEEK_INV_QTY, 0) - ISNULL(CFM_SP, 0) + ISNULL(C.PROD_PLAN_QTY, 0)) + ISNULL(C.PROD_PLAN_QTY_2, 0) AS AVAIL_QTY_2 /*가용수량2*/
                             , (ISNULL(C.WEEK_INV_AMT_KRW, 0) - ISNULL(CFM_SP_AMT_KRW, 0) + ISNULL(C.PROD_PLAN_AMT_KRW, 0)) + ISNULL(C.PROD_PLAN_AMT_KRW_2, 0) AS AVAIL_AMT_KRW_2 /*가용금액2*/
                             , C.CFM_SP_2
                             , C.CFM_SP_AMT_KRW_2
                             , ISNULL(C.WEEK_INV_QTY, 0) - ISNULL(CFM_SP, 0) + ISNULL(C.PROD_PLAN_QTY, 0) AS WEEK_INV_QTY_2   /*예상주초재고수량2*/
                             , ISNULL(C.WEEK_INV_AMT_KRW, 0) - ISNULL(CFM_SP_AMT_KRW, 0) + ISNULL(C.PROD_PLAN_AMT_KRW, 0) AS WEEK_INV_AMT_KRW_2   /*예상주초재고금액2*/
                             , C.PROD_PLAN_QTY_2 /*생산계획수량*/
                             , C.PROD_PLAN_AMT_KRW_2 /*생산계획금액*/
                        FROM
                        (
                            SELECT A1.COMPANY_CD
                                 , A1.BU_CD
                                 , A1.ITEM_CD
                                 , A1.CUST_GROUP_CD
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_DMD1_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS AP2_DMD1_SP
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_DMD2_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS AP2_DMD2_SP
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_DMD3_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS AP2_DMD3_SP
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS AP2_SP
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY * SALES_PRICE_KRW ELSE NULL END) AS AP2_SP_AMT_KRW
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_DMD1_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS CFM_DMD1_SP
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_DMD2_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS CFM_DMD2_SP
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_DMD3_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS CFM_DMD3_SP
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS CFM_SP
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_SP' AND YEARWEEK = @{planStartWeek_1} THEN QTY * SALES_PRICE_KRW ELSE NULL END) AS CFM_SP_AMT_KRW
                                 , SUM(CASE WHEN MEAS_CD = 'INV' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS WEEK_INV_QTY
                                 , SUM(CASE WHEN MEAS_CD = 'INV' AND YEARWEEK = @{planStartWeek_1} THEN QTY * SALES_PRICE_KRW ELSE NULL END) AS WEEK_INV_AMT_KRW
                                 , SUM(CASE WHEN MEAS_CD = 'PROD_PLAN' AND YEARWEEK = @{planStartWeek_1} THEN QTY ELSE NULL END) AS PROD_PLAN_QTY
                                 , SUM(CASE WHEN MEAS_CD = 'PROD_PLAN' AND YEARWEEK = @{planStartWeek_1} THEN QTY * SALES_PRICE_KRW ELSE NULL END) AS PROD_PLAN_AMT_KRW
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_DMD1_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS AP2_DMD1_SP_2
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_DMD2_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS AP2_DMD2_SP_2
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_DMD3_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS AP2_DMD3_SP_2
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS AP2_SP_2
                                 , SUM(CASE WHEN MEAS_CD = 'AP2_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY * SALES_PRICE_KRW ELSE NULL END) AS AP2_SP_AMT_KRW_2
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_DMD1_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS CFM_DMD1_SP_2
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_DMD2_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS CFM_DMD2_SP_2
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_DMD3_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS CFM_DMD3_SP_2
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS CFM_SP_2
                                 , SUM(CASE WHEN MEAS_CD = 'CFM_SP' AND YEARWEEK = @{planStartWeek_2} THEN QTY * SALES_PRICE_KRW ELSE NULL END) AS CFM_SP_AMT_KRW_2
                                 , SUM(CASE WHEN MEAS_CD = 'PROD_PLAN' AND YEARWEEK = @{planStartWeek_2} THEN QTY ELSE NULL END) AS PROD_PLAN_QTY_2
                                 , SUM(CASE WHEN MEAS_CD = 'PROD_PLAN' AND YEARWEEK = @{planStartWeek_2} THEN QTY * SALES_PRICE_KRW ELSE NULL END) AS PROD_PLAN_AMT_KRW_2
                            FROM W_MAIN A1
                            LEFT OUTER JOIN TB_MAP_ITEM_CUST_GROUP A2
                              ON A1.COMPANY_CD = A2.COMPANY_CD
                             AND A1.BU_CD = A2.BU_CD
                             AND A1.ITEM_CD = A2.ITEM_CD
                             AND A1.CUST_GROUP_CD = A2.CUST_GROUP_CD
                            GROUP BY A1.COMPANY_CD, A1.BU_CD, A1.ITEM_CD, A1.CUST_GROUP_CD
                        ) C
                    ) D
                ) E
            ) F1
            INNER JOIN TB_MST_CUST_GROUP F2 WITH(NOLOCK)
               ON F1.COMPANY_CD = F2.COMPANY_CD
              AND F1.BU_CD = F2.BU_CD
              AND F1.CUST_GROUP_CD = F2.CUST_GROUP_CD
        ) G
        GROUP BY ROLLUP((G.CUST_GROUP_CD, G.CUST_GROUP_NM))
        ORDER BY G.CUST_GROUP_CD, G.CUST_GROUP_NM
    </select> -->
    
    
</mapper>
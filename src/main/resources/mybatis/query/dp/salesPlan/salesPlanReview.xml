<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dp.salesPlan">

    <select id="salesPlanReviewSelect" parameterType="map" resultType="map">
	    /****** [ dp.salesPlan.salesPlanReviewSelect ] ******/
	    <include refid="include.macros"/>
	    #getProductTree()
	    #getCustomerTree()
	    
	    WITH W_DIM AS 
	    (
	        SELECT CG.COMPANY_CD
	             , CG.BU_CD
	             , CG.CUST_GROUP_CD
	             , IT.ITEM_CD
	             , ISNULL(IT.PROD_LVL2_CD, ' ') AS PROD_LVL2_CD
	             , ISNULL(IT.PROD_LVL2_NM, ' ') AS PROD_LVL2_NM
	             , ISNULL(IT.PROD_LVL3_CD, ' ') AS PROD_LVL3_CD
	             , ISNULL(IT.PROD_LVL3_NM, ' ') AS PROD_LVL3_NM
	             , ISNULL(CM.CUST_LVL2_CD, ' ') AS CUST_LVL2_CD
	             , ISNULL(CM.CUST_LVL2_NM, ' ') AS CUST_LVL2_NM
	             , ISNULL(CM.CUST_NM     , ' ') AS CUST_GROUP_NM
	             , ISNULL(IT.ITEM_NM     , ' ') AS ITEM_NM
			FROM TB_MAP_ITEM_CUST_GROUP CG WITH(NOLOCK)
	        JOIN TB_MST_ITEM IT WITH(NOLOCK)
	          ON CG.COMPANY_CD = IT.COMPANY_CD
	         AND CG.BU_CD      = IT.BU_CD
	         AND CG.ITEM_CD    = IT.ITEM_CD
			#set($treeAlias = "IT")
	        <include refid="include.productTree"/>
	        JOIN TB_MST_CUSTOMER CM WITH(NOLOCK)
	          ON CG.COMPANY_CD    = CM.COMPANY_CD
	         AND CG.BU_CD         = CM.BU_CD
	         AND CG.CUST_GROUP_CD = CM.CUST_CD
			WHERE CG.COMPANY_CD    = @{GV_COMPANY_CD}
	          AND CG.BU_CD         = @{GV_BU_CD}
	          AND IT.ITEM_TYPE     = '10'
	          AND CG.VALID_FLAG = 'Y'
              AND ISNULL(IT.PROD_LVL2_CD, '') <![CDATA[<>]]> ''
			#if($_parameter.customerList and $_parameter.customerList.size() > 0)
	          AND EXISTS (
	             			SELECT 1
	               			FROM TB_MST_CUSTOMER TT
	              			WHERE TT.COMPANY_CD    = CG.COMPANY_CD
	                		  AND TT.BU_CD         = CG.BU_CD
	                		  AND TT.CUST_GROUP_CD = CG.CUST_GROUP_CD
	                		#set($treeAlias = "TT")
	                		<include refid="include.customerTree"/>
	           			 )
			#end
	    ),
	    W_DIM_GROUP AS 
	    (
	        SELECT COMPANY_CD
	             , BU_CD
	             , PROD_LVL2_CD
	             , PROD_LVL2_NM
	             , PROD_LVL3_CD
	             , PROD_LVL3_NM
	             , CUST_LVL2_CD
	             , CUST_LVL2_NM
			FROM W_DIM
	        GROUP BY COMPANY_CD, BU_CD, PROD_LVL2_CD, PROD_LVL2_NM, PROD_LVL3_CD, PROD_LVL3_NM, CUST_LVL2_CD, CUST_LVL2_NM
	    ),
	    W_WEEK_WORKING_DAYS AS 
	    (
	        SELECT *
	             , SUM(WORKING_WEEK) OVER(PARTITION BY YEARMONTH) AS WORKING_MONTH
			FROM 
			(
	        	SELECT YEARMONTH
	                 , YEARPWEEK
	                 , RANK() OVER(PARTITION BY YEARMONTH ORDER BY YEARPWEEK DESC) AS RN
	                 , SUM(CONVERT(NUMERIC(6,1), ISNULL(DAY_OFF_FLAG, '0'))) AS WORKING_WEEK
	            FROM TB_MST_CALENDAR CD WITH(NOLOCK)
	            WHERE YEARMONTH BETWEEN @{fromMon} AND @{toMon}
	            GROUP BY YEARMONTH, YEARPWEEK
			) WW
	    ),
	    W_MEA AS 
	    (
	        SELECT TM.COMPANY_CD
	             , TM.BU_CD
	             , TM.PROD_LVL2_CD
	             , TM.PROD_LVL3_CD
	             , TM.CUST_LVL2_CD
	             , TM.YEARPWEEK
	             , MAX(TM.ALLOC_QTY) AS ALLOC_QTY
	             , SUM(TM.AP2_SP)    AS AP2_SP
	             , MAX(TM.PROD_QTY)  AS PROD_QTY
	             , SUM(TM.INV_BOH)   AS INV_BOH
			FROM 
			(
	            /* ALLOC_QTY */
	            SELECT AQ.COMPANY_CD
	                 , AQ.BU_CD
	                 , AQ.PROD_LVL2_CD
	                 , AQ.PROD_LVL3_CD
	                 , AQ.CUST_LVL2_CD
	                 , AQ.YEARPWEEK
	                 , CASE WHEN AQ.RN != 1 THEN AQ.ALLOC_QTY
	                        ELSE AQ.ALLOC_QTY + AQ.ADJ_CAPA_QTY - SUM(AQ.ALLOC_QTY) OVER(PARTITION BY AQ.COMPANY_CD, AQ.BU_CD, AQ.PROD_LVL2_CD, AQ.PROD_LVL3_CD, AQ.CUST_LVL2_CD, AQ.YEARMONTH)
	                    END AS ALLOC_QTY
	                 , 0 AS AP2_SP
	                 , 0 AS PROD_QTY
	                 , 0 AS INV_BOH
				FROM 
				(
	                SELECT CG.COMPANY_CD
	                     , CG.BU_CD
	                     , CG.PROD_LVL2_CD
	                     , CG.PROD_LVL3_CD
	                     , CG.CUST_LVL2_CD
	                     , WD.YEARMONTH
	                     , WD.YEARPWEEK
	                     , WD.RN
	                     , ISNULL(CS.ADJ_CAPA_QTY, 0) AS ADJ_CAPA_QTY
	                     , ISNULL(ROUND(CS.ADJ_CAPA_QTY * WD.WORKING_WEEK / NULLIF(WD.WORKING_MONTH, 0), 1), 0) AS ALLOC_QTY
					FROM W_DIM_GROUP CG
	                JOIN 
	                (
	                	SELECT A1.COMPANY_CD
				             , A1.BU_CD
				             , A2.ATTB_1_CD AS PROD_LVL2_CD
				             , A1.PROD_LVL3_CD
				             , A1.CUST_LVL2_CD
				             , A1.YEARMONTH
				             , SUM(A1.ADJ_CAPA_QTY) AS ADJ_CAPA_QTY
				        FROM TB_DYN_CAPA_ALLOC_SALES_LATEST A1 WITH(NOLOCK)
				        INNER JOIN TB_MST_CODE A2 WITH(NOLOCK)
				           ON A1.BU_CD = A2.BU_CD
				          AND A1.ROUTING_ID = A2.CODE_CD
				        WHERE A2.GROUP_CD = 'PROD_L2'
				        GROUP BY A1.COMPANY_CD, A1.BU_CD, A2.ATTB_1_CD, A1.PROD_LVL3_CD, A1.CUST_LVL2_CD, A1.YEARMONTH
	                ) CS 
					ON CG.COMPANY_CD    = CS.COMPANY_CD
	                AND CG.BU_CD        = CS.BU_CD
	                AND CG.PROD_LVL3_CD = CS.PROD_LVL3_CD
	                AND CG.CUST_LVL2_CD = CS.CUST_LVL2_CD
	                AND CG.PROD_LVL2_CD = CS.PROD_LVL2_CD
	                AND CS.YEARMONTH <![CDATA[>=]]> @{fromMon}
	                AND CS.YEARMONTH <![CDATA[<=]]> @{toMon}
	                JOIN W_WEEK_WORKING_DAYS WD
	                  ON CS.YEARMONTH = WD.YEARMONTH
				) AQ
	            UNION ALL
	            /* AP2_SP */
	            SELECT CG.COMPANY_CD
	                 , CG.BU_CD
	                 , CG.PROD_LVL2_CD
	                 , CG.PROD_LVL3_CD
	                 , CG.CUST_LVL2_CD
	                 , SP.YEARPWEEK
	                 , 0 AS ALLOC_QTY
	                 , ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'AP2_SP'  THEN SP.QTY ELSE 0 END), 0) AS AP2_SP
	                 , 0 AS PROD_QTY
	                 , CASE WHEN ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'AP2_SP'  THEN SP.QTY ELSE 0 END), 0) <![CDATA[>=]]>
	                             ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'INV_BOH' THEN SP.QTY ELSE 0 END), 0)
	                        THEN ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'INV_BOH' THEN SP.QTY ELSE 0 END), 0)
	                        ELSE ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'AP2_SP'  THEN SP.QTY ELSE 0 END), 0)
	                    END INV_BOH     
				FROM W_DIM CG
	            JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
	              ON CG.COMPANY_CD    = SP.COMPANY_CD
	             AND CG.BU_CD         = SP.BU_CD
	             AND CG.ITEM_CD       = SP.ITEM_CD
	             AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
	             AND SP.MEAS_CD IN ('AP2_SP', 'INV_BOH')
	             AND SP.PLAN_ID = @{planId} 
	             AND SP.YEARPWEEK <![CDATA[>=]]> @{startWeek}
	             AND SP.YEARPWEEK <![CDATA[<=]]> @{endWeek} + 'B' 
	             AND SP.YEARPWEEK <![CDATA[>=]]> (SELECT MIN(YEARPWEEK) FROM TB_MST_CALENDAR WITH(NOLOCK) WHERE YEARMONTH = @{fromMon}) 
	             AND SP.YEARPWEEK <![CDATA[<=]]> (SELECT MAX(YEARPWEEK) FROM TB_MST_CALENDAR WITH(NOLOCK) WHERE YEARMONTH = @{toMon})
				GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.PROD_LVL2_CD, CG.PROD_LVL3_CD, CG.CUST_LVL2_CD, SP.YEARPWEEK
				UNION ALL
	            /* AP2_SP */
	            SELECT CG.COMPANY_CD
	                 , CG.BU_CD
	                 , CG.PROD_LVL2_CD
	                 , CG.PROD_LVL3_CD
	                 , CG.CUST_LVL2_CD
	                 , SP.YEARPWEEK
	                 , 0 AS ALLOC_QTY
	                 , ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'AP2_SP'  THEN SP.QTY ELSE 0 END), 0) AS AP2_SP
	                 , 0 AS PROD_QTY
	                 , CASE WHEN ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'AP2_SP'  THEN SP.QTY ELSE 0 END), 0) <![CDATA[>=]]>
	                             ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'INV_BOH' THEN SP.QTY ELSE 0 END), 0)
	                        THEN ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'INV_BOH' THEN SP.QTY ELSE 0 END), 0)
	                        ELSE ISNULL(SUM(CASE WHEN SP.MEAS_CD = 'AP2_SP'  THEN SP.QTY ELSE 0 END), 0)
	                    END INV_BOH 
				FROM W_DIM CG
	            JOIN TB_KPI_SALES_PLAN SP WITH(NOLOCK)
	              ON CG.COMPANY_CD    = SP.COMPANY_CD
	             AND CG.BU_CD         = SP.BU_CD
	             AND CG.ITEM_CD       = SP.ITEM_CD
	             AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
	             AND SP.MEAS_CD IN ('AP2_SP', 'INV_BOH')
	             AND SP.YEARPWEEK <![CDATA[<]]> @{startWeek} 
	             AND SP.YEARPWEEK <![CDATA[>=]]> (SELECT MIN(YEARPWEEK) FROM TB_MST_CALENDAR WHERE YEARMONTH = @{fromMon}) 
	             AND SP.YEARPWEEK <![CDATA[<=]]> (SELECT MAX(YEARPWEEK) FROM TB_MST_CALENDAR WHERE YEARMONTH = @{toMon}) 
	            GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.PROD_LVL2_CD, CG.PROD_LVL3_CD, CG.CUST_LVL2_CD, SP.YEARPWEEK
			) TM
	        GROUP BY TM.COMPANY_CD, TM.BU_CD, TM.PROD_LVL2_CD, TM.PROD_LVL3_CD, TM.CUST_LVL2_CD, TM.YEARPWEEK
	    ),
		W_PROD_QTY AS 
		(
	        SELECT CG.COMPANY_CD
	             , CG.BU_CD
	             , CG.PROD_LVL2_CD
	             , CG.PROD_LVL3_CD
	             , CG.CUST_LVL2_CD
	             , DC.YEARPWEEK
	             , 0                      AS ALLOC_QTY
	             , 0                      AS AP2_SP
	             , ISNULL(SUM(PR.QTY), 0) AS PROD_QTY
	             , 0                      AS INV_BOH
			FROM W_DIM CG
	        JOIN UV_PROD_RESULT PR WITH(NOLOCK)
	          ON CG.COMPANY_CD    = PR.COMPANY_CD
	         AND CG.BU_CD       = PR.BU_CD
	         AND CG.ITEM_CD     = PR.ITEM_CD
	         AND PR.PLANT_CD    = 'WF01'
	         AND PR.PROD_DATE <![CDATA[>=]]> @{fromMon}+'01' 
	         AND PR.PROD_DATE <![CDATA[<=]]> @{toMon}+'31'
	        JOIN TB_MST_CALENDAR DC WITH(NOLOCK)
	          ON PR.PROD_DATE = DC.YYYYMMDD
	        GROUP BY CG.COMPANY_CD, CG.BU_CD, CG.PROD_LVL2_CD, CG.PROD_LVL3_CD, CG.CUST_LVL2_CD, DC.YEARPWEEK
		),
	    W_DIM_ROW AS 
	    (
	        SELECT D.COMPANY_CD
	             , D.BU_CD
	             , D.PROD_LVL2_CD
	             , D.PROD_LVL2_NM
	             , D.PROD_LVL3_CD
	             , D.PROD_LVL3_NM
	             , D.CUST_LVL2_CD
	             , D.CUST_LVL2_NM
	             , M.YEARPWEEK
	             , M.ALLOC_QTY
	             , M.AP2_SP
	             , M.PROD_QTY
	             , M.INV_BOH
			FROM W_DIM_GROUP D
	        JOIN 
	        (
	        	SELECT TM.COMPANY_CD
	                 , TM.BU_CD
	                 , TM.PROD_LVL2_CD
	                 , TM.PROD_LVL3_CD
	                 , TM.CUST_LVL2_CD
	                 , TM.YEARPWEEK
	                 , MAX(TM.ALLOC_QTY) AS ALLOC_QTY
	                 , MAX(TM.AP2_SP)    AS AP2_SP
	                 , MAX(TM.PROD_QTY)  AS PROD_QTY
	                 , MAX(TM.INV_BOH)   AS INV_BOH
	            FROM 
	            (
					SELECT * FROM W_MEA
	                UNION ALL
	                SELECT * FROM W_PROD_QTY
	            ) TM
	            GROUP BY TM.COMPANY_CD, TM.BU_CD, TM.PROD_LVL2_CD, TM.PROD_LVL3_CD, TM.CUST_LVL2_CD, TM.YEARPWEEK
			) M
	        ON D.COMPANY_CD    = M.COMPANY_CD
			AND D.BU_CD        = M.BU_CD
	        AND D.PROD_LVL2_CD = M.PROD_LVL2_CD
	        AND D.PROD_LVL3_CD = M.PROD_LVL3_CD
	        AND D.CUST_LVL2_CD = M.CUST_LVL2_CD
	    ),
	    W_ROW_GROUP AS 
	    (
	        SELECT A.*
				#foreach( $bucketMap in $_parameter.bucketList )
	  			#if($bucketMap.TOT_TYPE != "MT")
	             , ISNULL(A.${bucketMap.CD}_AP2_SP, 0) - ISNULL(A.${bucketMap.CD}_INV_BOH, 0) - ISNULL(A.${bucketMap.CD}_ALLOC_QTY, 0) AS ${bucketMap.CD}_DELTA
	             , ISNULL(ROUND((ISNULL(A.${bucketMap.CD}_AP2_SP, 0) - ISNULL(A.${bucketMap.CD}_INV_BOH, 0)) / NULLIF(A.${bucketMap.CD}_ALLOC_QTY, 0) * 100, 1), 0) AS  ${bucketMap.CD}_FILL_RATE
				#end
				#end
			FROM 
			(
	        	SELECT NULL AS TMP_COL 
					#foreach( $dimMap in $_parameter.dimList )
	             	 , $dimMap.DIM_CD
	             	 , MAX($dimMap.DIM_CD.replace("NM", "CD")) AS ${dimMap.DIM_CD}_CD
					#end
					#foreach( $bucketMap in $_parameter.bucketList )
	  				#if($bucketMap.TOT_TYPE != "MT")
	                 , SUM(CASE WHEN YEARPWEEK = '$bucketMap.NM' THEN ALLOC_QTY ELSE 0 END) AS ${bucketMap.CD}_ALLOC_QTY
	                 , SUM(CASE WHEN YEARPWEEK = '$bucketMap.NM' THEN AP2_SP    ELSE 0 END) AS ${bucketMap.CD}_AP2_SP
	                 , SUM(CASE WHEN YEARPWEEK = '$bucketMap.NM' THEN PROD_QTY  ELSE 0 END) AS ${bucketMap.CD}_PROD_QTY
	                 , SUM(CASE WHEN YEARPWEEK = '$bucketMap.NM' THEN INV_BOH   ELSE 0 END) AS ${bucketMap.CD}_INV_BOH
	  				#end
					#end
				FROM W_DIM_ROW
	            GROUP BY
				#foreach( $dimMap in $_parameter.dimList )
				#if($velocityCount == 1)
				                   $dimMap.DIM_CD
				#else
				                 , $dimMap.DIM_CD
				#end
				#end
			) A
	    ),
	    W_MEASURE AS 
	    (
	    	SELECT CATEGORY_CD, CATEGORY_NM, CATEGORY_IDX 
	        FROM 
	        (
	        	SELECT NULL AS CATEGORY_CD, NULL AS CATEGORY_NM, NULL AS CATEGORY_IDX
				#foreach( $meaMap in $_parameter.meaList )
	            UNION ALL SELECT '$meaMap.CD', '$meaMap.NM', $velocityCount 
				#end
			) A
	        WHERE CATEGORY_CD IS NOT NULL
	    ),
	    W_MAIN AS 
	    (
	        SELECT NULL AS TMP_COL 
				#foreach( $dimMap in $_parameter.dimList )
	             , $dimMap.DIM_CD
	             , MAX($dimMap.DIM_CD) AS ${dimMap.DIM_CD}_NM
	             , MAX(${dimMap.DIM_CD}_CD) AS ${dimMap.DIM_CD}_CD
				#end
	             <include refid="include.getGrpLvlId"/>
	             , M.CATEGORY_CD
	             , M.CATEGORY_NM
	             , M.CATEGORY_IDX
				#foreach( $bucketMap in $_parameter.bucketList )
	  			#if($bucketMap.TOT_TYPE != "MT")
	             , SUM(CASE
	    		#foreach( $meaMap in $_parameter.meaList )
	                      WHEN M.CATEGORY_CD = '${meaMap.CD}' THEN A.${bucketMap.CD}_${meaMap.CD}
	    		#end
	                      ELSE 0
	                  END
	             ) AS $bucketMap.CD
	             , SUM(CASE WHEN M.CATEGORY_CD = 'FILL_RATE' THEN A.${bucketMap.CD}_ALLOC_QTY ELSE 0 END) AS ${bucketMap.CD}_ALLOC_QTY
	             , SUM(CASE WHEN M.CATEGORY_CD = 'FILL_RATE' THEN A.${bucketMap.CD}_AP2_SP ELSE 0 END) AS ${bucketMap.CD}_AP2_SP
				 , SUM(CASE WHEN M.CATEGORY_CD = 'FILL_RATE' THEN A.${bucketMap.CD}_INV_BOH ELSE 0 END) AS ${bucketMap.CD}_INV_BOH	            
	  			#end
				#end
			FROM W_ROW_GROUP A
	        CROSS JOIN W_MEASURE M
	        WHERE 1 = 1
			#if($_parameter.fillRateFrom != "" and $_parameter.fillRateTo != "")
	          AND ((1=2)
	  		#foreach( $bucketMap in $_parameter.bucketList )
	    	#if($bucketMap.TOT_TYPE != "MT")
	          OR (${bucketMap.CD}_FILL_RATE BETWEEN @{fillRateFrom} AND @{fillRateTo})
	    	#end
	  		#end
	           )
			#elseif ($_parameter.fillRateFrom != "" and $_parameter.fillRateTo == "")
	           AND ((1=2)
	  		#foreach( $bucketMap in $_parameter.bucketList )
	    	#if($bucketMap.TOT_TYPE != "MT")
	             OR (${bucketMap.CD}_FILL_RATE >= @{fillRateFrom})
	    	#end
	  		#end
	           )
			#elseif ($_parameter.fillRateFrom == "" and $_parameter.fillRateTo != "")
	           AND ((1=2)
	  		#foreach( $bucketMap in $_parameter.bucketList )
	    	#if($bucketMap.TOT_TYPE != "MT")
	             OR (${bucketMap.CD}_FILL_RATE <![CDATA[<=]]> @{fillRateTo})
	    	#end
	  		#end
	           )
			#end
			#if($_parameter.deltaFrom != "" and $_parameter.deltaTo != "")
	           AND ((1=2)
	  		#foreach( $bucketMap in $_parameter.bucketList )
	    	#if($bucketMap.TOT_TYPE != "MT")
	             OR (${bucketMap.CD}_DELTA BETWEEN @{deltaFrom} AND @{deltaTo})
	    	#end
	  		#end
	           )
			#elseif ($_parameter.deltaFrom != "" and $_parameter.deltaTo == "")
	           AND ((1=2)
	  		#foreach( $bucketMap in $_parameter.bucketList )
	    	#if($bucketMap.TOT_TYPE != "MT")
	             OR (${bucketMap.CD}_DELTA >= @{deltaFrom})
	    	#end
	  		#end
	           )
			#elseif ($_parameter.deltaFrom == "" and $_parameter.deltaTo != "")
	           AND ((1=2)
	  		#foreach( $bucketMap in $_parameter.bucketList )
	    	#if($bucketMap.TOT_TYPE != "MT")
	             OR (${bucketMap.CD}_DELTA <![CDATA[<=]]> @{deltaTo})
	    	#end
	  		#end
	           )
			#end
	        GROUP BY ROLLUP (
	            <include refid="include.getCdRollup"/>
	         ), M.CATEGORY_CD, M.CATEGORY_NM, M.CATEGORY_IDX
	    )
	    SELECT NULL AS TMP_COL
			#set($preCol = "")
			#foreach( $dimMap in $_parameter.dimList )
	         , $dimMap.DIM_CD
			#if($velocityCount == 1)
		     , CASE WHEN $dimMap.DIM_CD IS NULL THEN @{gvTotal} ELSE ${dimMap.DIM_CD}_NM END AS ${dimMap.DIM_CD}_NM
		     , CASE WHEN $dimMap.DIM_CD IS NULL THEN '' ELSE ${dimMap.DIM_CD}_CD END AS ${dimMap.DIM_CD}_CD
			#else
		     , CASE WHEN $preCol IS NOT NULL 
		            THEN CASE WHEN $dimMap.DIM_CD IS NULL THEN @{gvSubTotal} ELSE ${dimMap.DIM_CD}_NM END
		            ELSE CASE WHEN $dimMap.DIM_CD IS NULL THEN '' ELSE ${dimMap.DIM_CD}_NM END
		        END AS ${dimMap.DIM_CD}_NM
		     , CASE WHEN $preCol IS NOT NULL 
		            THEN CASE WHEN $dimMap.DIM_CD IS NULL THEN '' ELSE ${dimMap.DIM_CD}_CD END
		            ELSE CASE WHEN $dimMap.DIM_CD IS NULL THEN '' ELSE ${dimMap.DIM_CD}_CD END
		        END AS ${dimMap.DIM_CD}_CD
			#end
			#set($preCol = $dimMap.DIM_CD)
			#end
	         , GRP_LVL_ID
	         , CATEGORY_CD
	         , CATEGORY_NM
	         , CATEGORY_IDX
			#set($strInBucket = "")
			#foreach( $bucketMap in $_parameter.bucketList )
	  		#if($bucketMap.TOT_TYPE != "MT")
	         , CASE WHEN CATEGORY_CD = 'FILL_RATE'
	                THEN ISNULL(ROUND((${bucketMap.CD}_AP2_SP - ${bucketMap.CD}_INV_BOH) / NULLIF(${bucketMap.CD}_ALLOC_QTY, 0) * 100, 1), 0)
	                ELSE $bucketMap.CD
	            END AS $bucketMap.CD
	    	#set($strInBucket = $strInBucket + "," +$bucketMap.CD)
	  		#else
	         , CASE WHEN CATEGORY_CD = 'FILL_RATE'
	                THEN ISNULL(ROUND((ISNULL($strInBucket.substring(1).replace(",","_AP2_SP,0)+ISNULL(")_AP2_SP,0)) / NULLIF(ISNULL($strInBucket.substring(1).replace(",","_ALLOC_QTY,0)+ISNULL(")_ALLOC_QTY,0), 0) * 100, 1), 0)
	                ELSE ISNULL($strInBucket.substring(1).replace(",",",0)+ISNULL("),0)
	            END AS $bucketMap.CD
	    	#set($strInBucket = "")
	  		#end
			#end
	         , CASE WHEN CATEGORY_CD = 'FILL_RATE' 
	                THEN ISNULL(ROUND(
	                       (0
			#foreach( $bucketMap in $_parameter.bucketList )
	  		#if($bucketMap.TOT_TYPE != "MT")
	                        + ISNULL(${bucketMap.CD}_AP2_SP,0)
	  		#end
			#end
	                       )
	                       /
	                       NULLIF(0
			#foreach( $bucketMap in $_parameter.bucketList )
	  		#if($bucketMap.TOT_TYPE != "MT")
	                        + ISNULL(${bucketMap.CD}_ALLOC_QTY,0)
	  		#end
			#end
	                       , 0)
	                       * 100, 1), 0)
	                ELSE 0
			#foreach( $bucketMap in $_parameter.bucketList )
	  		#if($bucketMap.TOT_TYPE != "MT")
	                     + ISNULL(ABS($bucketMap.CD),0)
	  		#end
			#end
	            END
	           AS OMIT_FLAG
	    FROM W_MAIN A
	    ORDER BY TMP_COL
	#foreach( $dimMap in $_parameter.dimList )
	           , A.$dimMap.DIM_CD, A.${dimMap.DIM_CD}_NM 
	#end
	           , A.CATEGORY_IDX
    </select>

</mapper>

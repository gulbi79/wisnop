<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dp.targetMgmt">

	<select id="monthlyProfitLossRoleSelect" parameterType="map" resultType="map">
	/****** [ dp.targetMgmt.monthlyProfitLossRoleSelect ] ******/
	BEGIN
	    <include refid="dp.common.salesPlanRole"/>
	
	    SELECT @AP2_YN AS AP2_YN
	         , @AP1_YN AS AP1_YN
	         ;
	
	END
	</select>
	
    <select id="monthlyProfitLossSelect" parameterType="map" resultType="map">
    /****** [ dp.targetMgmt.monthlyProfitLossSelect ] ******/
    <include refid="include.macros"/>
    #getProductTree()
    #getCustomerTree()
    #getSalesOrgTree()
    
    WITH W_CODE AS (
        #set($_parameter.groupCd="DP_AUTH_CTRL")
        <include refid="include.mstCode"/>
    ),
    W_MEA_DATA AS (
        /* 계획구간 이전 */
        SELECT T.COMPANY_CD
             , T.BU_CD
             , T.ITEM_CD
             , T.CUST_GROUP_CD
             , T.YEARMONTH
             , SUM(T.CFM_SP)          AS CFM_SP
             , SUM(T.SALES_PRICE_KRW) AS SALES_PRICE_KRW
             , SUM(T.SALES_AMT_KRW)   AS SALES_AMT_KRW
             , SUM(T.COGS_KRW)        AS COGS_KRW
             , SUM(T.SGNA_KRW)        AS SGNA_KRW
          FROM (
            SELECT SR.COMPANY_CD
                 , SR.BU_CD
                 , SR.ITEM_CD
                 , CT.CUST_GROUP_CD
                 , SUBSTRING(SR.SALES_DATE, 1, 6) AS YEARMONTH
                 , ISNULL(SUM(SR.QTY), 0)         AS CFM_SP
                 , 0                              AS SALES_PRICE_KRW
                 , ISNULL(SUM(SR.AMT_KRW), 0)     AS SALES_AMT_KRW
                 , 0                              AS COGS_KRW
                 , 0                              AS SGNA_KRW
              FROM TB_DYN_SALES_RESULT SR WITH(NOLOCK)
              JOIN TB_MST_CUSTOMER CT WITH(NOLOCK)
                ON (  SR.COMPANY_CD = CT.COMPANY_CD
                  AND SR.BU_CD      = CT.BU_CD
                  AND SR.CUST_CD    = CT.CUST_CD
                )
             WHERE SR.COMPANY_CD = @{GV_COMPANY_CD}
               AND SR.BU_CD      = @{GV_BU_CD}
               AND SR.PLANT_CD   = 'WF01'
#if($_parameter.item_cd and $_parameter.item_cd != "")
               AND SR.ITEM_CD    IN ('$_parameter.item_cd.replace(",","','")')
#end
               AND SR.DEL_FLAG   = 'N'
               AND SR.SALES_DATE <![CDATA[<]]> @{startMonth}
               AND SR.SALES_DATE <![CDATA[<]]> CONVERT(VARCHAR(6), DBO.UFN_GETDATE(), 112)+'01'
               AND SR.SALES_DATE BETWEEN @{fromMon}+'01' AND @{toMon}+'31'
             GROUP BY SR.COMPANY_CD
                 , SR.BU_CD
                 , SR.ITEM_CD
                 , CT.CUST_GROUP_CD
                 , SUBSTRING(SR.SALES_DATE, 1, 6)
             UNION ALL
            SELECT COMPANY_CD
                 , BU_CD
                 , ITEM_CD
                 , CUST_GROUP_CD
                 , YEARMONTH
                 , SUM(CASE WHEN MEAS_CD = 'CFM_SP'          THEN VALUE ELSE 0 END) AS CFM_SP
                 , SUM(CASE WHEN MEAS_CD = 'SALES_PRICE_KRW' THEN VALUE ELSE 0 END) AS SALES_PRICE_KRW
                 , SUM(CASE WHEN MEAS_CD = 'SALES_AMT_KRW'   THEN VALUE ELSE 0 END) AS SALES_AMT_KRW
                 , SUM(CASE WHEN MEAS_CD = 'COGS_KRW'        THEN VALUE ELSE 0 END) AS COGS_KRW
                 , SUM(CASE WHEN MEAS_CD = 'SGNA_KRW'        THEN VALUE ELSE 0 END) AS SGNA_KRW
              FROM TB_KPI_MONTHLY_PL_SIMUL WITH(NOLOCK)
             WHERE COMPANY_CD = @{GV_COMPANY_CD}
               AND BU_CD      = @{GV_BU_CD}
#if($_parameter.item_cd and $_parameter.item_cd != "")
               AND ITEM_CD    IN ('$_parameter.item_cd.replace(",","','")')
#end
               AND YEARMONTH  <![CDATA[<]]> @{startMonth}
               AND YEARMONTH  BETWEEN @{fromMon} AND @{toMon}
               AND ((MEAS_CD = 'CFM_SP'        AND YEARMONTH = CONVERT(VARCHAR(6), DBO.UFN_GETDATE(), 112))
                 OR (MEAS_CD = 'SALES_PRICE_KRW'                                                  )
                 OR (MEAS_CD = 'SALES_AMT_KRW' AND YEARMONTH = CONVERT(VARCHAR(6), DBO.UFN_GETDATE(), 112))
                 OR (MEAS_CD = 'COGS_KRW'                                                         )
                 OR (MEAS_CD = 'SGNA_KRW'                                                         )
               )
             GROUP BY COMPANY_CD
                 , BU_CD
                 , ITEM_CD
                 , CUST_GROUP_CD
                 , YEARMONTH
          ) T
         GROUP BY T.COMPANY_CD
             , T.BU_CD
             , T.ITEM_CD
             , T.CUST_GROUP_CD
             , T.YEARMONTH
         UNION ALL
        /* 계획구간 */
        SELECT COMPANY_CD
             , BU_CD
             , ITEM_CD
             , CUST_GROUP_CD
             , YEARMONTH
             , SUM(CASE WHEN MEAS_CD = 'CFM_SP'          THEN VALUE ELSE 0 END) AS CFM_SP
             , SUM(CASE WHEN MEAS_CD = 'SALES_PRICE_KRW' THEN VALUE ELSE 0 END) AS SALES_PRICE_KRW
             , SUM(CASE WHEN MEAS_CD = 'SALES_AMT_KRW'   THEN VALUE ELSE 0 END) AS SALES_AMT_KRW
             , SUM(CASE WHEN MEAS_CD = 'COGS_KRW'        THEN VALUE ELSE 0 END) AS COGS_KRW
             , SUM(CASE WHEN MEAS_CD = 'SGNA_KRW'        THEN VALUE ELSE 0 END) AS SGNA_KRW
          FROM TB_HIS_MONTHLY_PL_SIMUL WITH(NOLOCK)
         WHERE COMPANY_CD = @{GV_COMPANY_CD}
           AND BU_CD      = @{GV_BU_CD}
           AND PLAN_ID    = @{planId}
#if($_parameter.item_cd and $_parameter.item_cd != "")
           AND ITEM_CD    IN ('$_parameter.item_cd.replace(",","','")')
#end
           AND YEARMONTH  BETWEEN @{startMonth} AND @{endMonth}
           AND YEARMONTH  BETWEEN @{fromMon} AND @{toMon}
           AND MEAS_CD    IN ('CFM_SP','SALES_PRICE_KRW','SALES_AMT_KRW','COGS_KRW','SGNA_KRW')
         GROUP BY COMPANY_CD
             , BU_CD
             , ITEM_CD
             , CUST_GROUP_CD
             , YEARMONTH
    ),
    W_DIM_ROW AS (
        SELECT CG.COMPANY_CD
             , CG.BU_CD
             , ISNULL(IT.PROD_LVL2_CD     , ' ') AS PROD_LVL2_CD
             , ISNULL(IT.PROD_LVL2_NM     , ' ') AS PROD_LVL2_NM
             , ISNULL(IT.PROD_LVL3_CD     , ' ') AS PROD_LVL3_CD
             , ISNULL(IT.PROD_LVL3_NM     , ' ') AS PROD_LVL3_NM
             , ISNULL(CM.CUST_LVL2_CD     , ' ') AS CUST_LVL2_CD
             , ISNULL(CM.CUST_LVL2_NM     , ' ') AS CUST_LVL2_NM
             , CG.CUST_GROUP_CD
             , ISNULL(CM.CUST_NM          , ' ') AS CUST_GROUP_NM
             , IT.ITEM_CD
             , ISNULL(IT.ITEM_NM          , ' ') AS ITEM_NM
             , ISNULL(IT.SPEC             , ' ') AS SPEC
             , ISNULL(IT.DRAW_NO          , ' ') AS DRAW_NO
             , ISNULL(SO.SALES_ORG_LVL3_CD, ' ') AS SALES_ORG_LVL3_CD
             , ISNULL(SO.SALES_ORG_LVL3_NM, ' ') AS SALES_ORG_LVL3_NM
             , ISNULL(SO.SALES_ORG_LVL4_CD, ' ') AS SALES_ORG_LVL4_CD
             , ISNULL(SO.SALES_ORG_LVL4_NM, ' ') AS SALES_ORG_LVL4_NM
             , CASE WHEN CG.SALES_ORG_LVL5_CD IS NULL THEN ' ' ELSE ISNULL(SO.SALES_ORG_LVL5_CD, ' ') END AS SALES_ORG_LVL5_CD
             , CASE WHEN CG.SALES_ORG_LVL5_CD IS NULL THEN ' ' ELSE ISNULL(SO.SALES_ORG_LVL5_NM, ' ') END AS SALES_ORG_LVL5_NM
             , MD.YEARMONTH
             , MD.CFM_SP
             , MD.SALES_PRICE_KRW
             , MD.SALES_AMT_KRW
             , MD.COGS_KRW
             , MD.SGNA_KRW
          FROM TB_MAP_ITEM_CUST_GROUP CG WITH(NOLOCK)
          JOIN W_MEA_DATA MD
            ON (  CG.COMPANY_CD    = MD.COMPANY_CD
              AND CG.BU_CD         = MD.BU_CD
              AND CG.ITEM_CD       = MD.ITEM_CD
              AND CG.CUST_GROUP_CD = MD.CUST_GROUP_CD
            )
          JOIN TB_MST_ITEM IT WITH(NOLOCK)
            ON (  CG.COMPANY_CD = IT.COMPANY_CD
              AND CG.BU_CD      = IT.BU_CD
              AND CG.ITEM_CD    = IT.ITEM_CD
              #set($treeAlias = "IT")
              <include refid="include.productTree"/>
            )
          JOIN TB_MST_CUSTOMER CM WITH(NOLOCK)
            ON (  CG.COMPANY_CD    = CM.COMPANY_CD
              AND CG.BU_CD         = CM.BU_CD
              AND CG.CUST_GROUP_CD = CM.CUST_CD
            )
          LEFT OUTER JOIN UV_MAP_SALES_ORG SO WITH(NOLOCK)
            ON (  CG.COMPANY_CD        = SO.COMPANY_CD
              AND CG.BU_CD             = SO.BU_CD
              AND CG.SALES_ORG_LVL4_CD = SO.SALES_ORG_LVL4_CD
              AND ((CG.SALES_ORG_LVL5_CD IS NULL)
                OR (CG.SALES_ORG_LVL5_CD IS NOT NULL AND CG.SALES_ORG_LVL5_CD = SO.SALES_ORG_LVL5_CD)
              )
            )
         WHERE CG.COMPANY_CD    = @{GV_COMPANY_CD}
           AND CG.BU_CD         = @{GV_BU_CD}
#if($_parameter.customerList and $_parameter.customerList.size() > 0)
           AND EXISTS (
             SELECT 1
               FROM TB_MST_CUSTOMER TT
              WHERE TT.COMPANY_CD    = CG.COMPANY_CD
                AND TT.BU_CD         = CG.BU_CD
                AND TT.CUST_GROUP_CD = CG.CUST_GROUP_CD
                #set($treeAlias = "TT")
                <include refid="include.customerTree"/>
           )
#end
#if($_parameter.salesOrgList and $_parameter.salesOrgList.size() > 0)
			#set($treeAlias = "SO")
			<include refid="include.salesOrgTree"/>
#end
#if($_parameter.item_cd and $_parameter.item_cd != "")
           AND CG.ITEM_CD    IN ('$_parameter.item_cd.replace(",","','")')
#elseif($_parameter.item_nm and $_parameter.item_nm != "")
           AND (IT.ITEM_CD   LIKE '%' + @{item_nm} + '%'
             OR IT.ITEM_NM   LIKE '%' + @{item_nm} + '%'
           )
#end
#if($_parameter.ap2_yn == "Y" and $_parameter.ap1_yn == "N")
           AND EXISTS (
                 SELECT 1
                   FROM TB_MAP_ITEM_CUST_GROUP_AP1 A1 WITH(NOLOCK)
                   JOIN TB_MAP_AP1_AP2 A2 WITH(NOLOCK)
                     ON (  A1.COMPANY_CD  = A2.COMPANY_CD
                       AND A1.AP1_USER_ID = A2.AP1_USER_ID
                       AND A2.AP2_USER_ID = @{GV_USER_ID}
                     )
                   JOIN TB_MAP_USER_ROLE R1 WITH(NOLOCK)
                     ON (  A1.AP1_USER_ID = R1.USER_ID
                       AND A1.BU_CD       = R1.BU_CD
                       AND R1.USE_FLAG    = 'Y'
                     )
                   JOIN W_CODE C1
                     ON (  R1.ROLE_CD   = C1.CODE_CD
                       AND C1.GROUP_CD  = 'DP_AUTH_CTRL'
                       AND C1.ATTB_1_CD = 'Y'
                     )
                  WHERE A1.COMPANY_CD    = CG.COMPANY_CD
                    AND A1.BU_CD         = CG.BU_CD
                    AND A1.ITEM_CD       = CG.ITEM_CD
                    AND A1.CUST_GROUP_CD = CG.CUST_GROUP_CD
                    AND A1.USE_FLAG      = 'Y'
           )
#elseif($_parameter.ap2_yn == "Y" and $_parameter.ap1_yn == "Y")
           AND EXISTS (
                 SELECT 1
                   FROM TB_MAP_ITEM_CUST_GROUP_AP1 A1 WITH(NOLOCK)
                  WHERE A1.COMPANY_CD    = CG.COMPANY_CD
                    AND A1.BU_CD         = CG.BU_CD
                    AND A1.ITEM_CD       = CG.ITEM_CD
                    AND A1.CUST_GROUP_CD = CG.CUST_GROUP_CD
                    AND A1.USE_FLAG      = 'Y'
                    AND A1.AP1_USER_ID   = @{GV_USER_ID}
           )
#end
    ),
    W_ROW_GROUP AS (
        SELECT A.*
#foreach( $bucketMap in $_parameter.bucketList )
             , (A.${bucketMap.CD}_SALES_AMT_KRW - A.${bucketMap.CD}_COGS_KRW) AS ${bucketMap.CD}_GP_KRW
             , (A.${bucketMap.CD}_SALES_AMT_KRW - A.${bucketMap.CD}_COGS_KRW - A.${bucketMap.CD}_SGNA_KRW) AS ${bucketMap.CD}_OP_AMT_KRW
             , ISNULL(ROUND((A.${bucketMap.CD}_SALES_AMT_KRW - A.${bucketMap.CD}_COGS_KRW - A.${bucketMap.CD}_SGNA_KRW) / NULLIF(A.${bucketMap.CD}_SALES_AMT_KRW, 0) * 100, 1), 0) AS ${bucketMap.CD}_OP_RATE
#end
          FROM (
            SELECT NULL AS TMP_COL 
#foreach( $dimMap in $_parameter.dimList )
                 , $dimMap.DIM_CD 
#end
#foreach( $hiddenMap in $_parameter.hiddenList )
                 , MAX($hiddenMap.CD) AS $hiddenMap.CD
#end
#foreach( $bucketMap in $_parameter.bucketList )
                 , SUM(CASE WHEN YEARMONTH = '$bucketMap.BUCKET_VAL' THEN CFM_SP          ELSE 0 END) AS ${bucketMap.CD}_CFM_SP
                 , SUM(CASE WHEN YEARMONTH = '$bucketMap.BUCKET_VAL' THEN SALES_PRICE_KRW ELSE 0 END) AS ${bucketMap.CD}_SALES_PRICE_KRW
                 , SUM(CASE WHEN YEARMONTH = '$bucketMap.BUCKET_VAL' THEN SALES_AMT_KRW   ELSE 0 END) AS ${bucketMap.CD}_SALES_AMT_KRW
                 , SUM(CASE WHEN YEARMONTH = '$bucketMap.BUCKET_VAL' THEN COGS_KRW        ELSE 0 END) AS ${bucketMap.CD}_COGS_KRW
                 , SUM(CASE WHEN YEARMONTH = '$bucketMap.BUCKET_VAL' THEN SGNA_KRW        ELSE 0 END) AS ${bucketMap.CD}_SGNA_KRW
#end
              FROM W_DIM_ROW
             GROUP BY
#foreach( $dimMap in $_parameter.dimList )
#if($foreach.count == 1)
                   $dimMap.DIM_CD
#else
                 , $dimMap.DIM_CD
#end
#end
          ) A
    ),
    W_MEASURE AS (
        SELECT CATEGORY_CD, CATEGORY_NM, CATEGORY_IDX 
          FROM (
            SELECT NULL AS CATEGORY_CD, NULL AS CATEGORY_NM, NULL AS CATEGORY_IDX
#foreach( $meaMap in $_parameter.meaList )
            UNION ALL SELECT '$meaMap.CD', '$meaMap.NM', $foreach.count 
#end
          ) A
         WHERE CATEGORY_CD IS NOT NULL
    ),
    W_MAIN AS (
        SELECT NULL AS TMP_COL 
#foreach( $dimMap in $_parameter.dimList )
             , $dimMap.DIM_CD 
             , MAX($dimMap.DIM_CD) AS ${dimMap.DIM_CD}_NM
#end
#foreach( $hiddenMap in $_parameter.hiddenList )
             , MAX($hiddenMap.CD) AS $hiddenMap.CD
#end
             <include refid="include.getGrpLvlId"/>
             , M.CATEGORY_CD
             , M.CATEGORY_NM
             , M.CATEGORY_IDX
#foreach( $bucketMap in $_parameter.bucketList )
             , SUM(
                 CASE
    #foreach( $meaMap in $_parameter.meaList )
      #if($meaMap.CD != "GP_RATE" and $meaMap.CD != "OP_RATE")
                      WHEN M.CATEGORY_CD = '${meaMap.CD}' THEN A.${bucketMap.CD}_${meaMap.CD}
      #end
    #end
                      ELSE 0
                  END
             ) AS $bucketMap.CD
             , SUM(
                 CASE WHEN M.CATEGORY_CD = 'GP_RATE' THEN A.${bucketMap.CD}_GP_KRW
                      WHEN M.CATEGORY_CD = 'OP_RATE' THEN A.${bucketMap.CD}_OP_AMT_KRW
                      ELSE 0
                  END
             ) AS ${bucketMap.CD}_RATE_TMT1
             , SUM(
                 CASE WHEN M.CATEGORY_CD = 'GP_RATE' THEN A.${bucketMap.CD}_SALES_AMT_KRW
                      WHEN M.CATEGORY_CD = 'OP_RATE' THEN A.${bucketMap.CD}_SALES_AMT_KRW
                      ELSE 0
                  END
             ) AS ${bucketMap.CD}_RATE_TMT2
#end
          FROM W_ROW_GROUP A
         CROSS JOIN W_MEASURE M
         WHERE 1=1
#if($_parameter.opRateFrom != "" and $_parameter.opRateTo != "")
           AND ((1=2)
  #foreach( $bucketMap in $_parameter.bucketList )
             OR (${bucketMap.CD}_OP_RATE BETWEEN @{opRateFrom} AND @{opRateTo})
  #end
           )
#elseif ($_parameter.opRateFrom != "" and $_parameter.opRateTo == "")
           AND ((1=2)
  #foreach( $bucketMap in $_parameter.bucketList )
             OR (${bucketMap.CD}_OP_RATE >= @{opRateFrom})
  #end
           )
#elseif ($_parameter.opRateFrom == "" and $_parameter.opRateTo != "")
           AND ((1=2)
  #foreach( $bucketMap in $_parameter.bucketList )
             OR (${bucketMap.CD}_OP_RATE <![CDATA[<=]]> @{opRateTo})
  #end
           )
#end
         GROUP BY ROLLUP (
            <include refid="include.getCdRollup"/>
         )
             , M.CATEGORY_CD
             , M.CATEGORY_NM
             , M.CATEGORY_IDX
    )
    SELECT NULL AS TMP_COL
          <include refid="include.getDimTotal"/>
         , GRP_LVL_ID
         , CATEGORY_CD
         , CATEGORY_NM
         , CATEGORY_IDX
#foreach( $bucketMap in $_parameter.bucketList )
		 , CASE WHEN CATEGORY_CD = 'GP_RATE' OR CATEGORY_CD = 'OP_RATE'
                THEN ISNULL(ROUND(${bucketMap.CD}_RATE_TMT1 / NULLIF(${bucketMap.CD}_RATE_TMT2, 0) * 100, 1), 0)
                WHEN CATEGORY_CD = 'SALES_PRICE_KRW' AND GRP_LVL_ID != 0 THEN NULL <!-- 강승진 한줄 추가  -->
                 
                ELSE $bucketMap.CD
            END AS $bucketMap.CD
#end




         , CASE WHEN CATEGORY_CD = 'GP_RATE' OR CATEGORY_CD = 'OP_RATE' 
                THEN ISNULL(ROUND(
                       (0
#foreach( $bucketMap in $_parameter.bucketList )
                        + ISNULL(${bucketMap.CD}_RATE_TMT1,0)
#end
                       )
                       /
                       NULLIF(0
#foreach( $bucketMap in $_parameter.bucketList )
                        + ISNULL(${bucketMap.CD}_RATE_TMT2,0)
#end
                       , 0)
                       * 100, 1), 0)
                WHEN CATEGORY_CD = 'SALES_PRICE_KRW' AND GRP_LVL_ID != 0 THEN NULL
                ELSE 0
#foreach( $bucketMap in $_parameter.bucketList )
                     + ISNULL($bucketMap.CD,0)
#end
            END
           AS TOTAL
           
           
           
         , CASE WHEN CATEGORY_CD = 'GP_RATE' OR CATEGORY_CD = 'OP_RATE' 
                THEN ISNULL(ROUND(
                       (0
#foreach( $bucketMap in $_parameter.bucketList )
                        + ISNULL(${bucketMap.CD}_RATE_TMT1,0)
#end
                       )
                       /
                       NULLIF(0
#foreach( $bucketMap in $_parameter.bucketList )
                        + ISNULL(${bucketMap.CD}_RATE_TMT2,0)
#end
                       , 0)
                       * 100, 1), 0)
                WHEN CATEGORY_CD = 'SALES_PRICE_KRW' AND GRP_LVL_ID != 0 THEN 0
                ELSE 0
#foreach( $bucketMap in $_parameter.bucketList )
                     + ISNULL(ABS($bucketMap.CD),0)
#end
            END
           AS OMIT_FLAG
    FROM W_MAIN A
    ORDER BY TMP_COL
#foreach( $dimMap in $_parameter.dimList )
           , A.$dimMap.DIM_CD, A.${dimMap.DIM_CD}_NM 
#end
           , A.CATEGORY_IDX
           
    </select>
	
</mapper>

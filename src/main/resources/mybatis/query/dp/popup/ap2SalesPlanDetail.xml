<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dp.popup">

    <select id="ap2SalesPlanDetailSelect" parameterType="map" resultType="map">
    /****** [ dp.popup.ap2SalesPlanDetailSelect ] ******/
    <include refid="include.macros"/>
    #getProductTree()
    #getCustomerTree()
    
    WITH W_DIM AS (
        SELECT CG.COMPANY_CD
             , CG.BU_CD
             , ISNULL(IT.PROD_LVL3_CD, ' ') AS PROD_LVL3_CD
             , ISNULL(IT.PROD_LVL3_NM, ' ') AS PROD_LVL3_NM
             , ISNULL(CM.CUST_LVL2_CD, ' ') AS CUST_LVL2_CD
             , ISNULL(CM.CUST_LVL2_NM, ' ') AS CUST_LVL2_NM
             , CG.CUST_GROUP_CD
             , CM.CUST_NM AS CUST_GROUP_NM
             , IT.ITEM_CD
             , IT.ITEM_NM
             , IT.SPEC
             , IT.DRAW_NO
             , ISNULL(CG.REMARK, '') AS REMARK
          FROM TB_MAP_ITEM_CUST_GROUP CG WITH(NOLOCK)
          JOIN TB_MST_ITEM IT WITH(NOLOCK)
            ON (  CG.COMPANY_CD   = IT.COMPANY_CD
              AND CG.BU_CD        = IT.BU_CD
              AND CG.ITEM_CD      = IT.ITEM_CD
#if($_parameter.PROD_LVL2_CD and $_parameter.PROD_LVL2_CD != "")
              AND IT.PROD_LVL2_CD IN ('$_parameter.PROD_LVL2_CD.replace(",","','")')
#end
#if($_parameter.PROD_LVL3_CD and $_parameter.PROD_LVL3_CD != "")
              AND IT.PROD_LVL3_CD IN ('$_parameter.PROD_LVL3_CD.replace(",","','")')
#end
              #set($treeAlias = "IT")
              <include refid="include.productTree"/>
            )
          JOIN TB_MST_CUSTOMER CM WITH(NOLOCK)
            ON (  CG.COMPANY_CD    = CM.COMPANY_CD
              AND CG.BU_CD         = CM.BU_CD
              AND CG.CUST_GROUP_CD = CM.CUST_CD
#if($_parameter.CUST_LVL2_CD and $_parameter.CUST_LVL2_CD != "")
              AND CM.CUST_LVL2_CD IN ('$_parameter.CUST_LVL2_CD.replace(",","','")')
#end
            )
         WHERE CG.COMPANY_CD    = @{GV_COMPANY_CD}
           AND CG.BU_CD         = @{GV_BU_CD}
#if($_parameter.customerList and $_parameter.customerList.size() > 0)
           AND EXISTS (
             SELECT 1
               FROM TB_MST_CUSTOMER TT
              WHERE TT.COMPANY_CD    = CG.COMPANY_CD
                AND TT.BU_CD         = CG.BU_CD
                AND TT.CUST_GROUP_CD = CG.CUST_GROUP_CD
                #set($treeAlias = "TT")
                <include refid="include.customerTree"/>
           )
#end
    ),
    W_MEA AS (
        SELECT CG.COMPANY_CD
             , CG.BU_CD
             , CG.ITEM_CD
             , CG.CUST_GROUP_CD
             , SP.YEARPWEEK
             , ISNULL(SP.QTY, 0) AS AP2_SP
          FROM W_DIM CG
          JOIN TB_HIS_SALES_PLAN SP WITH(NOLOCK)
            ON (  CG.COMPANY_CD    = SP.COMPANY_CD
              AND CG.BU_CD         = SP.BU_CD
              AND CG.ITEM_CD       = SP.ITEM_CD
              AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
              AND SP.MEAS_CD       = 'AP2_SP'
              AND SP.PLAN_ID       = @{planId} 
              AND SP.YEARPWEEK     <![CDATA[>=]]> @{startWeek}
              AND SP.YEARPWEEK     <![CDATA[<=]]> @{endWeek}+'B' 
              AND SP.YEARPWEEK     <![CDATA[>=]]> (SELECT MIN(YEARPWEEK) FROM TB_MST_CALENDAR WITH(NOLOCK) WHERE YEARMONTH = @{fromMon}) 
              AND SP.YEARPWEEK     <![CDATA[<=]]> (SELECT MAX(YEARPWEEK) FROM TB_MST_CALENDAR WITH(NOLOCK) WHERE YEARMONTH = @{toMon})
            )
         UNION ALL
        SELECT CG.COMPANY_CD
             , CG.BU_CD
             , CG.ITEM_CD
             , CG.CUST_GROUP_CD
             , SP.YEARPWEEK
             , ISNULL(SP.QTY, 0) AS AP2_SP
          FROM W_DIM CG
          JOIN TB_KPI_SALES_PLAN SP WITH(NOLOCK)
            ON (  CG.COMPANY_CD    = SP.COMPANY_CD
              AND CG.BU_CD         = SP.BU_CD
              AND CG.ITEM_CD       = SP.ITEM_CD
              AND CG.CUST_GROUP_CD = SP.CUST_GROUP_CD
              AND SP.MEAS_CD       = 'AP2_SP'
              AND SP.YEARPWEEK     <![CDATA[<]]> @{startWeek} 
              AND SP.YEARPWEEK     <![CDATA[>=]]> (SELECT MIN(YEARPWEEK) FROM TB_MST_CALENDAR WHERE YEARMONTH = @{fromMon}) 
              AND SP.YEARPWEEK     <![CDATA[<=]]> (SELECT MAX(YEARPWEEK) FROM TB_MST_CALENDAR WHERE YEARMONTH = @{toMon}) 
            )
    ),
    W_DIM_ROW AS (
        SELECT D.COMPANY_CD
             , D.BU_CD
             , D.PROD_LVL3_CD
             , D.PROD_LVL3_NM
             , D.CUST_LVL2_CD
             , D.CUST_LVL2_NM
             , D.CUST_GROUP_CD
             , D.CUST_GROUP_NM
             , D.ITEM_CD
             , D.ITEM_NM
             , D.SPEC
             , D.DRAW_NO
             , D.REMARK
             , M.YEARPWEEK
             , M.AP2_SP
          FROM W_DIM D
          LEFT OUTER JOIN W_MEA M
            ON (  D.COMPANY_CD    = M.COMPANY_CD
              AND D.BU_CD         = M.BU_CD
              AND D.ITEM_CD       = M.ITEM_CD
              AND D.CUST_GROUP_CD = M.CUST_GROUP_CD
            )
    ),
    W_ROW AS (
        SELECT NULL AS COL_TMP
#foreach( $dimMap in $_parameter.dimList )
             , $dimMap.DIM_CD 
             , $dimMap.DIM_CD AS ${dimMap.DIM_CD}_NM 
#end
             , YEARPWEEK
             , AP2_SP
          FROM W_DIM_ROW
    ),
    W_MEASURE AS (
        SELECT CATEGORY_CD, CATEGORY_NM, CATEGORY_IDX 
          FROM (
            SELECT NULL AS CATEGORY_CD, NULL AS CATEGORY_NM, NULL AS CATEGORY_IDX
#foreach( $meaMap in $_parameter.meaList )
            UNION ALL SELECT '$meaMap.CD', '$meaMap.NM', $velocityCount 
#end
          ) A
         WHERE CATEGORY_CD IS NOT NULL
    ),
    W_MAIN AS (
        SELECT NULL AS TMP_COL 
#foreach( $dimMap in $_parameter.dimList )
             , $dimMap.DIM_CD
             , MAX(${dimMap.DIM_CD}_NM) AS ${dimMap.DIM_CD}_NM
#end
             <include refid="include.getGrpLvlId"/>
             , M.CATEGORY_CD
             , M.CATEGORY_NM
             , M.CATEGORY_IDX
#foreach( $bucketMap in $_parameter.bucketList )
             , SUM(
                 CASE
    #foreach( $meaMap in $_parameter.meaList )
                      WHEN A.YEARPWEEK = '$bucketMap.NM' AND M.CATEGORY_CD = '${meaMap.CD}' THEN A.${meaMap.CD}
    #end
                      ELSE 0
                  END
             ) AS $bucketMap.CD
#end
          FROM W_ROW A
         CROSS JOIN W_MEASURE M
         GROUP BY ROLLUP (
            <include refid="include.getCdRollup"/>
         )
             , M.CATEGORY_CD
             , M.CATEGORY_NM
             , M.CATEGORY_IDX
    )
    SELECT NULL AS TMP_COL
           <include refid="include.getDimTotal"/>
         , GRP_LVL_ID
         , CATEGORY_CD
         , CATEGORY_NM
         , CATEGORY_IDX
#foreach( $bucketMap in $_parameter.bucketList )
         , $bucketMap.CD
#end
         , 0
           AS TOTAL
    FROM W_MAIN A
    ORDER BY TMP_COL
#foreach( $dimMap in $_parameter.dimList )
           , A.$dimMap.DIM_CD, A.${dimMap.DIM_CD}_NM 
#end
           , A.CATEGORY_IDX
    </select>

</mapper>
